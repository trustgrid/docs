swagger: '2.0'
info:
  version: 1.0.0
  title: Trustgrid Management API
schemes:
  - https
host: api.trustgrid.io
paths:
  /alert:
    get:
      deprecated: true
      description: |-
        List events, newest first. This is deprecated; use `/v2/event` instead.

        ---

        Requires `alerts::read` permission.
      parameters:
        - description: Start time (unix timestamp) to query from
          in: query
          name: timestamp
          type: number
        - description: Limit number of alerts to return
          in: query
          name: limit
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Alert'
            type: array
      tags:
        - Alerts
  /alert/{nodeID}:
    get:
      description: |-
        List events for a node (appliance or agent), newest first

        ---

        Requires `alerts::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Alert'
            type: array
      tags:
        - Alerts
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /audit/download/config:
    get:
      description: |-
        Download configuration change audits

        ---

        Requires `audits::read:config` permission.
      parameters:
        - description: ID for the item to audit. If specified, must include itemType.
          in: query
          name: itemID
          type: string
        - description: Type of item to audit, e.g., Node or Cluster. If specified, must include itemID
          in: query
          name: itemType
          type: string
        - description: Start time (unix timestamp) to query from
          in: query
          name: timestamp
          type: string
        - description: End time (unix timestamp) to query to
          in: query
          name: eTime
          type: string
        - description: Audit type to filter (create, delete, change, or action)
          in: query
          name: auditEvent
          type: string
        - description: IP address filter
          in: query
          name: ip
          type: string
        - description: User name filter
          in: query
          name: user
          type: string
        - description: Details text filter
          in: query
          name: details
          type: string
      produces:
        - text/csv
      responses:
        '200':
          description: OK
      tags:
        - Audit
  /audit/download/node:
    get:
      description: |-
        Download node (appliance or agent) audits

        ---

        Requires `audits::read:node` permission.
      parameters:
        - description: Start time (unix timestamp) to query from
          in: query
          name: timestamp
          type: string
        - description: Node FQDN
          in: query
          name: FQDN
          type: string
      produces:
        - text/csv
      responses:
        '200':
          description: OK
      tags:
        - Audit
  /audit/download/user:
    get:
      description: |-
        Download authentication audits

        ---

        Requires `audits::read:user` permission.
      produces:
        - text/csv
      responses:
        '200':
          description: OK
      tags:
        - Audit
  /audit/tail/config:
    get:
      description: |-
        List configuration change audits

        ---

        Requires `audits::read:config` permission.
      parameters:
        - description: ID for the item to audit. If specified, must include itemType.
          in: query
          name: itemID
          type: string
        - description: Type of item to audit, e.g., Node or Cluster. If specified, must include itemID
          in: query
          name: itemType
          type: string
        - description: Start time (unix timestamp) to query from
          in: query
          name: timestamp
          type: string
        - description: End time (unix timestamp) to query to
          in: query
          name: eTime
          type: string
        - description: Audit type to filter (create, delete, change, or action)
          in: query
          name: auditEvent
          type: string
        - description: IP address filter
          in: query
          name: ip
          type: string
        - description: User name filter
          in: query
          name: user
          type: string
        - description: Details text filter
          in: query
          name: details
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              description: ConfigChange
              properties:
                auditType:
                  description: Type of change
                  enum:
                    - change
                    - create
                    - delete
                    - action
                  type: string
                ip:
                  description: IP address of the client that initiated the change
                  example: 44.44.44.44
                  type: string
                itemId:
                  description: Unique ID of the item that was changed
                  example: 19084f81-5668-41ee-adbe-295e4c65531a
                  type: string
                itemType:
                  description: Type of the item that was changed
                  example: Node
                  type: string
                message:
                  description: Message describing the change
                  example: Node license created
                  type: string
                timestamp:
                  description: Unix timestamp when the change happened
                  example: 1729533326
                  type: string
                uid:
                  description: Unique ID of the change
                  example: 8845f684-4ffe-4b01-a62f-5619a7eae486
                  type: string
                userName:
                  description: User name of the client that initiated the change
                  example: admin@trustgrid.io
                  type: string
              type: object
            type: array
      tags:
        - Audit

  /audit/tail/flow_logs:
    get:
      deprecated: true
      description: |-
        List recent flow logs. This is deprecated; use `/v2/audit/flow-logs` instead.

        ---

        Requires `audits::read:flows` permission.
      parameters:
        - description: Unix timestamp for the start of the log window
          in: query
          name: sTime
          type: number
        - description: Unix timestamp for the end of the log window
          in: query
          name: eTime
          type: number
        - description: Comparison operator for the end of the log window
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          in: query
          name: eTimeOp
          type: string
        - description: IP protocol
          in: query
          name: protocol
          type: string
        - description: Source IP address
          in: query
          name: srcIp
          type: string
        - description: Destination IP address
          in: query
          name: dstIp
          type: string
        - description: Source port
          in: query
          name: srcPort
          type: number
        - description: Comparison operator for the source port
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          in: query
          name: srcPortOp
          type: string
        - description: Destination port
          in: query
          name: dstPort
          type: number
        - description: Comparison operator for the dest port
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          in: query
          name: dstPortOp
          type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          type: number
        - description: Source node name
          in: query
          name: srcNode
          type: string
        - description: Dest node name
          in: query
          name: dstNode
          type: string
        - description: Flow logging node ID
          in: query
          name: node
          type: string
        - description: When true, newer flow logs will be listed first
          in: query
          name: reverse
          type: boolean
        - description: If provided, a flow must match at least one of the TCP flags provided. Decimal encoded, see flow log TCP flag encoding.
          in: query
          type: array
          items:
            type: number
          name: tcpFlags
        - description: Continuation cursor from previous query
          in: query
          name: cursor
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers:
            x-cursor:
              description: Continuation cursor for the next query
              type: string
          schema:
            items:
              description: FlowLog
              properties:
                activityID:
                  description: Threat Intelligence activity ID
                  example: 9aa2bbc3-4265-475b-b977-c94b1ee25a1f
                  type: string
                destBytes:
                  description: Destination bytes transferred
                  example: 100
                  type: number
                destIP:
                  description: Destination IP address
                  example: 1.1.1.1
                  type: string
                destNode:
                  description: Destination node name
                  example: mynode
                  type: string
                destPort:
                  description: Destination port
                  example: 1234
                  type: number
                endTime:
                  description: Start time of the flow
                  example: '2022-11-01T22:46:02.730Z'
                  type: string
                protocol:
                  description: Protocol
                  enum:
                    - TCP
                    - UDP
                    - ICMP
                    - UNKNOWN
                  example: TCP
                  type: string
                sourceBytes:
                  description: Source bytes transferred
                  example: 100
                  type: number
                sourceIP:
                  description: Source IP address
                  example: 2.2.2.2
                  type: string
                sourceNode:
                  description: Source node name
                  example: mynode
                  type: string
                sourcePort:
                  description: Source port
                  example: 1234
                  type: number
                startTime:
                  description: Start time of the flow
                  example: '2022-11-01T22:46:01.765Z'
                  type: string
                tcpFlags:
                  description: |-
                    TCP Flags encoded in hex:
                    * 0x01 - FIN
                    * 0x02 - SYN
                    * 0x04 - RST
                    * 0x08 - PSH
                    * 0x10 - ACK
                    * 0x20 - URG
                  example: '00100001'
                  type: string
                ztnaAppID:
                  description: ZTNA application ID
                  example: 9aa2bbc3-4265-475b-b977-c94b1ee25a1f
                  type: string
                ztnaSessionID:
                  description: ZTNA application ID
                  example: 9aa2bbc3-4265-475b-b977-c94b1ee25a1f
                  type: string
              type: object
            type: array
      tags:
        - Audit
  /audit/tail/node:
    get:
      description: |-
        List node (appliance or agent) audits

        ---

        Requires `audits::read:node` permission.
      parameters:
        - description: Start time (unix timestamp) to query from
          in: query
          name: timestamp
          type: string
        - description: Node FQDN
          in: query
          name: FQDN
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Audit
  /audit/tail/user:
    get:
      description: |-
        List authentication audits

        ---

        Requires `audits::read:user` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Audit
  /cluster:
    get:
      description: Get all clusters
      parameters:
        - description: If specified, the nodes will return with their associated configuration.
          in: query
          name: withConfig
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ClusterModel'
            type: array
      tags:
        - Cluster
    post:
      consumes:
        - application/json
      description: |
        Create a cluster
      parameters:
        - in: body
          name: cluster
          schema:
            $ref: '#/definitions/CreateClusterModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
  /cluster/{clusterFQDN}:
    delete:
      description: Delete a cluster
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
    get:
      description: Get a cluster
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClusterModel'
        '404':
          description: Cluster not found
      tags:
        - Cluster
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    put:
      consumes:
        - application/json
      description: Update a cluster
      parameters:
        - in: body
          name: ClusterModel
          required: true
          schema:
            $ref: '#/definitions/ClusterModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
  /cluster/{clusterFQDN}/active/{nodeID}:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Designate the specified node as the active cluster member
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster

  /cluster/{clusterFQDN}/config/connectors:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    put:
      consumes:
        - application/json
      description: |
        Update connectors configuration for a cluster

        ---

        Requires `node::configure::connectors` permissions
      parameters:
        - description: Config body
          in: body
          name: config
          required: true
          schema:
            $ref: '#/definitions/ConnectorConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
    delete:
      consumes:
        - application/json
      description: |
        Delete the connector config for a cluster

        ---

        Requires `node::configure::connectors` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Cluster


  /v2/cluster/{clusterFQDN}/config/connectors:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    post:
      consumes:
        - application/json
      description: |
        Add a connector to a cluster. Requires V2 connector config.

        ---

        Requires `node::configure::connectors` permissions
      parameters:
        - description: Connector
          in: body
          name: connector
          required: true
          schema:
            $ref: '#/definitions/EdgeConnector'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster

  /v2/cluster/{clusterFQDN}/config/connectors/upgrade:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    post:
      consumes:
        - application/json
      description: |
        Upgrade a cluster's connector config to V2.

        ---

        Requires `node::configure::connectors` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster

  /v2/cluster/{clusterFQDN}/config/connectors/{connectorID}:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Connector ID
        in: path
        name: connectorID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update a connector on a cluster. Requires V2 connector config.

        ---

        Requires `node::configure::connectors` permissions
      parameters:
        - description: Connector
          in: body
          name: connector
          required: true
          schema:
            $ref: '#/definitions/EdgeConnector'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
    delete:
      consumes:
        - application/json
      description: |
        Delete a connector from a cluster. Requires V2 connector config.

        ---

        Requires `node::configure::connectors` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Cluster


  /cluster/{clusterFQDN}/config/network:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    put:
      consumes:
        - application/json
      description: |
        Update network configuration for a cluster

        ---

        Requires `node::configure:network` permissions
      parameters:
        - description: Network Config
          in: body
          name: config
          required: true
          schema:
            properties:
              acls:
                items:
                  properties:
                    action:
                      enum:
                        - allow
                        - drop
                        - reject
                      type: string
                    description:
                      type: string
                    dest:
                      description: Destination IP CIDR
                      type: string
                    line:
                      description: Line number
                      maximum: 32768
                      minimum: 1
                      type: number
                    ports:
                      description: Port or port range
                      type: string
                    protocol:
                      enum:
                        - any
                        - icmp
                        - tcp
                        - udp
                      type: string
                    source:
                      description: Source IP CIDR
                      type: string
                  required:
                    - protocol
                    - source
                    - dest
                    - action
                  type: object
                type: array
              darkMode:
                type: boolean
              forwarding:
                type: boolean
              interfaces:
                items:
                  properties:
                    cloudRoutes:
                      items:
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          route:
                            description: Route CIDR
                            example: 192.168.10.0/24
                            type: string
                        type: object
                      type: array
                    clusterIP:
                      description: Cluster IP
                      type: string
                    clusterRouteTables:
                      items:
                        description: Cluster route tables
                        type: string
                      type: array
                    clusterRoutes:
                      items:
                        description: Cluster routes
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          route:
                            description: Route CIDR
                            example: 192.168.10.0/24
                            type: string
                        required:
                          - route
                        type: object
                      type: array
                    description:
                      description: Interface description
                      example: My interface
                      type: string
                    dhcp:
                      default: false
                      description: Enable DHCP
                      example: false
                      type: boolean
                    dhcpPool:
                      description: DHCP pool
                      type: string
                    dns:
                      items:
                        description: DNS servers
                        type: string
                      type: array
                    duplex:
                      description: Interface duplex
                      enum:
                        - full
                        - half
                      type: string
                    gateway:
                      description: Gateway IP
                      type: string
                    ip:
                      description: Interface IP
                      type: string
                    mode:
                      description: Interface mode
                      enum:
                        - auto
                        - manual
                      type: string
                    mtu:
                      description: MTU
                      example: 1500
                      maximum: 9001
                      minimum: 1300
                      type: number
                    nic:
                      description: Network interface name
                      example: eth0
                      type: string
                    routes:
                      items:
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          next:
                            description: Next hop
                            example: 192.168.10.10
                            type: string
                          route:
                            description: Route CIDR
                            example: 192.168.10.0/24
                            type: string
                        required:
                          - route
                        type: object
                      type: array
                    speed:
                      description: Interface speed
                      type: number
                    subInterfaces:
                      items:
                        properties:
                          description:
                            description: Interface description
                            example: My interface
                            type: string
                          ip:
                            description: sub-interface IP
                            type: string
                          routes:
                            items:
                              properties:
                                description:
                                  description: Route description
                                  example: My route
                                  type: string
                                next:
                                  description: Next hop
                                  example: 192.168.10.10
                                  type: string
                                route:
                                  description: Route CIDR
                                  example: 192.168.10.0/24
                                  type: string
                              required:
                                - route
                              type: object
                            type: array
                          vlanID:
                            default: 1
                            description: VLAN ID
                            example: 1
                            maximum: 4094
                            minimum: 1
                            type: number
                          vrf:
                            description: VRF name
                            example: default
                            type: string
                        required:
                          - vlanID
                          - ip
                        type: object
                      type: array
                    virtual:
                      default: false
                      description: Whether the interface is virtual
                      example: false
                      type: boolean
                    vrf:
                      description: VRF name
                      example: default
                      type: string
                  required:
                    - nic
                  type: object
                type: array
              nats:
                items:
                  properties:
                    description:
                      description: NAT description
                      type: string
                    dest:
                      description: NAT destination IP CIDR
                      type: string
                    masquerade:
                      type: boolean
                    source:
                      description: NAT source IP CIDR
                      type: string
                    toDest:
                      description: Translated dest IP CIDR
                      type: string
                    toSource:
                      description: Translated source IP CIDR
                      type: string
                  type: object
                type: array
              routes:
                items:
                  properties:
                    description:
                      type: string
                    dest:
                      type: string
                    dev:
                      type: string
                    metric:
                      description: Route metric
                      maximum: 200
                      minimum: 1
                      type: number
                    via:
                      description: Next hop IP address
                      type: string
                  required:
                    - dest
                  type: object
                type: array
              rules:
                items:
                  properties:
                    action:
                      enum:
                        - accept
                        - drop
                        - reject
                        - forward
                        - dnat
                      type: string
                    description:
                      description: Rule description
                      type: string
                    dest:
                      description: Destination IP CIDR or `public` or `private`
                      type: string
                    dmac:
                      description: DNAT MAC address
                      type: string
                    dnat:
                      description: DNAT IP address
                      type: string
                    iface:
                      description: Interface name
                      type: string
                    in:
                      type: string
                    line:
                      description: Rule number
                      maximum: 32768
                      minimum: 1
                      type: number
                    ports:
                      description: Port or port range
                      type: string
                    protocol:
                      enum:
                        - any
                        - icmp
                        - tcp
                        - udp
                      type: string
                    snat:
                      description: Enable SNAT
                      type: boolean
                    source:
                      description: Source IP CIDR or `public` or `private`
                      type: string
                    vrf:
                      description: VRF name
                      type: string
                  required:
                    - protocol
                    - source
                    - dest
                    - action
                  type: object
                type: array
              tunnels:
                items:
                  properties:
                    description:
                      type: string
                    destination:
                      type: string
                    dpdInterval:
                      type: number
                    dpdRetries:
                      type: number
                    enabled:
                      type: boolean
                    ike:
                      enum:
                        - 1
                        - 2
                      type: number
                    ikeCipher:
                      enum:
                        - aes128-sha1
                        - aes128-sha256
                        - aes256-sha1
                        - aes256-sha256
                      type: string
                    ikeGroup:
                      enum:
                        - 2
                        - 5
                        - 14
                        - 15
                        - 16
                      type: number
                    ip:
                      type: string
                    ipsecCipher:
                      enum:
                        - aes128-sha1
                        - aes128-sha256
                        - aes256-sha1
                        - aes256-sha256
                      type: string
                    localId:
                      type: string
                    mtu:
                      maximum: 10000
                      minimum: 1000
                      type: number
                    name:
                      type: string
                    networkId:
                      type: string
                    pfs:
                      enum:
                        - 0
                        - 2
                        - 5
                        - 14
                        - 15
                        - 16
                      type: number
                    presharedKey:
                      type: string
                    psk:
                      type: string
                    publicKey:
                      type: string
                    rekeyInterval:
                      type: number
                    remoteId:
                      type: string
                    replayWindow:
                      enum:
                        - 32
                        - 64
                        - 128
                        - 256
                        - 512
                        - 1024
                        - 2048
                        - 4096
                        - 8192
                      type: number
                    type:
                      enum:
                        - ipsec
                        - gre
                        - vnet
                        - wireguard
                      type: string
                    vrf:
                      type: string
                  required:
                    - name
                    - enabled
                    - mtu
                  type: object
                type: array
              vrfs:
                items:
                  properties:
                    acls:
                      items:
                        properties:
                          action:
                            enum:
                              - allow
                              - drop
                              - reject
                            type: string
                          description:
                            description: ACL description
                            type: string
                          dest:
                            description: Destination IP CIDR
                            type: string
                          line:
                            description: Line number
                            maximum: 32768
                            minimum: 1
                            type: number
                          ports:
                            description: Port or port range
                            type: string
                          protocol:
                            enum:
                              - any
                              - icmp
                              - tcp
                              - udp
                            type: string
                          source:
                            description: Source IP CIDR
                            type: string
                        required:
                          - protocol
                          - source
                          - dest
                          - action
                        type: object
                      type: array
                    description:
                      description: VRF description
                      type: string
                    forwarding:
                      type: boolean
                    name:
                      description: VRF name
                      type: string
                    nats:
                      items:
                        properties:
                          description:
                            description: NAT description
                            type: string
                          dest:
                            description: NAT destination IP CIDR
                            type: string
                          masquerade:
                            description: Enable masquerade
                            type: boolean
                          source:
                            description: NAT source IP CIDR
                            type: string
                          toDest:
                            description: Translated dest IP CIDR
                            type: string
                          toSource:
                            description: Translated source IP CIDR
                            type: string
                        type: object
                      type: array
                    routes:
                      items:
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          dest:
                            description: Route CIDR
                            type: string
                          dev:
                            description: Device name
                            type: string
                          metric:
                            description: Route metric
                            maximum: 200
                            minimum: 1
                            type: number
                          via:
                            description: Next hop IP address
                            type: string
                        required:
                          - dest
                        type: object
                      type: array
                    rules:
                      items:
                        properties:
                          action:
                            enum:
                              - accept
                              - drop
                              - reject
                              - forward
                              - dnat
                            type: string
                          description:
                            description: Rule description
                            type: string
                          dest:
                            description: Destination IP CIDR or `public` or `private`
                            type: string
                          dmac:
                            description: DNAT MAC address
                            type: string
                          dnat:
                            description: DNAT IP address
                            type: string
                          iface:
                            description: Interface name
                            type: string
                          in:
                            type: string
                          line:
                            description: Rule number
                            maximum: 32768
                            minimum: 1
                            type: number
                          ports:
                            description: Port or port range
                            type: string
                          protocol:
                            enum:
                              - any
                              - icmp
                              - tcp
                              - udp
                            type: string
                          snat:
                            description: Enable SNAT
                            type: boolean
                          source:
                            description: Source IP CIDR or `public` or `private`
                            type: string
                          vrf:
                            description: VRF name
                            type: string
                        required:
                          - protocol
                          - source
                          - dest
                          - action
                        type: object
                      type: array
                  required:
                    - name
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster

  /cluster/{clusterFQDN}/config/services:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    put:
      consumes:
        - application/json
      description: |
        Update services configuration for a cluster.

        ---

        Requires `nodes::configure::services` permissions.
      parameters:
        - description: Config body
          in: body
          name: config
          required: true
          schema:
            $ref: '#/definitions/ServiceConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
    delete:
      consumes:
        - application/json
      description: |
        Remove a cluster's services configuration.

        ---

        Requires `nodes::configure::services` permissions.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Cluster

  /v2/cluster/{clusterFQDN}/config/services:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    post:
      consumes:
        - application/json
      description: |
        Add a service to a cluster. Requires V2 services config.

        ---

        Requires `node::configure::services` permissions
      parameters:
        - description: Service
          in: body
          name: service
          required: true
          schema:
            $ref: '#/definitions/EdgeService'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster

  /v2/cluster/{clusterFQDN}/config/services/upgrade:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    post:
      consumes:
        - application/json
      description: |
        Upgrade a cluster's services config to V2.

        ---

        Requires `node::configure::services` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster

  /v2/cluster/{clusterFQDN}/config/services/{serviceID}:
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Service ID
        in: path
        name: serviceID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update a service on a cluster. Requires V2 services config.

        ---

        Requires `node::configure::services` permissions
      parameters:
        - description: Service
          in: body
          name: service
          required: true
          schema:
            $ref: '#/definitions/EdgeService'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Cluster
    delete:
      consumes:
        - application/json
      description: |
        Delete a service from a cluster. Requires V2 services config.

        ---

        Requires `node::configure::services` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Cluster


  /cluster/{clusterFQDN}/tag/{tagName}:
    delete:
      consumes:
        - application/json
      description: Delete a tag from a cluster
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Cluster
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Tag name
        in: path
        name: tagName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Set a tag on a cluster
      parameters:
        - in: body
          name: tag
          required: true
          schema:
            $ref: '#/definitions/TagValueModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Cluster
  /domain/{domainName}:
    get:
      description: |-
        Get domain details

        ---

        Requires `domains::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            description: Domain
            properties:
              config:
                description: Domain configuration
                type: object
            type: object
        '404':
          description: Not found
      tags:
        - Domain
    parameters:
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
  /domain/{domainName}/config/alert:
    parameters:
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update alert configuration

        ---

        Requires `domains::configure:thresholds` permission.
      parameters:
        - description: Alert configuration
          in: body
          name: alert
          required: true
          schema:
            description: Alert configuration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain
  /domain/{domainName}/config/apigw:
    parameters:
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update API GW configuration

        ---

        Requires `domains::configure:gateway` permission.
      parameters:
        - description: APIGW configuration
          in: body
          name: apigw
          required: true
          schema:
            description: APIGW configuration
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain
  /group:
    get:
      description: Requires `groups::read` permissions
      responses:
        '200':
          description: List of groups
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      summary: List all groups in an organization
      tags:
        - User
        - Group
    post:
      description: Requires `groups::modify` permissions
      parameters:
        - description: The group object to be created
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: Group successfully created
      summary: Create a new group
      tags:
        - User
        - Group
  /group/{groupId}/members/{email}:
    delete:
      description: Requires `groups::modify` permissions
      parameters:
        - description: ID of the group to remove a member from
          in: path
          name: groupId
          required: true
          type: string
        - description: Email of the member to be removed
          in: path
          name: email
          required: true
          type: string
      responses:
        '200':
          description: Member successfully removed from the group
      summary: Remove a member from a group
      tags:
        - User
        - Group
  /group/{uid}:
    delete:
      description: Requires `groups::modify` permissions
      parameters:
        - description: ID of the group to delete
          in: path
          name: uid
          required: true
          type: string
      responses:
        '200':
          description: Group successfully deleted
      summary: Delete a group by UID
      tags:
        - User
        - Group
    get:
      description: Requires `groups::read` permissions
      parameters:
        - description: UID of the group to retrieve
          in: path
          name: uid
          required: true
          type: string
      responses:
        '200':
          description: The group object
          schema:
            $ref: '#/definitions/Group'
        '404':
          description: Group does not exist
      summary: Retrieve a group by UID
      tags:
        - User
        - Group
  /group/{uid}/idps:
    get:
      description: Requires `groups::read` permissions
      parameters:
        - description: UID of the group
          in: path
          name: uid
          required: true
          type: string
      responses:
        '200':
          description: List of Identity Providers
          schema:
            items:
              $ref: '#/definitions/IdpGroup'
            type: array
      summary: List all Identity Providers for a group
      tags:
        - User
        - Group
  /group/{uid}/members:
    get:
      description: Requires `groups::read` permissions
      parameters:
        - description: UID of the group
          in: path
          name: uid
          required: true
          type: string
      responses:
        '200':
          description: List of group members
          schema:
            items:
              $ref: '#/definitions/GroupMember'
            type: array
      summary: List all members of a group
      tags:
        - User
        - Group
    post:
      description: Requires `groups::modify` permissions
      parameters:
        - description: ID of the group to add a member to
          in: path
          name: uid
          required: true
          type: string
        - description: The group member object to be added
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GroupMember'
      responses:
        '200':
          description: Member successfully added to the group
      summary: Add a member to a group
      tags:
        - User
        - Group
  /node:
    get:
      description: |-
        List nodes (appliances and agents)

        ---

        Requires `nodes::read` permission.
      parameters:
        - description: Comma-separated key:value pairs for tag filtering, e.g., `location:Austin,device:Trustgrid`.
          in: query
          name: tags
          type: string
        - description: |-
            List of fields to return from the API. Supports nested fields and anything in the Node schema. Each field should be listed individually, e.g., `projection[]=online&projection[]=uid`.

            ---

            If using curl, the `-g` flag will automatically escape the brackets for you.

          in: query
          name: 'projection[]'
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Node'
            type: array
      tags:
        - Node
        - Agent
  /node/license:
    get:
      consumes:
        - application/json
      description: Get a license to register a node
      produces:
        - text/plain
      responses:
        '200':
          description: License body
          schema:
            type: string
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
    parameters:
      - description: node name
        in: query
        name: name
        required: true
        type: string
  /node/{nodeID}:
    delete:
      description: |-
        Delete a node (appliance or agent)

        ---

        Requires `nodes::delete` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Node
        - Agent
    get:
      description: |-
        Get a node (appliance or agent)

        ---

        Requires `nodes::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '404':
          description: Not Found
      tags:
        - Node
        - Agent
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a node (appliance or agent)

        ---

        Requires `nodes::manage` permission.
      parameters:
        - description: Node updates
          in: body
          name: updates
          schema:
            description: Node updates
            properties:
              cluster:
                description: Cluster FQDN - requires `nodes::cluster` permission to modify
                example: mycluster.trustgrid.io
                type: string
              state:
                description: Node state
                enum:
                  - ACTIVE
                  - INACTIVE
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent
  /node/{nodeID}/config/alert:
    parameters:
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Update alert configuration for a node (appliance)

        ---

        Note: request body will be validated by JSON schema of the plugin
      parameters:
        - description: Config body
          in: body
          name: config
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
  /node/{nodeID}/config/cluster:
    parameters:
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Update cluster configuration for a node (appliance)

        ---

        Note: request body will be validated by JSON schema of the plugin
      parameters:
        - description: Config body
          in: body
          name: config
          required: true
          schema:
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node

  /node/{nodeID}/config/connectors:
    parameters:
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Update connectors configuration for a node (appliance or agent)

        ---

        Note: request body will be validated by JSON schema of the plugin
      parameters:
        - description: Config body
          in: body
          name: config
          required: true
          schema:
            $ref: '#/definitions/ConnectorConfig'
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent
    delete:
      consumes:
        - application/json
      description: |
        Delete the connector config for a node (appliance or agent)

        ---

        Requires `node::configure::connectors` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent

  /v2/node/{nodeID}/config/connectors:
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Add a connector to a node (appliance or agent). Requires V2 connector config.

        ---

        Requires `node::configure::connectors` permissions
      parameters:
        - description: Connector
          in: body
          name: connector
          required: true
          schema:
            $ref: '#/definitions/EdgeConnector'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - Agent

  /v2/node/{nodeID}/config/connectors/upgrade:
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Upgrade a node's (appliance or agent) connector config to V2.

        ---

        Requires `node::configure::connectors` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - Agent

  /v2/node/{nodeID}/config/connectors/{connectorID}:
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Connector ID
        in: path
        name: connectorID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update a connector on a node (appliance or agent). Requires V2 connector config.

        ---

        Requires `node::configure::connectors` permissions
      parameters:
        - description: Connector
          in: body
          name: connector
          required: true
          schema:
            $ref: '#/definitions/EdgeConnector'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - Agent

    delete:
      consumes:
        - application/json
      description: |
        Delete a connector from a node (appliance or agent). Requires V2 connector config.

        ---

        Requires `node::configure::connectors` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent

  /node/{nodeID}/config/network:
    parameters:
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Update network configuration for a node (appliance)

        ---

        Requires `node::configure:network` permissions
      parameters:
        - description: Network Config
          in: body
          name: config
          required: true
          schema:
            properties:
              acls:
                items:
                  properties:
                    action:
                      enum:
                        - allow
                        - drop
                        - reject
                      type: string
                    description:
                      type: string
                    dest:
                      description: Destination IP CIDR
                      type: string
                    line:
                      description: Line number
                      maximum: 32768
                      minimum: 1
                      type: number
                    ports:
                      description: Port or port range
                      type: string
                    protocol:
                      enum:
                        - any
                        - icmp
                        - tcp
                        - udp
                      type: string
                    source:
                      description: Source IP CIDR
                      type: string
                  required:
                    - protocol
                    - source
                    - dest
                    - action
                  type: object
                type: array
              darkMode:
                type: boolean
              forwarding:
                type: boolean
              interfaces:
                items:
                  properties:
                    cloudRoutes:
                      items:
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          route:
                            description: Route CIDR
                            example: 192.168.10.0/24
                            type: string
                        type: object
                      type: array
                    clusterIP:
                      description: Cluster IP
                      type: string
                    clusterRouteTables:
                      items:
                        description: Cluster route tables
                        type: string
                      type: array
                    clusterRoutes:
                      items:
                        description: Cluster routes
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          route:
                            description: Route CIDR
                            example: 192.168.10.0/24
                            type: string
                        required:
                          - route
                        type: object
                      type: array
                    description:
                      description: Interface description
                      example: My interface
                      type: string
                    dhcp:
                      default: false
                      description: Enable DHCP
                      example: false
                      type: boolean
                    dhcpPool:
                      description: DHCP pool
                      type: string
                    dns:
                      items:
                        description: DNS servers
                        type: string
                      type: array
                    duplex:
                      description: Interface duplex
                      enum:
                        - full
                        - half
                      type: string
                    gateway:
                      description: Gateway IP
                      type: string
                    ip:
                      description: Interface IP
                      type: string
                    mode:
                      description: Interface mode
                      enum:
                        - auto
                        - manual
                      type: string
                    mtu:
                      description: MTU
                      example: 1500
                      maximum: 9001
                      minimum: 1300
                      type: number
                    nic:
                      description: Network interface name
                      example: eth0
                      type: string
                    routes:
                      items:
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          next:
                            description: Next hop
                            example: 192.168.10.10
                            type: string
                          route:
                            description: Route CIDR
                            example: 192.168.10.0/24
                            type: string
                        required:
                          - route
                        type: object
                      type: array
                    speed:
                      description: Interface speed
                      type: number
                    subInterfaces:
                      items:
                        properties:
                          description:
                            description: Interface description
                            example: My interface
                            type: string
                          ip:
                            description: sub-interface IP
                            type: string
                          routes:
                            items:
                              properties:
                                description:
                                  description: Route description
                                  example: My route
                                  type: string
                                next:
                                  description: Next hop
                                  example: 192.168.10.10
                                  type: string
                                route:
                                  description: Route CIDR
                                  example: 192.168.10.0/24
                                  type: string
                              required:
                                - route
                              type: object
                            type: array
                          vlanID:
                            default: 1
                            description: VLAN ID
                            example: 1
                            maximum: 4094
                            minimum: 1
                            type: number
                          vrf:
                            description: VRF name
                            example: default
                            type: string
                        required:
                          - vlanID
                          - ip
                        type: object
                      type: array
                    virtual:
                      default: false
                      description: Whether the interface is virtual
                      example: false
                      type: boolean
                    vrf:
                      description: VRF name
                      example: default
                      type: string
                  required:
                    - nic
                  type: object
                type: array
              nats:
                items:
                  properties:
                    description:
                      description: NAT description
                      type: string
                    dest:
                      description: NAT destination IP CIDR
                      type: string
                    masquerade:
                      type: boolean
                    source:
                      description: NAT source IP CIDR
                      type: string
                    toDest:
                      description: Translated dest IP CIDR
                      type: string
                    toSource:
                      description: Translated source IP CIDR
                      type: string
                  type: object
                type: array
              routes:
                items:
                  properties:
                    description:
                      type: string
                    dest:
                      type: string
                    dev:
                      type: string
                    metric:
                      description: Route metric
                      maximum: 200
                      minimum: 1
                      type: number
                    via:
                      description: Next hop IP address
                      type: string
                  required:
                    - dest
                  type: object
                type: array
              rules:
                items:
                  properties:
                    action:
                      enum:
                        - accept
                        - drop
                        - reject
                        - forward
                        - dnat
                      type: string
                    description:
                      description: Rule description
                      type: string
                    dest:
                      description: Destination IP CIDR or `public` or `private`
                      type: string
                    dmac:
                      description: DNAT MAC address
                      type: string
                    dnat:
                      description: DNAT IP address
                      type: string
                    iface:
                      description: Interface name
                      type: string
                    in:
                      type: string
                    line:
                      description: Rule number
                      maximum: 32768
                      minimum: 1
                      type: number
                    ports:
                      description: Port or port range
                      type: string
                    protocol:
                      enum:
                        - any
                        - icmp
                        - tcp
                        - udp
                      type: string
                    snat:
                      description: Enable SNAT
                      type: boolean
                    source:
                      description: Source IP CIDR or `public` or `private`
                      type: string
                    vrf:
                      description: VRF name
                      type: string
                  required:
                    - protocol
                    - source
                    - dest
                    - action
                  type: object
                type: array
              tunnels:
                items:
                  properties:
                    description:
                      type: string
                    destination:
                      type: string
                    dpdInterval:
                      type: number
                    dpdRetries:
                      type: number
                    enabled:
                      type: boolean
                    ike:
                      enum:
                        - 1
                        - 2
                      type: number
                    ikeCipher:
                      enum:
                        - aes128-sha1
                        - aes128-sha256
                        - aes256-sha1
                        - aes256-sha256
                      type: string
                    ikeGroup:
                      enum:
                        - 2
                        - 5
                        - 14
                        - 15
                        - 16
                      type: number
                    ip:
                      type: string
                    ipsecCipher:
                      enum:
                        - aes128-sha1
                        - aes128-sha256
                        - aes256-sha1
                        - aes256-sha256
                      type: string
                    localId:
                      type: string
                    mtu:
                      maximum: 10000
                      minimum: 1000
                      type: number
                    name:
                      type: string
                    networkId:
                      type: string
                    pfs:
                      enum:
                        - 0
                        - 2
                        - 5
                        - 14
                        - 15
                        - 16
                      type: number
                    presharedKey:
                      type: string
                    psk:
                      type: string
                    publicKey:
                      type: string
                    rekeyInterval:
                      type: number
                    remoteId:
                      type: string
                    replayWindow:
                      enum:
                        - 32
                        - 64
                        - 128
                        - 256
                        - 512
                        - 1024
                        - 2048
                        - 4096
                        - 8192
                      type: number
                    type:
                      enum:
                        - ipsec
                        - gre
                        - vnet
                        - wireguard
                      type: string
                    vrf:
                      type: string
                  required:
                    - name
                    - enabled
                    - mtu
                  type: object
                type: array
              vrfs:
                items:
                  properties:
                    acls:
                      items:
                        properties:
                          action:
                            enum:
                              - allow
                              - drop
                              - reject
                            type: string
                          description:
                            description: ACL description
                            type: string
                          dest:
                            description: Destination IP CIDR
                            type: string
                          line:
                            description: Line number
                            maximum: 32768
                            minimum: 1
                            type: number
                          ports:
                            description: Port or port range
                            type: string
                          protocol:
                            enum:
                              - any
                              - icmp
                              - tcp
                              - udp
                            type: string
                          source:
                            description: Source IP CIDR
                            type: string
                        required:
                          - protocol
                          - source
                          - dest
                          - action
                        type: object
                      type: array
                    description:
                      description: VRF description
                      type: string
                    forwarding:
                      type: boolean
                    name:
                      description: VRF name
                      type: string
                    nats:
                      items:
                        properties:
                          description:
                            description: NAT description
                            type: string
                          dest:
                            description: NAT destination IP CIDR
                            type: string
                          masquerade:
                            description: Enable masquerade
                            type: boolean
                          source:
                            description: NAT source IP CIDR
                            type: string
                          toDest:
                            description: Translated dest IP CIDR
                            type: string
                          toSource:
                            description: Translated source IP CIDR
                            type: string
                        type: object
                      type: array
                    routes:
                      items:
                        properties:
                          description:
                            description: Route description
                            example: My route
                            type: string
                          dest:
                            description: Route CIDR
                            type: string
                          dev:
                            description: Device name
                            type: string
                          metric:
                            description: Route metric
                            maximum: 200
                            minimum: 1
                            type: number
                          via:
                            description: Next hop IP address
                            type: string
                        required:
                          - dest
                        type: object
                      type: array
                    rules:
                      items:
                        properties:
                          action:
                            enum:
                              - accept
                              - drop
                              - reject
                              - forward
                              - dnat
                            type: string
                          description:
                            description: Rule description
                            type: string
                          dest:
                            description: Destination IP CIDR or `public` or `private`
                            type: string
                          dmac:
                            description: DNAT MAC address
                            type: string
                          dnat:
                            description: DNAT IP address
                            type: string
                          iface:
                            description: Interface name
                            type: string
                          in:
                            type: string
                          line:
                            description: Rule number
                            maximum: 32768
                            minimum: 1
                            type: number
                          ports:
                            description: Port or port range
                            type: string
                          protocol:
                            enum:
                              - any
                              - icmp
                              - tcp
                              - udp
                            type: string
                          snat:
                            description: Enable SNAT
                            type: boolean
                          source:
                            description: Source IP CIDR or `public` or `private`
                            type: string
                          vrf:
                            description: VRF name
                            type: string
                        required:
                          - protocol
                          - source
                          - dest
                          - action
                        type: object
                      type: array
                  required:
                    - name
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node

  /node/{nodeID}/config/services:
    parameters:
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Update services configuration for a node (appliance or agent)

        ---

        Note: request body will be validated by JSON schema of the plugin
      parameters:
        - description: Config body
          in: body
          name: config
          required: true
          schema:
            $ref: '#/definitions/ServiceConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent

  /v2/node/{nodeID}/config/services:
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Add a service to a node. Requires V2 services config.

        ---

        Requires `node::configure::services` permissions
      parameters:
        - description: Service
          in: body
          name: service
          required: true
          schema:
            $ref: '#/definitions/EdgeService'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - Agent

  /v2/node/{nodeID}/config/services/upgrade:
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Upgrade a node's services config to V2.

        ---

        Requires `node::configure::services` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - Agent

  /v2/node/{nodeID}/config/services/{serviceID}:
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Service ID
        in: path
        name: serviceID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update a service on a node. Requires V2 services config.

        ---

        Requires `node::configure::services` permissions
      parameters:
        - description: Service
          in: body
          name: service
          required: true
          schema:
            $ref: '#/definitions/EdgeService'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - Agent
    delete:
      consumes:
        - application/json
      description: |
        Delete a service from a node. Requires V2 services config.

        ---

        Requires `node::configure::services` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent

  /node/{nodeID}/config/ztnagw:
    parameters:
      - $ref: '#/parameters/nodeID'
    put:
      consumes:
        - application/json
      description: |
        Update ZTNA gateway configuration for a node (appliance)

        Note that this endpoint used to be `apigw`. The config section is still named `apigw`.
        ---

        "WireGuard" is a registered trademark of Jason A. Donenfeld.

        Requires `node::configure::apigw` permissions
      parameters:
        - in: body
          name: ZTNA config
          schema:
            example:
              cert: myztnahost.mycompany.com
              enabled: true
              host: myztnahost.mycompany.com
              port: 9927
              wireguardEnabled: true
              wireguardEndpoint: myztnahost.mycompany.com
              wireguardPort: 9926
            properties:
              cert:
                description: ZTNA gateway certificate (FQDN)
                type: string
              enabled:
                description: Enable this plugin
                type: boolean
              host:
                description: ZTNA gateway host
                type: string
              port:
                description: ZTNA gateway port
                maximum: 65535
                minimum: 1
                type: number
              wireguardEnabled:
                description: Enable wireguard
                type: boolean
              wireguardEndpoint:
                description: WireGuard endpoint
                format: hostname
                type: string
              wireguardPort:
                description: WireGuard port
                maximum: 65535
                minimum: 1
                type: number
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
    delete:
      consumes:
        - application/json
      description: |
        Delete the ZTNA gateway configuration for a node (appliance)

        ---

        Requires `node::configure::apigw` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node

  /node/{nodeID}/config/gateway:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update gateway configuration

        ---

        Requires `nodes::configure:gateway` permission.
      parameters:
        - description: Gateway config
          in: body
          name: config
          schema:
            description: Gateway config
            properties:
              cert:
                description: Certificate
                example: mygateway.trustgrid.io
                type: string
              clients:
                items:
                  description: Gateway client
                  properties:
                    enabled:
                      description: Client is allowed to connect
                      example: true
                      type: boolean
                    name:
                      description: Node or cluster name
                      example: mynode
                      type: string
                  type: object
                type: array
              connectToPublic:
                description: Connect to public
                type: boolean
              enabled:
                description: Enable gateway plugin
                type: boolean
              host:
                description: Hostname of the gateway
                example: mygateway.trustgrid.io
                type: string
              maxClientWriteMbps:
                description: Max egress MBPS
                example: 1000
                type: number
              maxmbps:
                description: Max ingress MBPS
                example: 1000
                type: number
              monitorHops:
                description: Monitor hops
                type: boolean
              port:
                description: Port of the gateway
                example: 8080
                type: number
              type:
                description: Type of gateway
                enum:
                  - private
                  - public
                  - hub
                type: string
              udpEnabled:
                description: Enable UDP
                type: boolean
              udpPort:
                description: UDP port
                example: 8081
                type: number
            required:
              - enabled
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Agent
        - Node
  /node/{nodeID}/lock:
    parameters:
      - $ref: '#/parameters/nodeID'
  /node/{nodeID}/snmp:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update SNMP configuration

        ---

        Requires `nodes::configure:snmp` permission.
      parameters:
        - description: SNMP config
          in: body
          name: config
          schema:
            description: SNMP config
            properties:
              authPassphrase:
                description: Auth passphrase
                example: myauthpass
                type: string
              authProtocol:
                description: Auth passphrase
                enum:
                  - SHA
                  - MD5
                type: string
              enabled:
                description: Enable SNMP plugin
                type: boolean
              engineId:
                description: Engine ID
                example: myengineid
                type: string
              interface:
                description: Interface
                example: eth0
                type: string
              port:
                description: Port
                example: 161
                type: number
              privacyPassphrase:
                description: Privacy passphrase
                example: myprivpass
                type: string
              privacyProtocol:
                description: Privacy protocol
                enum:
                  - AES128
                  - AES192
                  - AES256
                  - DES
                type: string
              username:
                description: Username
                example: myuser
                type: string
            required:
              - enabled
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Node
        - Agent
  /node/{nodeID}/tag/{tagName}:
    delete:
      consumes:
        - application/json
      description: Delete a tag from a node (appliance or agent)
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Tag name
        in: path
        name: tagName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Set a tag on a node (appliance or agent)
      parameters:
        - in: body
          name: tag
          required: true
          schema:
            $ref: '#/definitions/TagValueModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent
  /node/{nodeID}/trigger/{event}:
    parameters:
      - $ref: '#/parameters/nodeID'
      - in: path
        name: event
        required: true
        type: string
    post:
      description: Trigger an event on a node (appliance or agent)
      parameters:
        - description: If present, the request will return the node's event output
          in: query
          name: wait
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - Agent
  /org/mine:
    get:
      description: Get your current Org
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrgModel'
        '404':
          description: Org not found
      tags:
        - Org
  /provisioning/api/v1/orders:
    get:
      description: Get all orders. The responses for orders from this API request are not fully hydrated (eg, no nodes).
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OrderModel'
            type: array
      tags:
        - Orders
    post:
      description: Create an order. Omitted fields are not updated.
      parameters:
        - in: body
          name: order
          schema:
            $ref: '#/definitions/OrderModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Orders
  /provisioning/api/v1/orders/{uid}:
    get:
      description: Get an order
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderModel'
      tags:
        - Orders
    parameters:
      - in: path
        name: uid
        required: true
        type: string
    put:
      description: Update an order. Omitted fields are not updated.
      parameters:
        - in: body
          name: order
          schema:
            $ref: '#/definitions/OrderModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Orders
  /provisioning/api/v1/orders/{uid}/comment:
    parameters:
      - in: path
        name: uid
        required: true
        type: string
    post:
      description: Add a comment
      parameters:
        - in: body
          name: comment body
          schema:
            properties:
              body:
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Orders
  /provisioning/api/v1/orders/{uid}/flag:
    delete:
      description: Unflag an order
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Orders
    parameters:
      - in: path
        name: uid
        required: true
        type: string
    put:
      description: Flag an order
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Orders
  /repositories:
    get:
      description: Get all repositories
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/RepositoryModel'
            type: array
      tags:
        - Repositories
  /repositories/{reponame}:
    delete:
      description: Delete a repository
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Repositories
    get:
      description: Get information for a repository
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/RepositoryTagModel'
            type: array
      tags:
        - Repositories
    parameters:
      - in: path
        name: reponame
        required: true
        type: string
  /repositories/{reponame}/{tag}:
    delete:
      description: Delete a repository tag
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Repositories
    parameters:
      - in: path
        name: reponame
        required: true
        type: string
      - in: path
        name: tag
        required: true
        type: string
  /stats/realtime/usage:
    get:
      description: Returns an array of usage data buckets for specified nodes within the specified time range and interval.
      parameters:
        - description: The relative start time for the data (e.g., "-7 days").
          in: query
          name: relative_start
          type: string
        - description: The relative end time for the data (e.g., "now").
          in: query
          name: relative_end
          type: string
        - description: The size of the time buckets in minutes.
          in: query
          name: intervalInMinutes
          type: string
        - description: The start time for the data in Unix timestamp format (if not using relative_start).
          format: int64
          in: query
          name: start
          type: integer
        - description: The end time for the data in Unix timestamp format (if not using relative_end).
          format: int64
          in: query
          name: end
          type: integer
        - description: The filters to apply when querying for nodes, like tags.
          in: query
          name: filters
          type: string
      responses:
        '200':
          description: An array of usage data buckets.
          schema:
            items:
              properties:
                bytes:
                  description: The number of bytes in the bucket.
                  format: int64
                  type: integer
                count:
                  description: The number of flows in the bucket.
                  format: int64
                  type: integer
                t:
                  description: The time of the bucket in Unix timestamp format.
                  format: int64
                  type: integer
              type: object
            type: array
      summary: Retrieve usage data for nodes (appliances or agents)
      tags:
        - Node
  /tags:
    get:
      description: List tags
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Tag'
            type: array
      tags:
        - Tags
  /tags/{tagName}:
    get:
      description: Get a tag by name
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tag'
        '404':
          description: Tag not found
      tags:
        - Tags
    parameters:
      - description: Tag name
        in: path
        name: tagName
        required: true
        type: string

  /upgrade-manager/api/v1/upgrades:
    get:
      description: |-
        List upgrades

        ---

        Requires `upgrade-manager::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Upgrade'
            type: array
      tags:
        - Upgrade Manager
    post:
      consumes:
        - application/json
      description: |-
        Create a new upgrade

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            description: UID
            properties:
              uid:
                description: Unique ID
                example: a9f7cfec-da06-4822-b4ab-389e4ad51931
                type: string
            title: UID
            type: object
      tags:
        - Upgrade Manager

  /upgrade-manager/api/v1/upgrades/active:
    get:
      description: |-
        Get the active upgrade

        ---

        Requires `upgrade-manager::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Upgrade'
        '404':
          description: Not Found - no upgrade is active
      tags:
        - Upgrade Manager

  /upgrade-manager/api/v1/upgrades/{upgradeID}:
    delete:
      description: |-
        Delete an upgrade

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
    get:
      description: |-
        Get an upgrade

        ---

        Requires `upgrade-manager::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Upgrade'
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
    parameters:
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update an upgrade

        ---

        Requires `upgrade-manager::modify` permission.
      parameters:
        - description: Upgrade Input
          in: body
          name: Upgrade
          required: true
          schema:
            $ref: '#/definitions/UpgradeUpdateParams'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Upgrade'
        '404':
          description: Not Found
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Upgrade Manager
  /upgrade-manager/api/v1/upgrades/{upgradeID}/approve-failover:
    parameters:
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Approve an upgrade to failover clusters

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
  /upgrade-manager/api/v1/upgrades/{upgradeID}/complete:
    parameters:
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Mark an upgrade complete

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
  /upgrade-manager/api/v1/upgrades/{upgradeID}/dismiss/{workflowID}:
    parameters:
      - description: Unique ID of workflow
        in: path
        name: workflowID
        required: true
        type: string
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Dismiss a workflow

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
  /upgrade-manager/api/v1/upgrades/{upgradeID}/dryrun:
    parameters:
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Dry run an upgrade. This will clone the upgrade and start the cloned copy and return the copy's UID

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            description: UID
            properties:
              uid:
                description: Unique ID
                example: a9f7cfec-da06-4822-b4ab-389e4ad51931
                type: string
            title: UID
            type: object
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
  /upgrade-manager/api/v1/upgrades/{upgradeID}/logs:
    get:
      description: |-
        Get logs for an upgrade

        ---

        Requires `upgrade-manager::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UpgradeLog'
            type: array
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
    parameters:
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
  /upgrade-manager/api/v1/upgrades/{upgradeID}/note/{workflowID}:
    parameters:
      - description: Unique ID of workflow
        in: path
        name: workflowID
        required: true
        type: string
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Add a note to a workflow

        ---

        Requires `upgrade-manager::modify` permission.
      parameters:
        - description: Note
          in: body
          name: note
          required: true
          schema:
            description: Note
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager

  /upgrade-manager/api/v1/upgrades/{upgradeID}/retry/{workflowID}:
    parameters:
      - description: Unique ID of workflow
        in: path
        name: workflowID
        required: true
        type: string
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Retry a workflow

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
  /upgrade-manager/api/v1/upgrades/{upgradeID}/start:
    parameters:
      - description: Unique ID of upgrade
        in: path
        name: upgradeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Start an upgrade

        ---

        Requires `upgrade-manager::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Upgrade Manager
  /user:
    get:
      description: |
        Get all users

        ---

        Note: changes to users sometimes take a few minutes to appear while being indexed
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserModel'
            type: array
      tags:
        - User
    post:
      consumes:
        - application/json
      description: |
        Invite a user. For organizations using the default Trustgrid authentication provider, users must be **invited** and then they should sign up with the invited email address.
        For custom IDP integrations, users should be **added** instead.
      parameters:
        - in: body
          name: user
          schema:
            properties:
              email:
                description: User's email
                type: string
              policyId:
                description: ID of the policy to be applied to the user upon account creation
                type: string
            required:
              - email
              - policyId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - User
  /user/add:
    post:
      consumes:
        - application/json
      description: |
        Add a user. This is only available to organizations with custom IDP integrations.
      parameters:
        - in: body
          name: user
          schema:
            properties:
              email:
                description: User's email
                type: string
              idp:
                description: ID of the IDP to be used for the user
                type: string
              policyIds:
                description: IDs of the policy/policies to be applied to the user
                items:
                  type: string
                type: array
            required:
              - email
              - policyIds
              - idp
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - User
  /user/{email}:
    delete:
      consumes:
        - application/json
      description: Delete a user
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Cannot delete root user
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - User
    parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
  /user/{email}/groups:
    get:
      description: |
        Get all user groups
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GroupModel'
            type: array
      tags:
        - User
    parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
  /v2/alarm:
    get:
      description: Get alarms
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmModel'
            type: array
      tags:
        - Alarms
    post:
      description: Create alarm
      parameters:
        - description: Alarm body
          in: body
          name: alarm
          required: true
          schema:
            $ref: '#/definitions/AlarmModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Alarms
  /v2/alarm-channel:
    get:
      description: Returns available alarm channels
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlarmChannelModel'
            type: array
      tags:
        - Alarms
    post:
      description: Creates an alarm channel
      parameters:
        - description: Alarm channel body
          in: body
          name: channel
          required: true
          schema:
            $ref: '#/definitions/AlarmChannelModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Alarms
  /v2/alarm-channel/{uid}:
    delete:
      description: Updates the alarm channel with the given uid
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Alarms
    get:
      description: Returns the alarm channel with the given uid
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmChannelModel'
      tags:
        - Alarms
    parameters:
      - in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Updates the alarm channel with the given uid
      parameters:
        - description: Alarm channel body
          in: body
          name: channel
          required: true
          schema:
            $ref: '#/definitions/AlarmChannelModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Alarms
  /v2/alarm/suppression:
    delete:
      description: Cancel or end alert suppression window
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Alarms
    get:
      description: Get scheduled alert suppression window
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlertSuppressionModel'
      tags:
        - Alarms
    post:
      description: Create an alert suppression window
      parameters:
        - description: Alarm channel body
          in: body
          name: channel
          required: true
          schema:
            $ref: '#/definitions/AlertSuppressionModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Alarms
  /v2/alarm/{uid}:
    delete:
      description: Delete alarm
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Alarms
    get:
      description: Get alarm
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlarmModel'
      tags:
        - Alarms
    parameters:
      - in: path
        name: uid
        required: true
        type: string
    put:
      description: Update alarm
      parameters:
        - description: Alarm body
          in: body
          name: channel
          required: true
          schema:
            $ref: '#/definitions/AlarmModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Alarms
  /v2/alert:
    get:
      description: |-
        List alerts, newest first

        ---

        Requires `alerts::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertV2'
            type: array
      tags:
        - Alerts
  /v2/alert/{nodeID}:
    get:
      description: |-
        List alerts for a node (appliance or agent), newest first

        ---

        Requires `alerts::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AlertV2'
            type: array
      tags:
        - Alerts
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/alert/{nodeID}/{alertType}:
    delete:
      description: |-
        Resolve alert

        ---

        Requires `alerts::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Alerts
    parameters:
      - description: Alert type, eg Node Disconnect
        in: path
        name: alertType
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/application:
    get:
      description: List applications your user can access
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Application'
            type: array
      tags:
        - Applications
    post:
      consumes:
        - application/json
      description: |-
        Create an application

        ---

        Requires `applications::modify` permission.
      parameters:
        - description: Application configuration
          in: body
          name: application
          required: true
          schema:
            $ref: '#/definitions/Application'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Applications
  /v2/application/all:
    get:
      description: |-
        List applications

        ---

        Requires `applications::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Application'
            type: array
      tags:
        - Applications
  /v2/application/{applicationID}:
    delete:
      description: |-
        Delete an application

        ---

        Requires `applications::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not found
      tags:
        - Applications
    get:
      description: |-
        Get an application

        ---

        Requires `applications::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '404':
          description: Not found
      tags:
        - Applications
    parameters:
      - description: Unique ID of application
        in: path
        name: applicationID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update an application

        ---

        Requires `applications::modify` permission.
      parameters:
        - description: Application configuration
          in: body
          name: application
          required: true
          schema:
            $ref: '#/definitions/Application'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Applications
  /v2/application/{applicationID}/access-policy:
    get:
      description: |-
        List access rules

        ---

        Requires `applications::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ApplicationAccessRule'
            type: array
      tags:
        - Applications
    parameters:
      - description: Unique ID of application
        in: path
        name: applicationID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create an access rule

        ---

        Requires `applications::modify` permission.
      parameters:
        - description: Access rule
          in: body
          name: access rule
          required: true
          schema:
            $ref: '#/definitions/ApplicationAccessRule'
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Applications
  /v2/application/{applicationID}/access-policy/{ruleID}:
    delete:
      description: |-
        Delete an access rule

        ---

        Requires `applications::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Applications
    parameters:
      - description: Unique ID of access rule
        in: path
        name: ruleID
        required: true
        type: string
      - description: Unique ID of application
        in: path
        name: applicationID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update an access rule

        ---

        Requires `applications::modify` permission.
      parameters:
        - description: Access rule
          in: body
          name: access rule
          required: true
          schema:
            $ref: '#/definitions/ApplicationAccessRule'
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Applications
  /v2/application/{applicationID}/access-policy/{ruleID}/{index}:
    parameters:
      - description: Desired index of rule
        in: path
        name: index
        required: true
        type: number
      - description: Unique ID of access rule
        in: path
        name: ruleID
        required: true
        type: string
      - description: Unique ID of application
        in: path
        name: applicationID
        required: true
        type: string
    patch:
      description: |-
        Move an access rule to a new place in the list

        ---

        Requires `applications::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Applications
  /v2/audit/flow-logs:
    get:
      description: |-
        List recent flow logs

        ---

        Requires `audits::read:flows` permission.
      parameters:
        - description: Unix timestamp for the start of the log window
          in: query
          name: sTime
          type: number
        - description: Unix timestamp for the end of the log window
          in: query
          name: eTime
          type: number
        - description: Comparison operator for the end of the log window
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          in: query
          name: eTimeOp
          type: string
        - description: IP protocol
          in: query
          name: protocol
          type: string
        - description: Source IP address
          in: query
          name: srcIp
          type: string
        - description: Destination IP address
          in: query
          name: dstIp
          type: string
        - description: Source port
          in: query
          name: srcPort
          type: number
        - description: Comparison operator for the source port
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          in: query
          name: srcPortOp
          type: string
        - description: Destination port
          in: query
          name: dstPort
          type: number
        - description: Comparison operator for the dest port
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          in: query
          name: dstPortOp
          type: string
        - description: Maximum number of results to return
          in: query
          name: limit
          type: number
        - description: Source node name
          in: query
          name: srcNode
          type: string
        - description: Dest node name
          in: query
          name: dstNode
          type: string
        - description: Flow logging node ID
          in: query
          name: node
          type: string
        - description: Page of results to return
          in: query
          name: page
          type: string
        - description: Sort results, like `port:desc`
          in: query
          name: sort
          type: string
        - description: When true, newer flow logs will be listed first
          in: query
          name: reverse
          type: boolean
        - description: If provided, a flow must match at least one of the TCP flags provided. Decimal encoded, see flow log TCP flag encoding.
          in: query
          items:
            type: number
          name: tcpFlags
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers:
            x-total-count:
              description: Total number of flows matching query
              type: number
          schema:
            items:
              description: FlowLog
              properties:
                activityID:
                  description: Threat Intelligence activity ID
                  example: 9aa2bbc3-4265-475b-b977-c94b1ee25a1f
                  type: string
                destBytes:
                  description: Destination bytes transferred
                  example: 100
                  type: number
                destIP:
                  description: Destination IP address
                  example: 1.1.1.1
                  type: string
                destNode:
                  description: Destination node name
                  example: mynode
                  type: string
                destPort:
                  description: Destination port
                  example: 1234
                  type: number
                endTime:
                  description: Start time of the flow
                  example: '2022-11-01T22:46:02.730Z'
                  type: string
                protocol:
                  description: Protocol
                  enum:
                    - TCP
                    - UDP
                    - ICMP
                    - UNKNOWN
                  example: TCP
                  type: string
                sourceBytes:
                  description: Source bytes transferred
                  example: 100
                  type: number
                sourceIP:
                  description: Source IP address
                  example: 2.2.2.2
                  type: string
                sourceNode:
                  description: Source node name
                  example: mynode
                  type: string
                sourcePort:
                  description: Source port
                  example: 1234
                  type: number
                startTime:
                  description: Start time of the flow
                  example: '2022-11-01T22:46:01.765Z'
                  type: string
                tcpFlags:
                  description: |-
                    TCP Flags encoded in hex:
                    * 0x01 - FIN
                    * 0x02 - SYN
                    * 0x04 - RST
                    * 0x08 - PSH
                    * 0x10 - ACK
                    * 0x20 - URG
                  example: '00100001'
                  type: string
                ztnaAppID:
                  description: ZTNA application ID
                  example: 9aa2bbc3-4265-475b-b977-c94b1ee25a1f
                  type: string
                ztnaSessionID:
                  description: ZTNA application ID
                  example: 9aa2bbc3-4265-475b-b977-c94b1ee25a1f
                  type: string
              type: object
            type: array
      tags:
        - Audit
  /v2/certificates:
    get:
      description: |-
        List certificates

        ---

        Requires `certificates::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Certificate'
            type: array
      tags:
        - Certificates
    post:
      consumes:
        - application/json
      description: |-
        Create a certificate

        ---

        Requires `certificates::modify` permission.
      parameters:
        - description: Certificate parts
          in: body
          name: CertParts
          required: true
          schema:
            $ref: '#/definitions/CertificateParts'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Certificates
  /v2/certificates/{fqdn}:
    delete:
      description: |-
        Delete a certificate

        ---

        Requires `certificates::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Certificates
    parameters:
      - description: FQDN of certificate
        in: path
        name: fqdn
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a certificate

        ---

        Requires `certificates::modify` permission.
      parameters:
        - description: Certificate parts
          in: body
          name: CertParts
          required: true
          schema:
            $ref: '#/definitions/CertificateParts'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Certificates
  /v2/cluster/{clusterFQDN}/exec/container:
    get:
      description: |-
        List containers

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Container'
            type: array
      tags:
        - Compute
    parameters:
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a container

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Container
          in: body
          name: container
          schema:
            $ref: '#/definitions/Container'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}:
    delete:
      description: |-
        Delete a container

        ---

        Requires `node-exec::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Compute
    get:
      description: |-
        Get a container

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Container'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a container

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Container
          in: body
          name: container
          schema:
            $ref: '#/definitions/Container'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/capability:
    get:
      description: |-
        Get container capabilities

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerCapabilities'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/config:
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update container config

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Container config
          in: body
          name: config
          schema:
            $ref: '#/definitions/ContainerConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/healthcheck:
    get:
      description: |-
        Get container health check

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerHealthCheck'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/interface:
    get:
      description: |-
        List container interfaces

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerInterfaces'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/limit:
    get:
      description: |-
        List container limits

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerLimits'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/logging:
    get:
      description: |-
        Get container logging configuration

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerLogging'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/mount:
    get:
      description: |-
        List container mounts

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerMount'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/port-mapping:
    get:
      description: |-
        List container port mappings

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerPortMapping'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/variable:
    get:
      description: |-
        List container variables

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerVariable'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/virtual-network:
    get:
      description: |-
        List container virtual networks

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerVirtualNetwork'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/volume:
    get:
      description: |-
        List container volumes

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/container/{containerID}/vrf:
    get:
      description: |-
        Get container VRF

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerVRF'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/exec/volume:
    get:
      description: |-
        List volumes

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
      tags:
        - Compute
    parameters:
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create volume

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Volume
          in: body
          name: volume
          schema:
            $ref: '#/definitions/Volume'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/cluster/{clusterFQDN}/exec/volume/{volumeName}:
    delete:
      description: |-
        Delete a volume

        ---

        Requires `node-exec::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Compute
    parameters:
      - description: Volume Name
        in: path
        name: volumeName
        required: true
        type: string
      - description: Node FQDN
        in: path
        name: clusterFQDN
        required: true
        type: string
  /v2/cluster/{clusterFQDN}/vpn:
    get:
      description: Returns all the VPN networks
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnClusterNetworkModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
    post:
      consumes:
        - application/json
      description: Attach a VPN network
      parameters:
        - in: body
          name: network
          required: true
          schema:
            $ref: '#/definitions/VpnNetworkUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnClusterNetworkInventoryModel'
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}:
    delete:
      description: Deletes a vpn network
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    get:
      description: Returns information about a VPN network
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnClusterNetworkInventoryModel'
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN network
      parameters:
        - in: body
          name: network
          schema:
            $ref: '#/definitions/VpnNetworkUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/dns:
    delete:
      consumes:
        - application/json
      description: Delete a VPN Dns configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    get:
      description: Get All VPN Dns configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnClusterDnsModel'
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Create a VPN Dns configuration
      parameters:
        - in: body
          name: dns
          schema:
            $ref: '#/definitions/VpnDnsUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
    put:
      consumes:
        - application/json
      description: Update a VPN Dns configuration
      parameters:
        - in: body
          name: dns
          schema:
            $ref: '#/definitions/VpnDnsUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/dynamic/export-route:
    get:
      description: Get All VPN's dynamic export routes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnClusterRouteModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN export route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/dynamic/export-route/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN export route
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Route ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN export route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/dynamic/import-route:
    get:
      description: Get All VPN's dynamic import routes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnClusterRouteModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN import route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/dynamic/import-route/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN import route
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Route ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN import route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/interface:
    get:
      description: Get All VPN's interfaces
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnClusterInterfaceModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Create a VPN interface
      parameters:
        - in: body
          name: iface
          schema:
            $ref: '#/definitions/VpnInterfaceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/interface/{interfaceName}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN interface
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Interface name
        in: path
        name: interfaceName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN interface
      parameters:
        - in: body
          name: iface
          schema:
            $ref: '#/definitions/VpnInterfaceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/route:
    get:
      description: Get All VPN's routes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnClusterRouteModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/route/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN route
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Route ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/service:
    get:
      description: Gets all VPN services
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnClusterServiceModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN Service
      parameters:
        - in: body
          name: service
          schema:
            $ref: '#/definitions/VpnServiceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/service/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a Service
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Service ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a Service
      parameters:
        - in: body
          name: service
          schema:
            $ref: '#/definitions/VpnServiceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/cluster/{clusterFQDN}/vpn/{networkName}/wireguard:
    delete:
      consumes:
        - application/json
      description: Delete a VPN WireGuard configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    get:
      description: Get All VPN WireGuard configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnClusterWireguardModel'
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/clusterFQDN'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update the VPN WireGuard configuration
      parameters:
        - in: body
          name: wg
          schema:
            $ref: '#/definitions/VpnWireguardUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/domain/{domainName}/network:
    get:
      description: |-
        List domain networks

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VirtualNetwork'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a domain network

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Virtual network configuration
          in: body
          name: network
          required: true
          schema:
            $ref: '#/definitions/VirtualNetwork'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}:
    delete:
      description: |-
        Delete a domain network - this change is not staged and will immediately affect the domain

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
  /v2/domain/{domainName}/network/{networkName}/access-policy:
    get:
      description: |-
        List a network's access policies

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkAccessPolicy'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a network access policy

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Access policy configuration
          in: body
          name: acl
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkAccessPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/access-policy/{accessPolicyID}:
    delete:
      description: |-
        Delete a network access policy

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Unique ID of access policy
        in: path
        name: accessPolicyID
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a network access policy

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Access policy configuration
          in: body
          name: acl
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkAccessPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/auth-group:
    get:
      description: |-
        List a network's auth groups

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkAuthorizationGroup'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a network auth group

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network auth group configuration
          in: body
          name: authGroup
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkAuthorizationGroup'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/auth-group/{groupName}:
    delete:
      description: |-
        Delete a network auth group

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    get:
      description: |-
        List a network auth group's members

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkAuthorizationGroupMembership'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network auth group name
        in: path
        name: groupName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Add a network auth group member

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network auth group member
          in: body
          name: member
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkAuthorizationGroupMembership'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
    put:
      consumes:
        - application/json
      description: |-
        Update a network auth group

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network auth group configuration
          in: body
          name: authGroup
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkAuthorizationGroup'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/auth-group/{groupName}/{memberID}:
    delete:
      description: |-
        Remove a network auth group member

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: Group member ID
        in: path
        name: memberID
        required: true
        type: string
      - description: Network auth group name
        in: path
        name: groupName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a membership

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network auth group member
          in: body
          name: member
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkAuthorizationGroupMembership'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/change:
    get:
      description: |-
        List staged changes

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DomainNetworkInventory'
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
  /v2/domain/{domainName}/network/{networkName}/change/commit:
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Commit staged changes

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Digest
          in: body
          name: digest
          required: true
          schema:
            description: digest
            properties:
              digest:
                description: Digest of the network and its changes
                example: 55ca6286e3e4f4fba5d0448333fa99fc5a404a73
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/change/validate:
    get:
      description: |-
        List validation errors for staged changes

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            description: digest
            properties:
              digest:
                description: Digest of the network and its changes
                example: 55ca6286e3e4f4fba5d0448333fa99fc5a404a73
                type: string
            type: object
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
  /v2/domain/{domainName}/network/{networkName}/change/{changeID}:
    delete:
      description: |-
        Revert a staged change. If the item is newly added and not committed, the item will be deleted along with any associated changes.

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: Change ID
        in: path
        name: changeID
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
  /v2/domain/{domainName}/network/{networkName}/dns:
    get:
      description: |-
        Get a network's DNS configuration

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkDNSConfiguration'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a network's DNS configuration

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: DNS configuration
          in: body
          name: dns
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkDNSConfiguration'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/dns-zone:
    get:
      description: |-
        List a network's DNS zones

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkDNSZone'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a DNS zone

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: DNS zone configuration
          in: body
          name: zone
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkDNSZone'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/dns-zone/{zoneName}:
    delete:
      description: |-
        Delete a DNS zone

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: DNS zone name
        in: path
        name: zoneName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a DNS zone

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: DNS zone configuration
          in: body
          name: zone
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkDNSZone'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/dns-zone/{zoneName}/dns-record:
    get:
      description: |-
        List a network zone's DNS records

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkDNSRecord'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: DNS zone name
        in: path
        name: zoneName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a DNS record

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: DNS record configuration
          in: body
          name: record
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkDNSRecord'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/dns-zone/{zoneName}/dns-record/{recordName}/{recordType}:
    delete:
      description: |-
        Delete a DNS record

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: DNS record type
        in: path
        name: recordType
        required: true
        type: string
      - description: DNS record name
        in: path
        name: recordName
        required: true
        type: string
      - description: DNS zone name
        in: path
        name: zoneName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a DNS record

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: DNS record configuration
          in: body
          name: record
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkDNSRecord'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/network-group:
    get:
      description: |-
        List a network's groups

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkGroup'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a network group

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network group configuration
          in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkGroup'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/network-group/{groupName}:
    delete:
      description: |-
        Delete a network group

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    get:
      description: |-
        List a network's group memberships

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkGroupMembership'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network group name
        in: path
        name: groupName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a network group

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network group configuration
          in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkGroup'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/network-group/{groupName}/{objectName}:
    delete:
      description: |-
        Remove a network object from a network group

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: Network object name
        in: path
        name: objectName
        required: true
        type: string
      - description: Network group name
        in: path
        name: groupName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Add a network object to a network group (represented by a network group membership

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/network-object:
    get:
      description: |-
        List a network's objects

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkObject'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a network object

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network object configuration
          in: body
          name: object
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkObject'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/network-object/{objectName}:
    delete:
      description: |-
        Delete a network object

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: Network object name
        in: path
        name: objectName
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a network object

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Network object configuration
          in: body
          name: object
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkObject'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/port-forwarding:
    get:
      description: |-
        List a network's port forwardings

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/PortForwarding'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a port forwarding

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Port forwarding configuration
          in: body
          name: port-forwarding
          required: true
          schema:
            $ref: '#/definitions/PortForwarding'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/port-forwarding/{portForwardingID}:
    delete:
      description: |-
        Get a port forwarding

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortForwarding'
      tags:
        - Domain Network
    parameters:
      - description: Port forwarding ID
        in: path
        name: portForwardingID
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a port forwarding

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Port forwarding configuration
          in: body
          name: port-forwarding
          required: true
          schema:
            $ref: '#/definitions/PortForwarding'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/route:
    get:
      description: |-
        List a network's routes

        ---

        Requires `virtual-networks::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DomainNetworkRoute'
            type: array
      tags:
        - Domain Network
    parameters:
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a network route

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Route configuration
          in: body
          name: route
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkRoute'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/domain/{domainName}/network/{networkName}/route/{routeID}:
    delete:
      description: |-
        Delete a network route

        ---

        Requires `virtual-networks::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Domain Network
    parameters:
      - description: Route ID
        in: path
        name: routeID
        required: true
        type: string
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Domain name
        in: path
        name: domainName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a network route

        ---

        Requires `virtual-networks::modify` permission.
      parameters:
        - description: Route configuration
          in: body
          name: route
          required: true
          schema:
            $ref: '#/definitions/DomainNetworkRoute'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Domain Network
  /v2/event:
    get:
      description: Get all events
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/EventModel'
            type: array
      tags:
        - Alarms
  /v2/event/{nodeId}:
    get:
      description: Get all events for node (appliance or agent)
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/EventModel'
            type: array
      tags:
        - Alarms
    parameters:
      - in: path
        name: nodeId
        required: true
        type: string
  /v2/event/{nodeId}/{eventId}:
    parameters:
      - in: path
        name: nodeId
        required: true
        type: string
      - in: path
        name: eventId
        required: true
        type: string
    post:
      description: Test an event against alarms
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Alarms
  /v2/idp:
    get:
      description: Get all Identity Providers
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/IdentityProviderModel'
            type: array
      tags:
        - IDP
    post:
      consumes:
        - application/json
      description: Creates an identity provider
      parameters:
        - in: body
          name: idp
          schema:
            $ref: '#/definitions/IdentityProviderUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - IDP
  /v2/idp/openid/{idpID}:
    parameters:
      - description: IDP ID
        in: path
        name: idpID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Set OpenID settings for an IDP

        ---

        Requires `identity-providers::modify` permission.
      parameters:
        - description: OpenID config
          in: body
          name: config
          schema:
            $ref: '#/definitions/OpenIDConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - IDP
  /v2/idp/saml/{idpID}:
    parameters:
      - description: IDP ID
        in: path
        name: idpID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Set SAML settings for an IDP

        ---

        Requires `identity-providers::modify` permission.
      parameters:
        - description: SAML config
          in: body
          name: config
          schema:
            $ref: '#/definitions/SAMLConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - IDP
  /v2/idp/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete an identity provider
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - IDP
    get:
      description: Get an Identity Provider
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IdentityProviderModel'
      tags:
        - IDP
    parameters:
      - description: Identity provider UID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update an identity provider
      parameters:
        - in: body
          name: idp
          schema:
            $ref: '#/definitions/IdentityProviderUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - IDP
  /v2/node/{nodeID}/data-store:
    delete:
      description: |-
        Delete a file or directory

        ---

        Requires `nodes::service:datastore-manager` permission.
      parameters:
        - description: rm
          in: body
          name: rm
          schema:
            description: mkdir
            properties:
              filename:
                description: filename
                type: string
            required:
              - filename
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/data-store/http-download:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Copy a file from an HTTP location to the data store

        ---

        Requires `nodes::service:datastore-manager` permission.
      parameters:
        - description: Download config
          in: body
          name: config
          schema:
            description: Data Store HTTP Download Request
            properties:
              algo:
                description: Hashing algorithm of the file - MD5, SHA1, or SHA-256
                example: MD5
                type: string
              filename:
                description: Target filename
                example: file.iso
                type: string
              hash:
                description: Hash of the file
                example: 07c43d77ab8d30cee094ce09b14f87fa
                type: string
              location:
                description: Target destination directory in data store
                example: /isos
                type: string
              uri:
                description: URI of source file
                example: http://example.com/file.iso
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
  /v2/node/{nodeID}/data-store/http-upload:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Upload a file from the node to an HTTP endpoint

        ---

        Requires `nodes::service:datastore-manager` permission.
      parameters:
        - description: Upload config
          in: body
          name: config
          schema:
            description: Data Store HTTP Upload Request
            properties:
              filePath:
                description: File path in data store
                example: file.iso
                type: string
              multipart:
                description: Multipart upload
                example: false
                type: boolean
              uri:
                description: Destination URI
                example: http://example.com/file.iso
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
  /v2/node/{nodeID}/data-store/list:
    get:
      description: |-
        List the data store contents

        ---

        Requires `nodes::service:datastore-manager` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            description: File List
            properties:
              files:
                items:
                  $ref: '#/definitions/DataStoreFile'
                type: array
            type: object
      tags:
        - Node
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/data-store/mkdir:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a directory

        ---

        Requires `nodes::service:datastore-manager` permission.
      parameters:
        - description: mkdir
          in: body
          name: mkdir
          schema:
            description: mkdir
            properties:
              filename:
                description: filename
                type: string
            required:
              - filename
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
  /v2/node/{nodeID}/data-store/s3-download:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Copy a file from S3 to the data store

        ---

        Requires `nodes::service:datastore-manager` permission.
      parameters:
        - description: Download config
          in: body
          name: config
          schema:
            description: Data Store S3 Download Request
            properties:
              location:
                description: Target destination in data store
                example: your-file.iso
                type: string
              uri:
                description: S3 location of source file
                example: s3://your-bucket/your-file.iso
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
  /v2/node/{nodeID}/data-store/s3-upload:
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Upload a file from the node to an S3 bucket

        ---

        Requires `nodes::service:datastore-manager` permission.
      parameters:
        - description: Upload config
          in: body
          name: config
          schema:
            description: Data Store S3 Upload Request
            properties:
              bucketDest:
                description: S3 destination
                example: s3://your-bucket/your-destination.iso
                type: string
              filePath:
                description: File path in data store
                example: file.iso
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
  /v2/node/{nodeID}/data-store/tasks:
    get:
      description: |-
        List recent data store activity

        ---

        Requires `nodes::service:datastore-manager` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            description: Task List
            properties:
              tasks:
                items:
                  $ref: '#/definitions/DataStoreTask'
                type: array
            type: object
      tags:
        - Node
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container:
    get:
      description: |-
        List containers

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Container'
            type: array
      tags:
        - Compute
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create a container

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Container
          in: body
          name: container
          schema:
            $ref: '#/definitions/Container'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/node/{nodeID}/exec/container/{containerID}:
    delete:
      description: |-
        Delete a container

        ---

        Requires `node-exec::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Compute
    get:
      description: |-
        Get a container

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Container'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a container

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Container
          in: body
          name: container
          schema:
            $ref: '#/definitions/Container'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/node/{nodeID}/exec/container/{containerID}/capability:
    get:
      description: |-
        Get container capabilities

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerCapabilities'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/config:
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update container config

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Container config
          in: body
          name: config
          schema:
            $ref: '#/definitions/ContainerConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/node/{nodeID}/exec/container/{containerID}/healthcheck:
    get:
      description: |-
        Get container health check

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerHealthCheck'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/interface:
    get:
      description: |-
        List container interfaces

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerInterfaces'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/limit:
    get:
      description: |-
        List container limits

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerLimits'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/logging:
    get:
      description: |-
        Get container logging configuration

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerLogging'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/mount:
    get:
      description: |-
        List container mounts

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerMount'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/port-mapping:
    get:
      description: |-
        List container port mappings

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerPortMapping'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/variable:
    get:
      description: |-
        List container variables

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerVariable'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/virtual-network:
    get:
      description: |-
        List container virtual networks

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContainerVirtualNetwork'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/volume:
    get:
      description: |-
        List container volumes

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/container/{containerID}/vrf:
    get:
      description: |-
        Get container VRF

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ContainerVRF'
      tags:
        - Compute
    parameters:
      - description: Container ID
        in: path
        name: containerID
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/exec/volume:
    get:
      description: |-
        List volumes

        ---

        Requires `node-exec::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
      tags:
        - Compute
    parameters:
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: |-
        Create volume

        ---

        Requires `node-exec::modify` permission.
      parameters:
        - description: Volume
          in: body
          name: volume
          schema:
            $ref: '#/definitions/Volume'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Compute
  /v2/node/{nodeID}/exec/volume/{volumeName}:
    delete:
      description: |-
        Delete a volume

        ---

        Requires `node-exec::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Compute
    parameters:
      - description: Volume Name
        in: path
        name: volumeName
        required: true
        type: string
      - description: Node ID
        in: path
        name: nodeID
        required: true
        type: string
  /v2/node/{nodeID}/kvm/image:
    get:
      description: |
        List KVM images

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMImage'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Create an image

        ---

        Requires `node-kvm::modify` permissions
      parameters:
        - in: body
          name: image
          required: true
          schema:
            $ref: '#/definitions/KVMImage'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - KVM
  /v2/node/{nodeID}/kvm/image/{id}:
    delete:
      consumes:
        - application/json
      description: |
        Delete an image

        ---

        Requires `node-kvm::modify` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - KVM
    get:
      description: |
        Get an image

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KVMImage'
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Image ID
        in: path
        name: id
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update an image

        ---

        Requires `node-kvm::modify` permissions
      parameters:
        - in: body
          name: image
          required: true
          schema:
            $ref: '#/definitions/KVMImage'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KVMImage'
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - KVM
  /v2/node/{nodeID}/kvm/machine:
    get:
      description: |
        List KVM machines

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMMachine'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Create a KVM machines

        ---

        Requires `node-kvm::modify` permissions
      parameters:
        - in: body
          name: machine
          required: true
          schema:
            $ref: '#/definitions/KVMMachine'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - KVM
  /v2/node/{nodeID}/kvm/machine/{id}:
    delete:
      description: |
        Delete a KVM machine from a node (appliance)

        ---

        Requires `node-kvm::modify` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - KVM
    get:
      description: |
        Get a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KVMMachine'
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update a KVM machine

        ---

        Requires `node-kvm::modify` permissions
      parameters:
        - in: body
          name: machine
          required: true
          schema:
            $ref: '#/definitions/KVMMachine'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - KVM
  /v2/node/{nodeID}/kvm/machine/{id}/cloud-init:
    get:
      description: |
        Get cloud init config for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMCloudInit'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/config:
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |
        Update a KVM machine config

        ---

        Requires `node-kvm::modify` permissions
      parameters:
        - in: body
          name: config
          required: true
          schema:
            $ref: '#/definitions/KVMMachineConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - KVM
  /v2/node/{nodeID}/kvm/machine/{id}/cpu:
    get:
      description: |
        Get CPU config for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMCPUConfig'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/interface:
    get:
      description: |
        Get interfaces for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMInterface'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/memory:
    get:
      description: |
        Get memory config for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMMemoryConfig'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/port-mapping:
    get:
      description: |
        Get port mappings for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMPortMapping'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/virtual-network:
    get:
      description: |
        Get virtual networks for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMVirtualNetwork'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/volume:
    get:
      description: |
        Get volumes for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMVolumeConfig'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/machine/{id}/vrf:
    get:
      description: |
        Get VRF config for a KVM machine

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KVMVRF'
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Machine UID
        in: path
        name: id
        required: true
        type: string
  /v2/node/{nodeID}/kvm/volume:
    get:
      description: |
        List volumes

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/KVMVolume'
            type: array
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: |
        Create a volume

        ---

        Requires `node-kvm::modify` permissions
      parameters:
        - in: body
          name: volume
          required: true
          schema:
            $ref: '#/definitions/KVMVolume'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - Node
        - KVM
  /v2/node/{nodeID}/kvm/volume/{name}:
    delete:
      consumes:
        - application/json
      description: |
        Delete a volume

        ---

        Requires `node-kvm::modify` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - Node
        - KVM
    get:
      description: |
        Get a volume

        ---

        Requires `node-kvm::read` permissions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KVMVolume'
      tags:
        - Node
        - KVM
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Volume name
        in: path
        name: name
        required: true
        type: string
  /v2/node/{nodeID}/plugin-logs/gateway-details:
    get:
      description: |
        Get gateway connection telemetry logs for a node (appliance)
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                stats:
                  items:
                    properties:
                      hops:
                        description: Network hop telemetry, if available
                        items:
                          properties:
                            fqdn:
                              type: string
                            hop:
                              type: number
                            ip:
                              type: string
                            maxRtt:
                              type: number
                            meanRtt:
                              type: number
                            minRtt:
                              type: number
                            numRtt:
                              type: number
                          type: object
                        type: array
                      maxRtt:
                        description: Max round-trip time measured for this interval
                        type: number
                      meanRtt:
                        description: Mean round-trip time measured for this interval
                        type: number
                      minRtt:
                        description: Min round-trip time measured for this interval
                        type: number
                      node:
                        description: Node RTT being measured
                        type: string
                      numRtt:
                        description: Number of RTTs measured for this interval
                        type: number
                      stdRtt:
                        description: Standard deviation of RTTs measured for this interval
                        type: number
                      time:
                        description: Unix timestamp, in milliseconds, of the start of the interval
                        type: number
                    type: object
                  type: array
              type: object
            type: array
      tags:
        - Node
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Unix timestamp
        in: query
        name: startDate
        required: true
        type: number
      - description: Unix timestamp
        in: query
        name: endDate
        required: true
        type: number
  /v2/node/{nodeID}/vpn:
    get:
      description: Returns all the VPN networks
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnNodeNetworkModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
    post:
      consumes:
        - application/json
      description: Attach a VPN network
      parameters:
        - in: body
          name: network
          required: true
          schema:
            $ref: '#/definitions/VpnNetworkUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnNodeNetworkInventoryModel'
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}:
    delete:
      description: Deletes a vpn network
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    get:
      description: Returns information about a VPN network
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnNodeNetworkInventoryModel'
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN network
      parameters:
        - in: body
          name: network
          schema:
            $ref: '#/definitions/VpnNetworkUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/dns:
    delete:
      consumes:
        - application/json
      description: Delete a VPN Dns configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    get:
      description: Get All VPN Dns configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnNodeDnsModel'
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Create a VPN Dns configuration
      parameters:
        - in: body
          name: dns
          schema:
            $ref: '#/definitions/VpnDnsUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
    put:
      consumes:
        - application/json
      description: Update a VPN Dns configuration
      parameters:
        - in: body
          name: dns
          schema:
            $ref: '#/definitions/VpnDnsUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/dynamic/export-route:
    get:
      description: Get All VPN's dynamic export routes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnNodeRouteModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN export route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/dynamic/export-route/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN export route
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Route ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN export route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/dynamic/import-route:
    get:
      description: Get All VPN's dynamic import routes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnNodeRouteModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN import route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/dynamic/import-route/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN import route
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Route ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN import route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/interface:
    get:
      description: Get All VPN's interfaces
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnNodeInterfaceModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Create a VPN interface
      parameters:
        - in: body
          name: iface
          schema:
            $ref: '#/definitions/VpnInterfaceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/interface/{interfaceName}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN interface
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Interface name
        in: path
        name: interfaceName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN interface
      parameters:
        - in: body
          name: iface
          schema:
            $ref: '#/definitions/VpnInterfaceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/route:
    get:
      description: Get All VPN's routes
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnNodeRouteModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/route/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a VPN route
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Route ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a VPN route
      parameters:
        - in: body
          name: route
          schema:
            $ref: '#/definitions/VpnRouteUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/service:
    get:
      description: Gets all VPN services
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/VpnNodeServiceModel'
            type: array
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Creates a VPN Service
      parameters:
        - in: body
          name: service
          schema:
            $ref: '#/definitions/VpnServiceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/service/{uid}:
    delete:
      consumes:
        - application/json
      description: Delete a Service
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
      - description: Service ID
        in: path
        name: uid
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update a Service
      parameters:
        - in: body
          name: service
          schema:
            $ref: '#/definitions/VpnServiceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/node/{nodeID}/vpn/{networkName}/wireguard:
    delete:
      consumes:
        - application/json
      description: Delete a VPN WireGuard configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - VPN Network
    get:
      description: Get All VPN WireGuard configuration
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VpnNodeWireguardModel'
      tags:
        - VPN Network
    parameters:
      - $ref: '#/parameters/nodeID'
      - description: Network name
        in: path
        name: networkName
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: Update the VPN WireGuard configuration
      parameters:
        - in: body
          name: wg
          schema:
            $ref: '#/definitions/VpnWireguardUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation Failed
          schema:
            $ref: '#/definitions/ValidationFailed'
      tags:
        - VPN Network
  /v2/policy:
    get:
      description: |-
        List policies

        ---

        Requires `permissions::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Policy'
            type: array
      tags:
        - Permissions
    post:
      consumes:
        - application/json
      description: |-
        Create a policy

        ---

        Requires `permissions::modify` permission.
      parameters:
        - description: Policy
          in: body
          name: policy
          schema:
            $ref: '#/definitions/Policy'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Permissions
  /v2/policy/{name}:
    delete:
      description: |-
        Delete a policy

        ---

        Requires `permissions::modify` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - Permissions
    get:
      description: |-
        Get a policy

        ---

        Requires `permissions::read` permission.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Policy'
        '404':
          description: Not Found
      tags:
        - Permissions
    parameters:
      - description: Policy name
        in: path
        name: name
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: |-
        Update a policy

        ---

        Requires `permissions::modify` permission.
      parameters:
        - description: Policy
          in: body
          name: policy
          schema:
            $ref: '#/definitions/Policy'
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '422':
          description: Validation failed
          schema:
            description: ValidationFailed
            items:
              description: Validation failure
              type: string
            title: ValidationFailed
            type: array
      tags:
        - Permissions
  /v2/user/{email}/groups:
    parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
    post:
      consumes:
        - application/json
      description: Add group to a user
      parameters:
        - in: body
          name: group
          schema:
            properties:
              groupId:
                description: Group ID
                type: string
            required:
              - groupId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - User
  /v2/user/{email}/groups/{group}:
    delete:
      consumes:
        - application/json
      description: Delete a group from a user
      produces:
        - application/json
      responses:
        '200':
          description: OK
      tags:
        - User
    parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      - description: Group ID
        in: path
        name: group
        required: true
        type: string
definitions:
  AlarmChannelModel:
    properties:
      emails:
        type: string
      genericWebhook:
        type: string
      msTeams:
        type: string
      name:
        type: string
      opsGenie:
        type: string
      pagerduty:
        type: string
      slackChannel:
        type: string
      slackWebhook:
        type: string
      uid:
        type: string
    required:
      - name
    title: AlarmChannel
    type: object
  AlarmModel:
    properties:
      channels:
        description: Channel IDs to broadcast alerts to
        items:
          type: string
        type: array
      description:
        type: string
      freetext:
        description: text to match
        type: string
      name:
        type: string
      nodes:
        description: Node names to match
        items:
          type: string
        type: array
      operator:
        description: any/all/none
        type: string
      tags:
        description: Tags expressed as key=value to match
        items:
          type: string
        type: array
      threshold:
        description: INFO/WARNING/ERROR/CRITICAL
        type: string
      types:
        description: Event types to match
        items:
          type: string
        type: array
      uid:
        type: string
    required:
      - name
    title: Alarm
    type: object
  Alert:
    description: Alert
    properties:
      alert_message:
        description: More information about the alert
        example: Node mynode abnormally disconnected
        type: string
      node:
        description: Node name that generated the alert
        example: mynode
        type: string
      node_id:
        description: Node ID that generated the alert
        example: 19084f81-5668-41ee-adbe-295e4c65531a
        type: string
      timestamp:
        description: Unix timestamp of alert
        example: 1661440360
        type: number
      type:
        description: Type of alert
        example: Data Plane Disruption
        type: string
      uid:
        description: Unique ID of alert
        example: 2DqxLdknjWxEkGt474d2Cstsa1O
        type: string
    title: Alert
    type: object
  AlertSuppressionModel:
    properties:
      description:
        type: string
      end:
        format: date-time
        type: string
      start:
        format: date-time
        type: string
    required:
      - start
      - end
    title: AlertSuppression
    type: object
  AlertV2:
    description: Alert V2
    properties:
      eventType:
        description: Type of alert
        example: Data Plane Disruption
        type: string
      message:
        description: More information about the alert
        example: Node mynode abnormally disconnected
        type: string
      nodeId:
        description: Node ID that generated the alert
        example: 19084f81-5668-41ee-adbe-295e4c65531a
        type: string
      nodeName:
        description: Node name that generated the alert
        example: mynode
        type: string
      timestamp:
        description: Unix timestamp of alert
        example: 1661440360
        type: number
      uid:
        description: Unique ID of alert
        example: 2DqxLdknjWxEkGt474d2Cstsa1O
        type: string
    title: Alert V2
    type: object
  Application:
    description: Application
    properties:
      appType:
        description: Type of application
        enum:
          - web
          - remote
          - wireguard
        type: string
      description:
        type: string
      edgeNode:
        description: Edge node for the application
        type: string
      gatewayNode:
        description: Gateway node for the application
        type: string
      hostname:
        description: Hostname of application
        type: string
      name:
        description: Name of application
        type: string
      uid:
        description: Unique ID of application
        type: string
    title: Application
    type: object
  ApplicationAccessRule:
    description: Application Access Rule
    properties:
      action:
        description: Action
        enum:
          - allow
          - block
        type: string
      exceptions:
        $ref: '#/definitions/Criteria'
      includes:
        $ref: '#/definitions/Criteria'
      name:
        description: Name
        type: string
      requires:
        $ref: '#/definitions/Criteria'
    required:
      - name
      - action
    title: Application Access Rule
    type: object
  Certificate:
    description: Certificate
    properties:
      expiresAt:
        description: Unix timestamp when certificate expires
        type: number
      fqdn:
        description: FQDN of certificate
        example: mynode.trustgrid.io
        type: string
      warning:
        description: Warning message
        type: string
    title: Certificate
    type: object
  CertificateParts:
    description: CertificateParts
    properties:
      chain:
        description: Certificate chain in PEM format
        type: string
      private_key:
        description: Private key for the certificate in PEM format
        type: string
    required:
      - chain
      - private_key
    title: CertificateParts
    type: object
  ClusterModel:
    properties:
      config:
        description: Cluster Configuration
        type: object
      domain:
        description: Cluster domain
        type: string
      fqdn:
        description: Cluster FQDN
        type: string
      health:
        description: Cluster health
        enum:
          - healthy
          - unhealthy
          - offline
          - unknown
        type: string
      mode:
        description: Cluster Failback Mode
        enum:
          - autoFailback
          - manualFailback
        type: string
      name:
        description: Cluster name
        type: string
    title: ClusterModel
    type: object

  ClusterUpgrade:
    description: ClusterUpgrade
    properties:
      error:
        description: Error message
        type: string
      fqdn:
        description: Cluster FQDN
        example: mycluster.trustgrid.io
        type: string
      nodeUpgrades:
        items:
          $ref: '#/definitions/NodeUpgrade'
        type: array
      state:
        description: Upgrade state
        type: string
      tags:
        additionalProperties:
          description: Tag values
          type: string
        description: Cluster tags
        type: object
    title: ClusterUpgrade
    type: object

  EdgeConnector:
    example:
      description: My connector
      enabled: true
      localIp: 100.100.64.1
      maxmbps: 100
      nic: eth0
      node: node1
      port: 1234
      index: 1
      protocol: tcp
      service: ssh
    properties:
      description:
        description: connector description
        type: string
      enabled:
        description: whether connector is enabled
        type: boolean
      index:
        description: Sorting index for the connector
        type: number
      localIp:
        description: local IP address
        type: string
      maxmbps:
        description: maximum bandwidth in Mbps
        type: number
      nic:
        description: network interface name
        type: string
      node:
        description: node name
        type: string
      port:
        description: connector port
        type: number
      protocol:
        description: connector protocol
        enum:
          - udp
          - tcp
          - tftp
          - ftp
        type: string
      service:
        description: service name
        type: string
      sourceBlock:
        description: if provided, only traffic from this CIDR block will be allowed
        type: string
    required:
      - node
      - port
      - protocol
      - service

  ConnectorConfig:
    example:
      connectors:
        - description: My connector
          enabled: true
          id: 1e1d36b2-63b6-46bb-8334-a80a828afb5e
          localIp: 100.100.64.1
          maxmbps: 100
          nic: eth0
          node: node1
          port: 1234
          protocol: tcp
          service: ssh
    properties:
      connectors:
        items:
          properties:
            description:
              description: connector description
              type: string
            enabled:
              description: whether connector is enabled
              type: boolean
            id:
              description: unique ID of connector
              type: string
            localIp:
              description: local IP address
              type: string
            maxmbps:
              description: maximum bandwidth in Mbps
              type: number
            nic:
              description: network interface name
              type: string
            node:
              description: node name
              type: string
            port:
              description: connector port
              type: number
            protocol:
              description: connector protocol
              enum:
                - udp
                - tcp
                - tftp
                - ftp
              type: string
            service:
              description: service name
              type: string
            sourceBlock:
              description: if provided, only traffic from this CIDR block will be allowed
              type: string
          required:
            - id
            - node
            - port
            - protocol
            - service
          type: object
        type: array
    type: object

  Container:
    description: Container
    properties:
      command:
        description: Command to run in the container
        type: string
      description:
        description: Container description
        example: my container
        type: string
      enabled:
        type: boolean
      execType:
        description: Execution type
        enum:
          - onDemand
          - service
          - recurring
        type: string
      hostname:
        description: Container hostname
        example: mycontainer
        type: string
      id:
        description: Container ID
        example: b4011aa3-d0d5-4c5c-9c0b-19095ba515d5
        type: string
      image:
        $ref: '#/definitions/Image'
      name:
        description: Container name
        example: mycontainer
        type: string
      privileged:
        description: Run the container as a privileged user
        type: boolean
      requireConnectivity:
        description: Only start the container if the node has connectivity to the control plane. Needed for encrypted volumes.
        type: boolean
      stopTime:
        description: Grace period for container to stop when requested, in seconds
        example: '60'
        type: string
      useInit:
        description: Indicates that an init process should be used as PID 1 in the container. Ensures responsibilities of an init system are performed inside the container (e.g., handling exit signals).
        type: boolean
      user:
        description: User name (or UID) and optionally the group (or GID) to use when starting the container.  This will override the USER specified in the image
        type: string
    title: Container
    type: object
  ContainerCapabilities:
    description: Container Capabilities
    properties:
      addCaps:
        items:
          description: Added capabilities
          type: string
        type: array
      dropCaps:
        items:
          description: Dropped capabilities
          type: string
        type: array
    title: Container Capabilities
    type: object
  ContainerConfig:
    description: ContainerConfig
    properties:
      capabilities:
        $ref: '#/definitions/ContainerCapabilities'
      healthCheck:
        $ref: '#/definitions/ContainerHealthCheck'
      interfaces:
        items:
          $ref: '#/definitions/ContainerInterfaces'
        type: array
      limits:
        $ref: '#/definitions/ContainerLimits'
      logging:
        $ref: '#/definitions/ContainerLogging'
      mounts:
        items:
          $ref: '#/definitions/ContainerMount'
        type: array
      portMappings:
        items:
          $ref: '#/definitions/ContainerPortMapping'
        type: array
      variables:
        items:
          $ref: '#/definitions/ContainerVariable'
        type: array
      virtualNetworks:
        items:
          $ref: '#/definitions/ContainerVirtualNetwork'
        type: array
      vrf:
        $ref: '#/definitions/ContainerVRF'
    title: ContainerConfig
    type: object
  ContainerHealthCheck:
    description: Container Health Check
    properties:
      command:
        description: Command
        example: /bin/sh -c 'exit 0'
        type: string
      interval:
        description: Interval
        example: 10
        type: number
      retries:
        default: 3
        description: Number of health check retries before a container is marked unhealthy
        example: 10
        type: number
      startPeriod:
        description: Grace period before health checks are monitored, in seconds
        example: 10
        type: number
      timeout:
        description: Timeout
        example: 10
        type: number
    title: Container Health Check
    type: object
  ContainerInterfaces:
    description: Container Interfaces
    properties:
      dest:
        description: Destination
        example: 10.10.14.0/24
        type: string
      name:
        description: Interface name
        example: eth0
        type: string
      uid:
        description: UID
        example: 7da978ea-3d64-470a-8494-20ca4981e184
        type: string
    title: Container Interfaces
    type: object
  ContainerLimits:
    description: Container Limits
    properties:
      cpuMax:
        description: CPU max
        example: 80
        type: number
      ioRbps:
        description: IO read rate
        example: 80
        type: number
      ioRiops:
        description: IO read IOPS
        example: 80
        type: number
      ioWbps:
        description: IO write rate
        example: 80
        type: number
      ioWiops:
        description: IO write IOPS
        example: 80
        type: number
      legacyMemHigh:
        description: Legacy memory high
        example: 80
        type: number
      legacyMemMax:
        description: Legacy memory max
        example: 80
        type: number
      limits:
        items:
          description: Limit
          properties:
            hard:
              description: Hard limit
              example: 20
              type: number
            soft:
              description: Soft limit
              example: 10
              type: number
            type:
              description: Limit type
              enum:
                - core
                - cpu
                - data
                - fsize
                - locks
                - memlock
                - msgqueue
                - nice
                - nofile
                - nproc
                - rss
                - rtprio
                - rttime
                - sigpending
                - stack
              type: string
          type: object
        type: array
      memHigh:
        description: Memory high
        example: 80
        type: number
      memMax:
        description: Memory max
        example: 80
        type: number
    title: Container Limits
    type: object
  ContainerLogging:
    description: Container Logging
    properties:
      maxFileSize:
        description: Maximum file size in MB
        example: 10
        type: number
      numFiles:
        description: Maximum number of files
        example: 10
        type: number
    title: Container Logging
    type: object
  ContainerMount:
    description: Container Mount
    properties:
      dest:
        description: Destination
        example: /myvolume
        type: string
      encrypted:
        description: Encrypted
        type: boolean
      mountType:
        description: Mount type
        enum:
          - volume
          - bind
        type: string
      source:
        description: Source
        example: myvolume
        type: string
      uid:
        description: UID
        example: 3ae09040-396e-4a7a-a3b7-dfb99a241685
        type: string
    title: Container Mount
    type: object
  ContainerPortMapping:
    description: Container Port Mapping
    properties:
      containerPort:
        description: Container port
        example: '8080'
        type: string
      hostPort:
        description: Host port
        example: '8080'
        type: string
      iface:
        description: Interface
        example: eth0
        type: string
      protocol:
        description: Protocol
        enum:
          - tcp
          - udp
        type: string
      uid:
        description: UID
        example: d0522f1b-cc1a-4aad-bb46-99304a5e152d
        type: string
    title: Container Port Mapping
    type: object
  ContainerVRF:
    description: Container VRF
    properties:
      name:
        description: VRF name
        example: myvrf
        type: string
    title: Container VRF
    type: object
  ContainerVariable:
    description: Container Variable
    properties:
      name:
        description: Variable name
        example: myvar
        type: string
      value:
        description: Variable value
        example: myvalue
        type: string
    title: Container Variable
    type: object
  ContainerVirtualNetwork:
    description: Container Virtual Network
    properties:
      allowOutbound:
        description: Allow outbound traffic
        type: boolean
      ip:
        description: Virtual IP
        example: 10.10.10.14
        type: string
      network:
        description: Network name
        example: mynetwork
        type: string
      uid:
        description: UID
        example: 59349874-2e2a-4c51-b864-2782a3a489af
        type: string
    title: Container Virtual Network
    type: object
  CreateClusterModel:
    properties:
      name:
        description: Cluster name
        type: string
    required:
      - name
    title: CreateClusterModel
    type: object
  Criteria:
    description: Criteria
    properties:
      country:
        items:
          description: Country codes
          example: US
          type: string
        type: array
      emails:
        items:
          description: Email addresses
          type: string
        type: array
      emailsEndingIn:
        items:
          description: Email suffixes
          example: '@trustgrid.io'
          type: string
        type: array
      everyone:
        description: Everyone
        type: boolean
      idpGroups:
        items:
          description: IDP Group IDs
          type: string
        type: array
      ipRanges:
        items:
          description: IP Ranges
          type: string
        type: array
    title: Criteria
    type: object
  DataStoreFile:
    description: Data Store File
    properties:
      files:
        description: Children, if a directory. This is a recursive model.
        type: string
      name:
        description: File name
        example: win2019-serverli.qcow2
        type: string
      path:
        description: File path
        example: qcows/win2019-serverli.qcow2
        type: string
      size:
        description: File size
        example: 9.4 GB
        type: string
      type:
        description: File type
        enum:
          - file
          - directory
        type: string
    title: Data Store File
    type: object
  DataStoreTask:
    description: DataStoreTask
    properties:
      details:
        description: Task details
        example: Finished the file transfer
        type: string
      eTime:
        description: End timestamp
        example: 1667861503331
        type: number
      id:
        description: ID
        example: 0d7f7145-32bd-45e9-ac4b-9cf04887392
        type: string
      name:
        description: Task name
        example: Upload S3 File
        type: string
      sTime:
        description: Start timestamp
        example: 1667861503331
        type: number
      status:
        description: Task status
        example: Completed
        type: string
    title: DataStoreTask
    type: object
  DomainNetworkAccessPolicy:
    description: Domain Network Access Policy
    properties:
      description:
        type: string
      dest:
        type: string
      notDest:
        type: boolean
      ports:
        type: string
      protocol:
        description: Protocol
        enum:
          - any
          - tcp
          - udp
          - icmp
        type: string
      source:
        type: string
      uid:
        type: string
    required:
      - protocol
      - source
      - dest
    title: Domain Network Access Policy
    type: object
  DomainNetworkAuthorizationGroup:
    description: Domain Network Authorization Group
    properties:
      description:
        type: string
      name:
        description: Group name
        type: string
    title: Domain Network Authorization Group
    type: object
  DomainNetworkAuthorizationGroupMembership:
    description: Domain Network Authorization Group Membership
    properties:
      description:
        type: string
      idp:
        type: string
      memberType:
        type: string
      name:
        type: string
      uid:
        type: string
    title: Domain Network Authorization Group Membership
    type: object
  DomainNetworkDNSConfiguration:
    description: Domain Network DNS Configuration
    properties:
      enabled:
        type: boolean
      server:
        type: string
    title: Domain Network DNS Configuration
    type: object
  DomainNetworkDNSRecord:
    description: Domain Network DNS Record
    properties:
      name:
        type: string
      recordType:
        type: string
      ttl:
        type: number
      value:
        type: string
    title: Domain Network DNS Record
    type: object
  DomainNetworkDNSZone:
    description: Domain Network DNS Zone
    properties:
      description:
        type: string
      name:
        type: string
      resolver:
        type: string
    title: Domain Network DNS Zone
    type: object
  DomainNetworkGroup:
    description: Domain Network Group
    properties:
      description:
        type: string
      name:
        description: Name
        type: string
    title: Domain Network Group
    type: object
  DomainNetworkGroupMembership:
    description: Domain Network Group Membership
    properties:
      groupName:
        type: string
      objectName:
        type: string
    title: Domain Network Group Membership
    type: object
  DomainNetworkInventory:
    description: Domain Network Inventory
    properties:
      accessPolicies:
        items:
          $ref: '#/definitions/DomainNetworkAccessPolicy'
        type: array
      dnsConfig:
        items:
          $ref: '#/definitions/DomainNetworkDNSConfiguration'
        type: array
      dnsRecords:
        items:
          $ref: '#/definitions/DomainNetworkDNSRecord'
        type: array
      dnsZones:
        items:
          $ref: '#/definitions/DomainNetworkDNSZone'
        type: array
      networkGroupMemberships:
        items:
          $ref: '#/definitions/DomainNetworkGroupMembership'
        type: array
      networkGroups:
        items:
          $ref: '#/definitions/DomainNetworkGroup'
        type: array
      networkObjects:
        items:
          $ref: '#/definitions/DomainNetworkObject'
        type: array
      routes:
        items:
          $ref: '#/definitions/DomainNetworkRoute'
        type: array
    title: Domain Network Inventory
    type: object
  DomainNetworkObject:
    description: Domain Network Object
    properties:
      cidr:
        type: string
      description:
        type: string
      name:
        type: string
    title: Domain Network Object
    type: object
  DomainNetworkRoute:
    description: DomainNetworkRoute
    properties:
      description:
        type: string
      domainName:
        type: string
      metric:
        type: number
      networkCidr:
        type: string
      networkName:
        type: string
      nodeName:
        type: string
      uid:
        type: string
    title: DomainNetworkRoute
    type: object
  EventModel:
    properties:
      eventType:
        type: string
      message:
        type: string
      nodeId:
        type: string
      nodeName:
        type: string
      receivedTime:
        description: Ingest time of the event
        type: number
      timestamp:
        description: Creation time of the event
        type: number
      uid:
        type: string
    title: Event
    type: object
  Group:
    properties:
      description:
        type: string
      name:
        type: string
      referenceId:
        type: string
      uid:
        type: string
    type: object
  GroupMember:
    properties:
      group:
        type: string
      user:
        type: string
    type: object
  GroupModel:
    properties:
      description:
        description: Group Description
        type: string
      name:
        description: Group Name
        type: string
      uid:
        description: Group ID
        type: string
    title: GroupModel
    type: object
  IdentityProviderModel:
    allOf:
      - $ref: '#/definitions/IdentityProviderUpdateModel'
      - properties:
          uid:
            type: string
        type: object
  IdentityProviderUpdateModel:
    properties:
      clientId:
        type: string
      description:
        type: string
      name:
        type: string
      uri:
        type: string
    type: object
  IdpGroup:
    properties:
      group:
        type: string
      groupReferenceId:
        type: string
      idp:
        type: string
    type: object
  Image:
    description: Image
    properties:
      repository:
        description: Image repository
        example: mycompany.trustgrid.io/myimage
        type: string
      tag:
        description: Image tag
        example: latest
        type: string
    title: Image
    type: object
  KVMCPUConfig:
    description: CPU configuration for the machine
    example:
      num: 2
    properties:
      num:
        description: Number of CPUs
        type: number
    type: object
  KVMCloudInit:
    description: Cloud init data
    example:
      userData: |
        #cloud-config

        set_timezone: America/Boise
    properties:
      metaData:
        description: Metadata to be injected into the machine
        type: string
      userData:
        description: User data to be injected into the machine
        type: string
    type: object
  KVMImage:
    example:
      description: My Win10 KVM image
      displayName: KVM App
      id: 5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f
      location: /win2020-server.qcow2
      os: win10
    properties:
      description:
        description: Description of the image
        type: string
      displayName:
        description: Display name of the image
        type: string
      id:
        description: Unique ID of the image
        type: string
      location:
        description: Location of the image on the node
        type: string
      os:
        description: OS type of the image
        type: string
    type: object
  KVMInterface:
    example:
      ip: 10.10.10.10
      name: wan0
      uid: 5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f
    properties:
      dest:
        description: Internal destination of the interface
        type: string
      name:
        description: Name of the interface
        type: string
      uid:
        description: Unique ID of the interface
        type: string
    type: object
  KVMMachine:
    example:
      autoStart: false
      description: My Linux VM
      id: 5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f
      image: 2383ca19-baab-4e81-8b14-cff320525af5
      name: linux-vm
      stopTimeout: 120
    properties:
      autoStart:
        description: Whether the machine should be started automatically after deploy
        type: boolean
      description:
        description: Description of the machine
        type: string
      id:
        description: Unique ID of the machine
        type: string
      image:
        description: ID of the image for the machine
        type: string
      name:
        description: Name of the machine
        type: string
      stopTimeout:
        description: Timeout in seconds for the machine to stop gracefully
        type: number
    type: object
  KVMMachineConfig:
    properties:
      cloudInit:
        $ref: '#/definitions/KVMCloudInit'
      cpu:
        $ref: '#/definitions/KVMCPUConfig'
      interfaces:
        description: List of virtual interfaces for the VM
        items:
          $ref: '#/definitions/KVMInterface'
        type: array
      memory:
        $ref: '#/definitions/KVMMemoryConfig'
      portMappings:
        description: Host ports to map to virtual machine ports
        items:
          $ref: '#/definitions/KVMPortMapping'
        type: array
      virtualNetworks:
        description: List of virtual networks to attach to the machine
        items:
          $ref: '#/definitions/KVMVirtualNetwork'
        type: array
      volumes:
        description: List of volumes to attach to the machine
        items:
          $ref: '#/definitions/KVMVolumeConfig'
        type: array
      vrf:
        $ref: '#/definitions/KVMVRF'
    type: object
  KVMMemoryConfig:
    description: Memory configuration for the machine
    example:
      mem: 4
      unit: GB
    properties:
      mem:
        description: Amount of memory for the machine
        type: number
      unit:
        description: Unit for mem provided
        enum:
          - b
          - KB
          - MB
          - GB
        type: string
    type: object
  KVMPortMapping:
    description: Port mapping for the machine
    example:
      containerPort: 80
      hostPort: 8080
      iface: wan0
      protocol: TCP
      uid: 5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f
    properties:
      containerPort:
        description: VM port
        type: number
      hostPort:
        description: Host port
        type: number
      iface:
        description: Interface of the port mapping
        type: string
      protocol:
        description: Protocol of the port mapping
        enum:
          - TCP
          - UDP
        type: string
      uid:
        description: Unique ID of the port mapping
        type: string
    type: object
  KVMVRF:
    description: VRF configuration for the machine
    example:
      name: default
    properties:
      name:
        description: Name of the VRF
        type: string
    type: object
  KVMVirtualNetwork:
    description: Virtual network to attach to the VM
    example:
      allowOutbound: false
      ip: 10.10.10.10
      network: my-vnet
      uid: 5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f
    properties:
      allowOutbound:
        description: Whether to allow outbound traffic
        type: boolean
      ip:
        description: VM virtual IP
        type: string
      network:
        description: ID of the virtual network
        type: string
      uid:
        description: Unique ID of the virtual network association
        type: string
    type: object
  KVMVolume:
    example:
      encrypted: true
      name: my-volume
      provisionType: thin
      size: 1000000000
    properties:
      encrypted:
        description: Whether the volume should be encrypted
        type: boolean
      name:
        description: Name of the volume
        type: string
      provisionType:
        description: Provisiong method for the volume
        enum:
          - thin
          - lazy
          - eager
        type: string
      size:
        description: Size of the volume in bytes
        type: number
    type: object
  KVMVolumeConfig:
    description: Volume to attach to the VM
    example:
      name: extra-disk
    properties:
      name:
        description: Name of the volume
        type: string
    type: object
  Node:
    description: Node
    properties:
      cluster:
        description: Cluster FQDN
        example: mycluster.trustgrid.io
        type: string
      config:
        description: Node config
        type: object
      name:
        description: Node name
        example: mynode
        type: string
      online:
        description: True when the node is connected to the control plane
        type: boolean
      shadow:
        description: Node shadow
        type: object
      state:
        description: Node state
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      tags:
        description: Node tags
        type: object
      type:
        description: Device type
        enum:
          - Agent
          - Node
        type: string
      uid:
        description: Node ID
        example: 19084f81-5668-41ee-adbe-295e4c65531a
        type: string
    title: Node
    type: object
  NodeUpgrade:
    description: NodeUpgrade
    properties:
      error:
        description: Error message
        type: string
      name:
        description: Node name
        example: mynode
        type: string
      nodeID:
        description: Node ID
        example: 19084f81-5668-41ee-adbe-295e4c65531a
        type: string
      state:
        description: Upgrade state
        type: string
      tags:
        additionalProperties:
          description: Tag values
          type: string
        description: Node tags
        type: object
    title: NodeUpgrade
    type: object
  OpenIDConfig:
    description: OpenID Config
    properties:
      authEndpoint:
        description: Auth endpoint
        example: https://your-endpoint-url
        type: string
      clientId:
        description: Client ID
        example: some-client-id
        type: string
      issuer:
        description: Issuer
        example: https://your-issuer-url
        type: string
      secret:
        description: Client secret
        example: some-client-secret
        type: string
      tokenEndpoint:
        description: Token endpoint
        example: https://your-token-url
        type: string
      userInfoEndpoint:
        description: User info endpoint
        example: https://your-user-info-url
        type: string
    title: OpenID Config
    type: object
  OrderModel:
    properties:
      address1:
        type: string
      address2:
        type: string
      applianceType:
        type: string
      attn:
        type: string
      city:
        type: string
      clusterIp:
        type: string
      comments:
        items:
          type: object
        type: array
      companyName:
        type: string
      contactEmail:
        type: string
      contactName:
        type: string
      contactPhone:
        type: string
      customerRefNum:
        type: string
      domain:
        type: string
      dueDate:
        type: string
      endUserAccountNum:
        type: string
      flagged:
        type: boolean
      ha:
        description: True when this order is for an HA pair
        type: boolean
      interfacesCount:
        description: Number of interfaces to configure per node
        maximum: 2
        minimum: 1
        type: number
      locationName:
        type: string
      nats:
        items:
          properties:
            description:
              description: Description
              type: string
            localCidr:
              description: Local CIDR
              type: string
            networkCidr:
              description: Network CIDR
              type: string
          type: object
        type: array
      nodeCount:
        description: Number of nodes needed to fulfill order
        maximum: 2
        minimum: 1
        type: number
      nodeName:
        type: string
      nodes:
        items:
          properties:
            dns1:
              type: string
            dns2:
              type: string
            interfaces:
              items:
                properties:
                  dhcp:
                    type: boolean
                  gateway:
                    type: string
                  ip:
                    type: string
                  subnet:
                    type: string
                type: object
              type: array
            name:
              type: string
          type: object
        type: array
      notes:
        type: string
      orderNum:
        description: System-wide unique order number
        type: number
      routedNetworks:
        type: string
      siteType:
        description: Site deployment type
        enum:
          - primary
          - secondary
          - test
        type: string
      state:
        type: string
      status:
        description: Order status. API-side holistic validations apply to orders whose status is in provisioning, qa, shipped, delivered, installed, and in production.
        enum:
          - new
          - gathering info
          - pending feedback
          - info received
          - provisioning
          - qa
          - shipped
          - delivered
          - installed
          - in production
          - archived
          - cancelled
        type: string
      technicalContactEmail:
        type: string
      technicalContactName:
        type: string
      technicalContactPhone:
        type: string
      uid:
        type: string
      zip:
        type: string
    type: object
  OrgModel:
    properties:
      domain:
        description: Org root domain
        type: string
      name:
        description: Org name
        type: string
      s3_access_key:
        description: S3 access key for log exports
        type: string
      s3_bucket:
        description: S3 bucket for log exports
        type: string
      s3_prefix:
        description: S3 key prefix for log exports
        type: string
      s3_region:
        description: S3 region for log exports
        type: string
      uid:
        description: Org ID
        type: string
    required:
      - name
    title: OrgModel
    type: object
  Policy:
    description: Policy
    properties:
      description:
        description: Policy description
        example: My policy description
        type: string
      name:
        description: Policy name
        example: my-policy
        type: string
      resources:
        items:
          description: TGRNs affected by the policy
          type: string
        type: array
      statements:
        items:
          description: Permission statement
          properties:
            actions:
              items:
                description: action
                type: string
              type: array
            effect:
              description: Statement effect
              enum:
                - allow
                - deny
                - noop
              type: string
          type: object
        type: array
    title: Policy
    type: object
  PortForwarding:
    description: Port Forwarding
    properties:
      ip:
        type: string
      nodeName:
        type: string
      port:
        type: number
      serviceName:
        type: string
      uid:
        type: string
    title: Port Forwarding
    type: object
  RepositoryModel:
    properties:
      name:
        type: string
    title: RepositoryModel
    type: object
  RepositoryTagModel:
    properties:
      name:
        type: string
    title: RepositoryTagModel
    type: object
  SAMLConfig:
    description: SAML Config
    properties:
      cert:
        description: Certificate
        example: your-idp-cert
        type: string
      issuer:
        description: Issuer
        example: https://your-issuer-url
        type: string
      loginUrl:
        description: Login URL
        example: https://idp-login-url
        type: string
      token_expiration:
        description: Token expiration
        example: 3600
        type: number
    title: SAML Config
    type: object

  EdgeService:
    properties:
      description:
        description: service description
        type: string
      enabled:
        description: whether service is enabled
        type: boolean
      host:
        description: destination host name
        type: string
      index:
        description: sorting index
        type: number
      name:
        description: service name
        type: string
      port:
        description: destination port
        maximum: 65536
        minimum: 1
        type: number
      protocol:
        description: protocol
        enum:
          - udp
          - tcp
          - tftp
          - ftp
          - rdp
          - vnc
          - ssh
        type: string
    required:
      - host
      - port
      - protocol
      - name
    type: object

  ServiceConfig:
    example:
      services:
        - description: nginx
          enabled: true
          host: 127.0.0.1
          id: 1e1d36b2-63b6-46bb-8334-a80a828afb5f
          name: nginx
          port: 80
          protocol: tcp
    properties:
      connectors:
        items:
          properties:
            description:
              description: service description
              type: string
            enabled:
              description: whether service is enabled
              type: boolean
            host:
              description: destination host name
              type: string
            id:
              description: unique ID of service
              type: string
            name:
              description: service name
              type: string
            port:
              description: destination port
              maximum: 65536
              minimum: 1
              type: number
            protocol:
              description: protocol
              enum:
                - udp
                - tcp
                - tftp
                - ftp
                - rdp
                - vnc
                - ssh
              type: string
          required:
            - id
            - host
            - port
            - protocol
            - name
          type: object
        type: array
    type: object

  Tag:
    description: Tag
    properties:
      created_at:
        description: Unix timestamp when tag was created
        type: number
      name:
        description: Tag name
        example: prod_status
        type: string
      values:
        items:
          description: Tag values
          type: string
        type: array
    title: Tag
    type: object
  TagValueModel:
    properties:
      value:
        description: Tag value
        type: string
    required:
      - value
    title: TagValueModel
    type: object
  UID:
    description: UID
    properties:
      uid:
        description: Unique ID
        example: a9f7cfec-da06-4822-b4ab-389e4ad51931
        type: string
    title: UID
    type: object

  Upgrade:
    description: Upgrade
    properties:
      clusterUpgrades:
        items:
          $ref: '#/definitions/ClusterUpgrade'
        type: array
      completedAt:
        description: Upgrade completion time
        type: string
      dryRun:
        description: Whether this was a dry-run
        type: boolean
      excludeTags:
        additionalProperties:
          description: Tag values
          type: string
        description: Exclude devices with these tags
        type: object
      failoverApproved:
        description: True once a user has approved cluster failovers
        type: boolean
      includeTags:
        additionalProperties:
          description: Tag values
          type: string
        description: Include devices with these tags
        type: object
      manualFailover:
        description: Whether to require approval to failover clusters
        type: boolean
      name:
        description: Name of upgrade
        example: Sep27
        type: string
      nodeUpgrades:
        items:
          $ref: '#/definitions/NodeUpgrade'
        type: array
      offlineTimeout:
        description: Minutes to wait before failing (timing out) a workflow for a node in the offline state
        type: number
      startedAt:
        description: Upgrade start time
        type: string
      status:
        description: Status of upgrade
        enum:
          - active
          - planning
          - complete
        type: string
      uid:
        description: Unique ID of upgrade
        example: 2DqxLdknjWxEkGt474d2Cstsa1O
        type: string
      upgradeTimeout:
        description: Minutes to wait before failing (timing out) a workflow
        type: number
    title: Upgrade
    type: object
  UpgradeLog:
    description: UpgradeLog
    properties:
      entity:
        description: Log subject type
        example: Node
        type: string
      entityID:
        description: Log subject ID
        example: 19084f81-5668-41ee-adbe-295e4c65531a
        type: string
      level:
        description: Level of log, like error/warn/info
        type: string
      message:
        description: Log message
        type: string
      timestamp:
        description: Timestamp of log entry
        example: 2024-10-21 11:55:26.066709233 -0600 MDT m=+0.000520863
        type: string
      uid:
        description: Unique ID of log entry
        example: 821abe7a-f895-4fa7-93d6-e03d4f82153c
        type: string
    title: UpgradeLog
    type: object
  UpgradeUpdateParams:
    description: UpgradeUpdateParams
    properties:
      excludeTags:
        additionalProperties:
          description: Tag values
          type: string
        description: Exclude devices with these tags
        type: object
      includeTags:
        additionalProperties:
          description: Tag values
          type: string
        description: Include devices with these tags
        type: object
      manualFailover:
        description: Whether to require approval to failover clusters
        type: boolean
      name:
        description: Upgrade name
        type: string
      offlineTimeout:
        description: Minutes to wait before failing (timing out) a workflow for a node in the offline state
        type: number
      upgradeTimeout:
        description: Minutes to wait before failing (timing out) a workflow
        type: number
    required:
      - name
    title: UpgradeUpdateParams
    type: object
  UserModel:
    properties:
      email:
        description: User's email
        type: string
    title: UserModel
    type: object
  ValidationFailed:
    description: ValidationFailed
    items:
      description: Validation failure
      type: string
    title: ValidationFailed
    type: array
  VirtualNetwork:
    description: Virtual Network
    properties:
      description:
        type: string
      name:
        description: Name of virtual network
        type: string
      networkCidr:
        description: Virtual network CIDR
        example: 10.10.14.0/24
        type: string
    title: Virtual Network
    type: object
  Volume:
    description: Volume
    properties:
      encrypted:
        description: Encrypted
        type: boolean
      name:
        description: Volume name
        example: myvolume
        type: string
    title: Volume
    type: object
  VpnClusterDnsModel:
    allOf:
      - $ref: '#/definitions/VpnDnsUpdateModel'
      - properties:
          fqdn:
            type: string
          networkName:
            type: string
        type: object
  VpnClusterInterfaceModel:
    allOf:
      - $ref: '#/definitions/VpnInterfaceUpdateModel'
      - properties:
          fqdn:
            type: string
          networkName:
            type: string
        type: object
  VpnClusterNetworkInventoryModel:
    properties:
      dns:
        $ref: '#/definitions/VpnClusterDnsModel'
      exportRoutes:
        items:
          $ref: '#/definitions/VpnNodeRouteModel'
        type: array
      importRoutes:
        items:
          $ref: '#/definitions/VpnNodeRouteModel'
        type: array
      interfaces:
        items:
          $ref: '#/definitions/VpnClusterInterfaceModel'
        type: array
      route:
        type: string
      routes:
        items:
          $ref: '#/definitions/VpnClusterRouteModel'
        type: array
      services:
        items:
          $ref: '#/definitions/VpnClusterServiceModel'
        type: array
      wireguard:
        $ref: '#/definitions/VpnClusterWireguardModel'
    type: object
  VpnClusterNetworkModel:
    allOf:
      - $ref: '#/definitions/VpnNetworkUpdateModel'
      - properties:
          fqdn:
            type: string
          networkName:
            type: string
        type: object
  VpnClusterRouteModel:
    allOf:
      - $ref: '#/definitions/VpnRouteUpdateModel'
      - properties:
          fqdn:
            type: string
          networkName:
            type: string
          uid:
            type: string
        type: object
  VpnClusterServiceModel:
    allOf:
      - $ref: '#/definitions/VpnServiceUpdateModel'
      - properties:
          fqdn:
            type: string
          networkName:
            type: string
          uid:
            type: string
        type: object
  VpnClusterWireguardModel:
    allOf:
      - $ref: '#/definitions/VpnWireguardUpdateModel'
      - properties:
          fqdn:
            type: string
          networkName:
            type: string
        type: object
  VpnDnsUpdateModel:
    properties:
      enabled:
        type: boolean
      upstream:
        items:
          type: string
        type: array
    type: object
  VpnInterfaceUpdateModel:
    properties:
      inDefaultRoute:
        type: boolean
      insideNats:
        items:
          properties:
            description:
              type: string
            localCidr:
              type: string
            networkCidr:
              type: string
          type: object
        type: array
      interfaceName:
        type: string
      outDefaultRoute:
        type: boolean
      outsideNats:
        items:
          properties:
            description:
              type: string
            localCidr:
              type: string
            networkCidr:
              type: string
            networkGroup:
              type: string
          type: object
        type: array
    type: object
  VpnNetworkUpdateModel:
    properties:
      ip:
        type: string
      name:
        type: string
      route:
        type: string
    type: object
  VpnNodeDnsModel:
    allOf:
      - $ref: '#/definitions/VpnDnsUpdateModel'
      - properties:
          networkName:
            type: string
          nodeUid:
            type: string
        type: object
  VpnNodeInterfaceModel:
    allOf:
      - $ref: '#/definitions/VpnInterfaceUpdateModel'
      - properties:
          networkName:
            type: string
          nodeUid:
            type: string
        type: object
  VpnNodeNetworkInventoryModel:
    properties:
      dns:
        $ref: '#/definitions/VpnNodeDnsModel'
      exportRoutes:
        items:
          $ref: '#/definitions/VpnNodeRouteModel'
        type: array
      importRoutes:
        items:
          $ref: '#/definitions/VpnNodeRouteModel'
        type: array
      interfaces:
        items:
          $ref: '#/definitions/VpnNodeInterfaceModel'
        type: array
      route:
        type: string
      routes:
        items:
          $ref: '#/definitions/VpnNodeRouteModel'
        type: array
      services:
        items:
          $ref: '#/definitions/VpnNodeServiceModel'
        type: array
      wireguard:
        $ref: '#/definitions/VpnNodeWireguardModel'
    type: object
  VpnNodeNetworkModel:
    allOf:
      - $ref: '#/definitions/VpnNetworkUpdateModel'
      - properties:
          networkName:
            type: string
          nodeUid:
            type: string
        type: object
  VpnNodeRouteModel:
    allOf:
      - $ref: '#/definitions/VpnRouteUpdateModel'
      - properties:
          networkName:
            type: string
          nodeUid:
            type: string
          uid:
            type: string
        type: object
  VpnNodeServiceModel:
    allOf:
      - $ref: '#/definitions/VpnServiceUpdateModel'
      - properties:
          networkName:
            type: string
          nodeUid:
            type: string
          uid:
            type: string
        type: object
  VpnNodeWireguardModel:
    allOf:
      - $ref: '#/definitions/VpnWireguardUpdateModel'
      - properties:
          networkName:
            type: string
          nodeUid:
            type: string
        type: object
  VpnRouteUpdateModel:
    properties:
      description:
        type: string
      metric:
        type: number
      networkCidr:
        type: string
      node:
        type: string
      path:
        type: string
    type: object
  VpnServiceUpdateModel:
    properties:
      ip:
        type: string
      name:
        type: string
      port:
        type: number
    type: object
  VpnWireguardUpdateModel:
    properties:
      clients:
        items:
          properties:
            defaultRouting:
              type: boolean
            insideNats:
              items:
                properties:
                  description:
                    type: string
                  localCidr:
                    type: string
                  networkCidr:
                    type: string
                type: object
              type: array
            name:
              type: string
            outsideNats:
              items:
                properties:
                  description:
                    type: string
                  localCidr:
                    type: string
                  networkCidr:
                    type: string
                  networkGroup:
                    type: string
                type: object
              type: array
            presharedKey:
              type: string
            publicKey:
              type: string
          type: object
        type: array
      enabled:
        type: boolean
      port:
        type: number
    type: object
parameters:
  clusterFQDN:
    description: Cluster FQDN
    in: path
    name: clusterFQDN
    required: true
    type: string
  nodeID:
    description: Node ID
    in: path
    name: nodeID
    required: true
    type: string
securityDefinitions:
  JWTAuthorizer:
    description: An API key, as documented https://docs.trustgrid.io/docs/user-management/api-access/
    in: header
    name: Authorization
    type: apiKey
security:
  - JWTAuthorizer: []
