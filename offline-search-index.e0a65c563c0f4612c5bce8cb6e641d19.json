[{"body":"ZTNA Applications are managed by clicking the Applications link on the left nav bar.\nTrustgrid provides several ZTNA application types that allow remote access to internal resources through a continuously validated connection.\nEach application has an Access Policy and a Visibility list. For a user to connect to a ZTNA application, they must (1) be permitted access by the application’s Access Policy and (2) be able to see the application.\nAccess to an application is authenticated through an Identity Provider (IdP).\n","categories":"","description":"","excerpt":"ZTNA Applications are managed by clicking the Applications link on the …","ref":"/docs/applications/","tags":["applications","ztna"],"title":"Applications"},{"body":" Trustgrid and our customers share the responsibilities of securing the Trustgrid network. Trustgrid assumes and automates a significant part of the overall security challenges. These challenges range from the cloud to the firmware on hardware appliances. Our customers are responsible for securing physical environments, identity and access management, and all security aspects of the environments where Trustgrid is installed.\nTrustgrid Secures the Cloud All cloud management components are secured and monitored by Trustgrid. This includes the hardware, software, and network for all cloud components including the Portal/Management API and other management tools. Customers are responsible for issuing credentials to the Portal for each authorized user and maintaining the security of those accounts.\nNetwork Security is a Shared Responsibility Trustgrid is responsible for the security of all data plane traffic from the time it enters a Trustgrid node until the time it exits a Trustgrid node. Customers are responsible for the security of all network traffic eggressing from any Trustgrid node.\nTrustgrid Teams with Customers for Edge Security All virtual or hardware appliances are secured by Trustgrid. Trustgrid’s ability to secure hardware is restricted to supported hardware appliances with specific exceptions. Customers are responsible for the security of the physical and logical environments into which Trustgrid is integrated.\nSecure Gateway Nodes Trustgrid customer’s should apply access controls to ingress traffic for gateway nodes. By restricting ingress access to edge nodes IP ranges the system security is improved and many common attacks easily avoided.\nEncrypt Traffic with Customer Certificates By default, Trustgrid encrypts all traffic on the data and control planes with privately issued certificates from our PKI. Customers may elect to provide their own certificates for data plane encryption ensuring Trustgrid maintains a zero-knowledge security posture of all data plane traffic.\n","categories":"","description":"","excerpt":" Trustgrid and our customers share the responsibilities of securing …","ref":"/getting-started/security/customer-responsibilities/","tags":["security","overview"],"title":"Customer Responsibilities"},{"body":"Cloud Components Portal - The cloud management UI. Gatekeeper - Provides configuration updates to edge nodes. Zuul - Maintains persistent connection with nodes for reporting, events, and updates. API - The management API that exposes 100% of UI elements to automation. Repo - The APT repository that stores all firmware, OS, and node updates. Edge Components Node - The software that provides core functionality in the edge including networking, security, compute, and management features. Edge nodes build outbound connections to gateway nodes. Use Cases Software Defined Networking - Create a mesh network that connects cloud applications to edge data with load balancing, clustering, and failover managed through a portal or API. Edge Compute - Deploy applications to the edge to access datasets not appropriate for replication to the cloud due to security or compliance concerns, latency, or cost. Device Management - Manage thousands of nodes with advanced tools to reduce the burden of operations at enterprise scale. Edge API - Integrate thousands of edge datasets with a single API interface and ETL functions executing at the edge. Security - Leverage Trustgrid’s advanced security to protect against a wide range of threats. ","categories":["overview"],"description":"Trustgrid basic architecture overview\n","excerpt":"Trustgrid basic architecture overview\n","ref":"/getting-started/basic-architecture/","tags":["architecture"],"title":"Basic Architecture"},{"body":" Node audits provide records when services on a node are invoked, or when upgrades are applied. This can be helpful to see historical maintenance of a node.\nNode audits can be viewed for a specific node by navigating to Audits under the History section on the node view.\nUsers will need audits::read:node permissions to view node audits.\nNode audits can also be found for the entire organization by navigating to Operations-\u003eNode Audits.\n","categories":"","description":"","excerpt":" Node audits provide records when services on a node are invoked, or …","ref":"/docs/nodes/audits/","tags":["node"],"title":"Audits"},{"body":"By default, Trustgrid support has access to all nodes via the Control Plane, subject to Trustgrid policies and procedures. Trustgrid customers may opt to disallow Trustgrid support access to their nodes. Disabling support access does not interfere with automated management features such as patching, updating, logging, or authentication.\nChanges to the support flag are audited.\n","categories":"","description":"","excerpt":"By default, Trustgrid support has access to all nodes via the Control …","ref":"/getting-started/security/trustgrid-node-access/","tags":"","title":"Trustgrid's Access to Nodes"},{"body":" Trustgrid’s Alarms system notifies users of events both within our portal and via notification integrations such as email, PagerDuty, OpsGenie, Slack, and Teams.\nChanges in status (such as a node disconnecting or reconnecting) create events within the Trustgrid portal.\nThese events are evaluated against alarm filters, which define criteria to match events, like the node name or event severity.\nIf an event matches the criteria of an alarm filter, then an alert is generated and notifications are broadcast to the configured channels.\n","categories":"","description":"","excerpt":" Trustgrid’s Alarms system notifies users of events both within our …","ref":"/docs/alarms/","tags":["alarms"],"title":"Alarms"},{"body":"Data Plane Status Panel The previous release added a pop-up table that displayed statistics about a node’s connections to other node such as gateways. We’ve now moved most of this information to a new panel dedicated for this purpose.\nHovering over the Data Plane status indicator next to the node name still includes basic details about the number of gateways known and connected. And it includes a link to the new panel for more detail:\nClicking that link or just selecting the Data Plane panel from the left navigation bar will bring you to a new page showing much of the same detail as the previous pop-up table.\nData Plane Historical Stats You can now load historical latency data about a connection between this node and a connected gateway. Simply select the gateway from the table by clicking it, choose a start and end time and click Load.\nPortal Tool Improvements Tool Setting History A common pain point when using the tools within the Trustgrid Portal was that if you had to rerun a tool you had to reenter the values into the prompt. With this release Trustgrid is introducing an execution history that will make rerunning a tool much simpler for users.\nAs an example, if I run the Interface TCP Port Test tool for the first time, the target IP and port will be the defaults 192.168.1.1 and port 80\nIf I change these to a new IP and port and run (e.g. 172.16.22.199 and port 22) and run the tool. The next time I run the tool these settings will be populated automatically.\nAdditionally, I can click the History tab on the right to see the last few execution settings. I simply need to click apply to rerun one of the configurations listed.\nMTR Tool MTR (or my trace route) is an alternative to the traditional traceroute tool that expands on the data gathered and reported in a number of ways. It can be run interactively to run continuously until stopped, gather additional statistics, report multiple paths more clearly and more. While this tool has been available from within the Terminal for some time, Trustgrid has now made this accessible directly from the portal user interface.\nTo use this new feature, the node must be running the latest Trustgrid package version (1.5.20220215-1159) or newer\nTo run the tool, navigate to the Network → Interfaces section of a node and select the desired interface. Then click the MTR button.\nThe default settings are to target the local loopback interface IP (127.0.0.1) and run 10 times (-c 10).\nChange the target to the desired IP or host name and update the options. Some useful options include:\n-T to use TCP instead of ICMP and can be combined with -P XXXX to target a specific known listening port. This can be useful when targeting a Trustgrid gateway from and edge node. (e.g. -T -P 8443)\n-w runs MTR in wide screen reporting mode. You will not see output on the screen until the -c count has completed but the output will persist, unlike when run interactively where it is cleared from the screen at completion.\nSee the mtr man page for additional options.\nInterface Flows Tool Under the Network → Interface section you will see a new “Flows” tool listed\nTo use this new feature, the node must be running the latest Trustgrid package version (1.5.20220215-1159) or newer\nThis tool provides information about flows traversing an interface, similar to who the VPN “View Virtual Translations Table” tool shows flows traversing the VPN.\nLaunching the tool you have a number of options to filter the results. Or you can run without filters to return all flows.\nThe resulting table lists the flow found on the interface. This can be sorted by column.\nAdditionally, any active flow can be Terminated (disconnected) from within the tool. You will be prompted to confirm.\nNetwork Interface Improvements Interface Speed and Duplex The Trustgrid portal now displays the negotiated speed and duplex values:\nAnd it now allows you to change from the default Auto negotiation setting to a manual setting. This is frequently necessary when the connected port is hard set to a speed and duplex value, which breaks auto negotiation.\nAlert Improvements Alert Suppression Window Events An Alert Suppression Window prevents the Trustgrid system from sending notification to alarm channels for a scheduled period of time. This is useful for preventing noisy alerts during planned maintenance. Historically, correlating events to this time period required remembering when the maintenance occurred.\nAfter the suppression window is closed, either by cancelling or allowing it to expire, two events are created. One for the scheduled start:\nAnd another for the actual end time:\nThese events are viewable at both the node and organization level to make it easy to correlate events to the maintenance window.\nOverride Domain Level Threshold Alerts Threshold alerts, such as CPU % or latency, can be configured to apply to all nodes within a domain. But sometimes it is necessary for a specific node to have different thresholds defined. With this release, the domain thresholds can be overridden.\nIf you navigate to the Alerts panel of a node, you will see a section at the bottom titled Global Alerts. It will list all threshold alerts defined at the higher, domain level. Click the Override button to set a node specific value.\nDefine a new threshold value or duration\nAfter you click Save, the value will have a yellow square to indicate it is an override.\nThreshold Alerts Included Data Points Previously it wasn’t always clear why a threshold alert, such as an alarm regarding latency, exceeded the configured threshold. Even if you connected immediate to the device and checked the latency might have returned to normal.\nNow the JSON payload sent to alarm channels (email, Slack, PagerDuty, etc.) can include the data points used to calculate the average that exceeded the threshold. This is in a new section called details and the values are in pairs of the timestamp t (unix time) and value v (in milliseconds in the example below).\nAlert Payload ... \"details\":\t{ \"values\":\t[ {\"t\":1645664460,\"v\":1310}, {\"t\":1645664520,\"v\":1310}, {\"t\":1645664580,\"v\":31}, {\"t\":1645664640,\"v\":31}, {\"t\":1645664700,\"v\":890} ], } ... ","categories":"","description":"","excerpt":"Data Plane Status Panel The previous release added a pop-up table that …","ref":"/release-notes/cloud/archive/2022/february/","tags":"","title":"February"},{"body":" A cluster is a pair of nodes that share configuration and an active/standby relationship, providing automated high-availability (HA) connectivity.\nA cluster is a pair of nodes at a single site that share some configurations and provide automatic failover. An additional IP address is assigned as a Cluster Virtual IP address that can move between the nodes if failover occurs.\nCertain settings such as network services and VPN settings can be configured for the cluster and these settings will override the individual node’s configuration.\nFormerly the active member was referred to as the “master.” We are in the process moving to the terms active and standby. This documentation will use those terms but elements in the UI may retain the master term. Requirements Nodes in the cluster must be using the same model of appliances Nodes must be able to create direct TCP connections with each other Nodes should be at the same site or have high-bandwidth, high-reliability, low-latency connections between the devices Active Member Determination The active member of a cluster is determined by the following factors:\nCluster heartbeat communication Cluster mode Configured master Cluster member health Cluster Heartbeat Communication Cluster members utilize a direct TCP connection to each other to determine if their partner is online and share their health status. Each node will listen on a configured heartbeat IP and port, while at the same time connecting to their partner’s configured heartbeat IP and port.\nLocal ACLs allow only the partner cluster member to connect to the listening port. Heartbeat communication is configured on each node’s cluster page.\nCluster Mode A cluster can be configured in two different modes to determine what happens when a failed member returns to healthy status:\nAutomatic Failback (Default) - In this mode the member set as the Configured Master (see below) will maintain the active/master role as long as it is online and healthy. Manual Failback - In this mode, the active/master role only moves if either the current holder fails or the configured master is changed Consider a cluster with members named Node1, the configured master, and Node2.\nEvent Automatic Failback - Active Member Manual Failback - Active Member Initial State Node1 Node1 Node1 unhealthy/offline Node2 Node2 Node1 returns to healthy/online Node1 Node2 Configured Master Each cluster will have one configured or preferred active member. This is reflected in the overview section.\nA node may be designated as the preferred active member by selecting the node and clicking the “Set as Master” action\nThe Configured Master field will change immediately, but the Current Master may take a minute to reflect the change as the nodes process the change and notify the control plane.\nCluster Member Health There may be situations where both cluster members are online and can communicate with each other, but external conditions exist that make a node unsuitable to hold the active role. The Trustgrid node service monitors for such conditions and will make a node as unhealthy if one occurs. The node will release the active role and its standby member will take over if it is online and healthy.\nWhen the condition clears the node will declare itself healthy and inform its partner member. Depending on the cluster mode it may reclaim the active role.\nCluster Member Health Conditions Loss of cluster heartbeat communication - If a node cannot communicate with its partner nodes on the configured IP and port it will declare that partner node unhealthy and claim the active role if it has not already.\nInterface Link (Up/Down) State - Any interface configured with an IP address in the Trustgrid is monitored for a successful connection to another network device\nExample: In a two-interface setup it would be possible for the LAN interface to become unplugged but the node to remain online from the cloud and data plane perspective. However, the lack of LAN connectivity would prevent the node from delivering any Trustgrid services to that network Note: If only a single node has an interface configured, such as an alternate MPLS path, Trustgrid support can configure it to be ignored for triggering. Upstream Internet Issues - If a Trustgrid node is unable to build connections to both the Trustgrid control plane AND data plane connections to its gateways the node will be marked as unhealthy. This does require all the connections to be failing before it is triggered\nExample: If an upstream internet provider or device experiences failure the node will not be able to provide any services. WAN Interface DHCP failure - If the WAN interface is configured to use DHCP and it does not receive a DHCP lease it will mark itself unhealthy.\nLayer 4 (L4 Proxy) Service Health Check - TCP L4 Proxy Services can be configured to regularly perform health checks to confirm a successful connection can be made. If these checks fail 5 times in a row the service will mark the cluster member as unhealthy.\nExample: If each cluster member’s LAN interface is connected to a different switch and one switch fails that member will be unable to connect to any IP:ports dependent on that path.\nUse caution before configuring multiple services with health checks. This could create a situation where both nodes declare themselves unhealthy because a single service is failing if the server providing the service goes offline. Cluster Member Shared Configuration Cluster members can share the configuration for the following services:\nNetworking Interfaces Interface routes Cluster VIP (supported in on-premise, traditional network environment) AWS/Azure/GCP route table entries VPN Tunnels VRFs ZTNA gateway endpoints Layer 4 services and connectors Compute Container and command definitions Resource limits Tags Tags are visible at the bottom of the overview page for the resource.\nModifying Tags To add a tag:\nClick Add Tag.\nA new row will appear at the bottom of the tags table. There will be a list of existing tag names for your organization. You can filter the list by typing in the field. You can either select an existing tag name, or create a new one by typing it out in full and then selecting New selection: tagName.\nNext move to the values field. As with the name, existing values will be listed. To enter a new value type it in completely.\nClick Save\nTag rows can be edited in-place. Change the name or value, then click Save.\nTo remove a tag, click the red X next to the tag name, then click Save.\nApplying a Tag Filter to the Clusters Table The clusters table can also be filtered to only show clusters with a specific tag name:value.\nOn the clusters table click Actions and select Add Tag Filter from the drop-down menu. After clicking Add Tag Filter, select the tag-name field and you will see a list of tag-names available. Select the desired tag. You can also start typing to filter what tag names are shown.\nSelect the tag value field and you will see a list of available values. Select the desired value.\n(Optional) Click Add Tag Filter to include an additional filter. Note that the two filters will be applied using AND only clusters with both tag name:value combinations matching will be shown.\nClick Apply Tag Filter and the table will only show matching clusters.\n","categories":"","description":"","excerpt":" A cluster is a pair of nodes that share configuration and an …","ref":"/docs/clusters/","tags":["cluster"],"title":"Clusters"},{"body":" Trustgrid allows importing of self-managed certificates that can encrypt traffic for both the Trustgrid mesh network (via the Gateway) and ZTNA applications.\nAdding a Certificate Field Name Description Certificate body The certificate body, in PEM format. Certificate chain The certificate authority’s chain, in PEM format. Private key The certificate’s private key, in PEM format. Once uploaded, the sensitive certificate details will not be available via the API, but the parsed information from the certificate, such as FQDN, the expiry date, and any warnings about the certificate, will be available in the table.\n","categories":"","description":"","excerpt":" Trustgrid allows importing of self-managed certificates that can …","ref":"/docs/certificates/","tags":"","title":"Certificates"},{"body":" Cluster configuration is only available for nodes that are members of a cluster. Heartbeat The cluster heartbeat defines a persistent connection between cluster members. The heartbeat is used to determine the health of the cluster and to determine which member is the active member. This configuration is required on cluster members.\nField Name Description Heartbeat Host The IP (bound to an interface) on which heartbeat communication will occur Heartbeat Port The port on which heartbeat communication will occur The same interface should be selected for all cluster members Status Endpoint (Optional) The Status Endpoint allows you to start an HTTP REST endpoint on a port on the WAN interface IP that will return a 200 response if the member is healthy and the active cluster member. This is commonly needed if a load balancer is being placed in front a cluster to provide high-availability for ZTNA or Wireguard gateway traffic.\nField Name Description Endpoint IP Hard set to the WAN interface IP address Endpoint Port Defines the port that the HTTP server will listen on.\nIf blank the HTTP server will be disabled.\n","categories":"","description":"","excerpt":" Cluster configuration is only available for nodes that are members of …","ref":"/docs/nodes/cluster/","tags":"","title":"Cluster"},{"body":" Connectors are configured in conjunction with services to define a local listening port for layer 4 (L4) connectivity.\nConfiguration Connectors are configured under the Networking \u003e Connectors tab of the node or cluster configuration section in the Trustgrid Portal.\nAdd Connector dialogue Field Name Description Protocol The protocol that the listener for the connector will use. Options are TCP, UDP, FTP, and TFTP.\nFTP must operate in passive mode when using L4 services and connectors.\nListen Interface The interface that you want the connector to listen on. If set to “All”, the connector will listen on 0.0.0.0. Listen Port The port that you want the connector to listen on. Remote Node The remote node or cluster that traffic will be proxied to. Remote Service Either the friendly name of service that is defined on the remote node, or the IP:Port of the remote service to connect to. Rate Limit (Mb/s) The maximum amount of throughput that will be allowed to traverse the tunnel when connecting to the connector. This can be used to prevent saturating the connection at either the local or remote sites. Sniff Traffic Listed only on the Connectors table, this will automatically launch a Sniff Traffic tool for the listening port.\n","categories":["node"],"description":"","excerpt":" Connectors are configured in conjunction with services to define a …","ref":"/docs/nodes/connectors/","tags":["layer 4","networking"],"title":"Connectors"},{"body":"Trustgrid nodes support running Docker containers which allows for ease of deployment across an organization. Any Docker container is supported with the exception of containers that require root level access.\nThe container can be attached to both the local and virtual network space which allows both local and remote resources to communicate with the container. For example an API could be deployed on a Trustgrid Gateway which sends API Calls via the virtual network space to a container running on a Trustgrid Edge Node. The API call could then be translated to make a call to a database running on the local network and passed back up to the gateway host.\nBefore adding a container to a node, push an image to your repository.\nReading and managing containers requires node-exec::read and node-exec::modify permissions, respectively. Executing a container requires node-exec::compute permission.\nManagement Navigate to Container Management under Compute on a node or cluster.\nHere you can add, enable, disable, delete, and import a container.\nField Name Description Name The name of the container. Execution Type A container can be deployed as one of three types.\nService - the container is created and will run as a daemon. If the node reboots, the container will start up automatically.\nRecurring - the container will run on a defined schedule. A schedule parameter is defined for the frequency, either as a rate or a cron expression.\nRate Description rate(30 minutes) Run every 30 minutes rate(1 hour) Run every hour rate(1 day) Run every day On Demand - typically used for testing. The container is executed for a single session, but will not restart on its own.\nStatus Only enabled containers will run. Image Name The name of the image to execute. Image Tag The image tag to execute. Overview Navigating into a container, the overview section allows editing basic information about the container’s execution environment.\nIn addition to the fields above, you can modify:\nField Name Description Command The command to execute inside the container. Hostname The hostname set inside the container. Stop Time The grace period (in seconds) to allow a container to stop before killing it. Defaults to 30 seconds. User Sets the username or group or uid or gid in the container. Save Output Persist standard output/standard error. Privileged Grant the container extended privileges. Use Init Use an init process inside the container as PID 1. This ensures responsibilities of an init system are performed inside the container (e.g., handling exit signals). Require Connectivity Ensures that the container will not start if it has encrypted volumes and is unable to reach the control plane. Environment Variables Environment variables can be added to a container to provide configuration information to the container at runtime.\nNetwork The networking section allows you to configure the container’s VRF, its port mappings, and its virtual networks and interfaces.\nHost Port Mappings Host port mappings allow you to expose a port on the host to the container. This is useful for exposing a service running in the container to the local network.\nField Name Description Protocol The protocol to listen for. If not specified, all traffic is forwarded to the container. Host Interface The host interface to listen on. Host Port The host port to listen on. Container Port The container port that will receive the mapped traffic. Virtual Networks Attaching a virtual network to a container allows virtual network traffic to reach it.\nField Name Description Virtual Network The virtual network to attach. Virtual IP The virtual IP to assign to the container. Allow Outbound Whether the container should be allowed to make outbound connections into the virtual network. Virtual Interfaces A virtual interface can be mapped to a container to forward all traffic.\nField Name Description Name The virtual interface name. Destination The interface destination inside the container. Mounts Mounts allow a container to persist data either as an externally defined volume, or a bind mount of the node’s filesystem.\nField Name Description Type Either BIND or VOLUME. For type VOLUME, the mount must reference an existing volume. Source For volumes, the name of the volume. For bind mounts, the path on the node’s filesystem. Destination The mount location inside the container. Resource Limits Containers can be restricted to limit the amount of resources they can consume from the host.\nField Name Description CPU Max % Maximum CPU allocation. Default is 50%. Memory Max (MB) Hard limit for RAM allocation. Default is 50% of the host’s memory. Memory High (MB) Soft limit for RAM allocation. Cannot exceed hard limit. Default is 45% of the host’s memory. IO Max Read (B/s) Max allowed bytes per second of IO reads. Disabled by default. IO Max Write (B/s) Max allowed bytes per second of IO writes. Disabled by default. IO Max Read Operations (ops/s) Max allowed IO read operations per second. Disabled by default. IO Max Write Operations (ops/s) Max allowed IO write operations per second. Disabled by default. Linux ulimits can be set for each container. Supported ulimits are:\nCORE DATA FSIZE LOCKS MEMLOCK MSGQUE NICE NOFILE NPROC RSS RTPRIO RTTIME SIGPENDING STACK Health Check A health check can be configured to monitor the container’s health. If the health check fails, the container will be restarted.\nField Name Description Command The command to run. A non-zero return code indicates a health check failure. Interval The frequency (in seconds) to run the health check. Timeout How long (in seconds) to wait for the health check to complete. A timeout is considered a failure. Start Period Grace period (in seconds) during container startup before health checks should start. Retries Number of allowed health check failures before marking the container unhealthy. Linux Capabilities Linux capabilities can be added to or removed from a container, allowing fine-grained control over kernel-level features and device access.\nLogging Configuration Log files (when persisting container output) are rotated based on a size threshold.\nField Name Description Max File Size (MB) The maximum size (in MB) of a log file before it is rotated. Max Files The maximum number of log files to keep. ","categories":"","description":"","excerpt":"Trustgrid nodes support running Docker containers which allows for …","ref":"/docs/nodes/containers/","tags":"","title":"Containers"},{"body":"Improved Identity Provider Integration Trustgrid has supported SAML integration to manage portal access for some time. As we began supporting additional services, such as Remote Access applications, more flexibility was needed.\nOpenID Support OpenID is a newer standard for managing communication between an application and an Identity Provider (IdP). It offers additional functionality compared to SAML including the ability to simplify integration.\nAt this point, Trustgrid supports simplified integration with Google G Suite and Microsoft AzureAD which includes the ability to synchronize groups and group members. Trustgrid will expand this functionality to other IdPs in the future but for now, other OpenID compatible IdPs can be integrated using a more generic OpenID setup process.\nSAML Self-Service Trustgrid will continue to support SAML integration. Previously the setup process required the Trustgrid Support Team to complete the configuration, but now this is available to Administrators.\nAdd Users Instead of Inviting Them Previously, adding new users to the Trustgrid portal was a bit clunky when using the SAML integration. To add a user you would:\nInvite the user. This would generate an email which the user didn’t really need.\nThe user would then need to successfully authenticate via the configured IdP.\nYou could then adjust the user’s role to reflect the appropriate permissions.\nNow, when an IdP is configured there is a simplified process:\nFrom the User Management panel click “Add User”\nFrom a single prompt, you can enter the user’s email address (matching what is configured in the Identify Provider), set their Role, and select the correct Identity Provider (if there is more than one).\nThe option to Invite Users is still available under Actions if you need to create users in the Trustgrid native IdP.\nDomain Improvements In addition to the changes outlined below, it is worth noting that Domains have been moved under the Management section of the navigation bar.\nReview Changes Trustgrid Domains encompass configuration settings that impact many nodes and clusters, such as Virtual Network Routes. The impacts of changes here can have a wide effect and it is not uncommon for multiple members of a team to be working in this context at the same time without knowing it.\nTo address this Trustgrid has updated the user interface to reduce the risk of improper or conflicting changes. After a change is made within a domain it is not immediately applied.\nInstead, a warning icon will be added to the Review Changes panel. Navigating to this panel will display all changes that are waiting to be applied.\nThe changes will include the user making the change. If more than one user has made changes they can confirm with that user if they are ready for that change to go into effect.\nOptionally, if they determine one of the changes should not be applied it can be removed by clicking the red X. Be aware that if this is done the change would have to be recreated and reviewed to add later.\nOnce the user has confirmed the changes look correct they can click Apply Changes. You will be prompted to confirm and then the changes will be pushed out to nodes in the domain.\nImproved Virtual Network Routes Table The Virtual Network Routes table has been significantly reworked in this release.\nThe biggest improvement is in the Destination selection method. The old interface required selecting from a long list of all nodes and clusters in the domains which became unmanageable as the number of these increased. Additionally, there was no distinguishing between nodes and clusters beyond the name.\nNow when the Destination field is selected you are given a list (typeahead filtered) that now has a prefix of Cluster or Node to clearly identify the destination type.\nAdditionally, the Save and Add Routes buttons have been moved to the top of the table to reduce the need to scroll down as you work.\nNo-NAT Virtual Networks Making Network Address Translation (NAT) easier to manage and scale has been a primary use case for Trustgrid. However, there are some situations where altering the IP addresses is unnecessary and even undesirable.\nTo address this we have added the ability to create a Virtual Network that will perform no address translation by default. This should greatly increase the ease of configuring such networks.\nWhen adding a new Virtual Network set the “No NAT Mode” to Yes. For a Network CIDR just enter 0.0.0.0/0, this field will be made optional in a later release.\nAfter creation, you will see that NO-NAT Mode is enabled in the table.\nWhenever this network is attached to a Node or Cluster interface you will see a notice like the below.\nVPN Improvements The VPN interface in the portal has been reworked in ways we hope will simplify the experience when configuring and managing.\nFeature Navigation Panels The legacy VPN page frequently required significant scrolling to get to the most relevant section. The new interface breaks these sections into multiple panels.\nSince Address Translation is the most commonly used section it is automatically selected when you navigate into the VPN context.\nImproved Multiple Virtual Network Support Trustgrid has supported Nodes and Clusters being attached to multiple Virtual Networks but the user experience interacting with them was cumbersome. For example, in a number of places, you had to select from a list of all the available virtual networks, even if they weren’t attached. This experience has been greatly improved.\nVPN Virtual Networks Table If the Node or Cluster is already attached to a single Virtual Network this will be selected automatically when you select the VPN navigation link. However, if you have multiple networks you will be presented with a table of only the attached Virtual Networks.\nThe Actions dropdown of this table will enable you to Attach additional Virtual Networks or Detach the current Virtual Networks.\nOverview Virtual Network Graph Previously the Overview Virtual Network graph listed all Virtual Networks within a domain. Now it will only show attached networks.\nVPN Toolbar Once you have navigated to the VPN context of a node and selected a Virtual Network you will see a bar like the below at the top of the page. The bar provides important data about the Virtual Network including the node’s Virtual Management IP (and the ability to edit it).\nClicking the Tools button on the right of the bar brings up a menu of both Virtual Network and Interface tools. Users no longer have to switch between tabs to access these different toolsets.\nNew Virtual Translation Table Interface The View Virtual Translation Table shows active NATs similar to a show connections command from legacy solutions. Previously running this tool produced raw console output that could be challenging to work with when there were large numbers of active connections.\nThe new version of the tools creates a paginated table that is easily searchable and can be refreshed without needing to return to the Tools section.\nProxyARP Option for Outside NATs Previously the Trustgrid node would ARP on the local network for any IP contained in the Local CIDR of an outside NAT. For example, if your Outside NAT Local CIDR was for 192.168.1.0/24, the node would respond to ARP requests for any IP in that network (192.168.1.1 - .254).\nThis is still the default behavior, but there is now an option to disable this functionality when configuring Outside NATs.\n","categories":"","description":"","excerpt":"Improved Identity Provider Integration Trustgrid has supported SAML …","ref":"/release-notes/cloud/archive/2021/march/","tags":"","title":"March"},{"body":"Data Plane Panel Improvements In the February 2022 release we introduced the Data Plane status panel for investigating connections between edge and gateway nodes. With this release we’ve added some tools to this panel. The new Ping and Test Performance tools are linked in the far right column of each gateway’s row.\nGateway Ping The gateway ping tool will launch a ping inside the data plane tunnel between the node and the gateway, similar to ICMP ping. This can provide a more realtime view of latency between node and gateway compared to the RTT column (only loaded on refresh) and the historical data which provides a minute by minute view.\nGateway Performance Tool The gateway performance tool attempts to estimate the available upload bandwidth between a node and gateway.\nBy default this tool will attempt to send 10MB of data to the destination device. This then used to calculate the available bandwidth. Sending more data provides a more accurate estimate but be aware that other devices using the same internet circuit may experience degraded performance while the test is running.\nThe periods are posted for about every 1MB of data sent. If you see exclamation marks this can indicate lost packets.\nTool Improvements MTR Improvements MTR, which was recently added to the portal, can be powerful troubleshooting tool, but it has many options which can be tricky for newer users. To simplify the use we’ve added a new user interface that provides graphical options for selecting common parameters.\nAWS Instances Metadata When the Trustgrid software is deployed in AWS we can gather additional metadata about the underlying instance. With this release we have added the availability zone, instances type and instance ID to the Info panel available on every node.\nTimestamps for Virtual Network Changes Before changes are committed to a virtual network setting, such as the virtual network route table, they are listed in the Changes panel for approval. This made it easier to see if other users had outstanding changes that might be in conflict. However, it wasn’t clear if the other user just made that change or if it had been left accidentally. With this release we’ve added a timestamp that shows when the user saved the change.\n","categories":"","description":"","excerpt":"Data Plane Panel Improvements In the February 2022 release we …","ref":"/release-notes/cloud/archive/2022/march/","tags":"","title":"March"},{"body":" A domain is the logical grouping of nodes inside an organization.\nDomains are a logical grouping of nodes, allowing configuration of virtual networks and node thresholds. Each Trustgrid deployment has a single domain.\n","categories":["concepts"],"description":"","excerpt":" A domain is the logical grouping of nodes inside an organization. …","ref":"/docs/domain/","tags":["domain","concepts","rewrite"],"title":"Domain"},{"body":" Data plane statistics between a node and its peers can help troubleshoot connectivity or performance issues.\nTo view latency data between two nodes, select either the edge or gateway node, and then from the peers table, select the node to view.\nGateway nodes will list edge nodes in their peers table Once a peer is selected, the monitoring section will populate with reelvant data.\nHop data is only available for nodes that have hop monitoring enabled. See Monitoring Network Hops to Peers.\n","categories":"","description":"","excerpt":" Data plane statistics between a node and its peers can help …","ref":"/docs/nodes/data-plane/","tags":["node"],"title":"Data Plane"},{"body":" The data store allows artifacts (i.e. container volumes, virtual machine images) to be synced from/to a node. The data store view is located under Compute \u003e Data Store.\nFile Explorer Allows a user to navigate, sync, create directories, delete artifacts from the data store.\n- Takes you to the Root of the directory hierarchy. - Takes you up one directory from your current location in the directory hierarchy. - Refreshes the directory hierarchy to get the latest state of the data store. - Create a new sub directory. See Directory Creation for more information - Transfer a file to the data store. See File Sync for more information - Upload a file from the data store. See File Sync for more information - Delete a file from the data store. Recent Tasks Allows a user to view the status of any long running tasks (i.e. Transfer file from Amazon S3, Upload file to HTTP endpoint, etc). Any task that is executing can be cancelled. Completed tasks can be cleared manually or they will be automatically removed 6 hours after completion time.\n","categories":["node"],"description":"","excerpt":" The data store allows artifacts (i.e. container volumes, virtual …","ref":"/docs/nodes/datastore/","tags":["data store","containers","s3","virtual machines"],"title":"Data Store"},{"body":" Trustgrid and customers can share documents securely in the Documents section.\nAdding or deleting documents requires documents::modify permissions. Downloading and viewing documents requires documents::read permissions. (show how to add and delete and download a document).\n","categories":"","description":"","excerpt":" Trustgrid and customers can share documents securely in the Documents …","ref":"/docs/support/documents/","tags":"","title":"Documents"},{"body":"Trustgrid Permissions Restructuring Trustgrid’s portal and API have used Role based permissions to manage access within the Trustgrid system. As Trustgrid has expanded our feature set, adding features like containers, and our user base have grown the predefined role structure has become a poor fit. Many times these new features required Trustgrid Support to grant access to users. Additionally, what each role could and could not do was opaque to customers.\nWith this release will be migrating to a policy-based approach that will allow customers to independently tailor permissions to meet their own use cases. Customers will also be able to see exactly what rights policies allow and what policy is granting a user access directly in the portal.\nThis migration will also allow future enhancements such as automatic policy assignment based on group membership, resource based policies limiting users to specific nodes/clusters, and more.\nHow it Works The new policy permission works as such:\nUsers can be attached to one or more policy Policies are defined that either allow or explicitly deny permissions or actions Permission are grouped according to the related feature/objects set Read allows a user to view that group of related objects Modify will allow users to add, change or delete those objects Additional actions such as running tools on a node can be allowed/denied A denied permission will override any allowed permission in another policy Migration of Role Permissions to Policies Trustgrid previously had 4 predefined roles. With this release these will be migrated into 5 new builtin policies, and an additional policy will be created. As part of this migration Trustgrid is also making sure these policies only include the “least-privileges” required to perform the intent of each of the previously defined roles.\nDuring the release process users previously assigned a role will be automatically assigned the corresponding policy or policies listed below\nBelow is a list of our historic roles and the policies that replace them plus any known changes. If users previously assigned a role lose a tool or function they need, they can either be attached to a higher level builtin policy with the appropriate permissions or a custom policy can be created and attached.\nMonitor (now tg-builtin-monitor policy) Changes:\nMonitor no longer has access to troubleshooting tools. These were removed because some of these seemed to exceed the privileges required for the user types expected to have this role. Operator (now tg-builtin-operator policy) No changes.\nNode-Administrator (now tg-builtin-node-admin policy) No changes.\nAdministrator (now tg-builtin-admin and tg-builtin-access-admin policy) The administrator role previously included both the ability to make almost all technical changes and the ability to control access and permission to the portal.\nTrustgrid determined that these functions are separate and many companies may want to further restrict the access administration to a subset of users. The functions have been split into two policies:\nbuiltin-tg-admin - Full access to make technical changes builtin-tg-access-admin - Ability to add or invite users, change and attach policies, and configure Identity Providers However, Trustgrid cannot determine who within an organization should and should not have each of these functions so during this migration any user that was previously assigned the Administrator role will be attached to both policies.\nIt is highly recommended customers review which users are attached to the builtin-tg-access-admin policy and remove from those that do not require it.\nProvisioning Order Improvements Contacts and Stakeholders Orders historically only had fields for a general order contact and a technical contact. With this release additional stakeholders can be listed (such as a project manager associated with the project or other executive contacts).\nThe goal is to eventually provide a method to send status updates to all contacts in a more automated fashion as order progress.\nAdd Provisioning Contacts for your Organization If you have stakeholders that will frequently be used on orders, you can add them as Contacts.\nThese will then be available to select in the stakeholders section of an order and will auto-polulate the fields\nActivity Report The new Activity Report will list all orders that transitioned to the selected Status during the selected Time Range and the results can be exported as a CSV. This can be useful for tracking progress of provisioning projects over time.\nRack Mount Field Added Some Trustgrid hardware has the option of including rack mounts. Previously this was documented in notes, but with this release a field has been added. If an appliance type does not have a rack mount option this will show as “unavailable”\nAccess to the Provisioning section of the portal is not a part of a builtin policy at this time. Access admins should create policies to grant users orders permissions and attach to the appropriate users.\n","categories":"","description":"","excerpt":"Trustgrid Permissions Restructuring Trustgrid’s portal and API have …","ref":"/release-notes/cloud/archive/2022/may/","tags":"","title":"May"},{"body":" This page will show the most recent 1000 flow logs for the specific node being viewed.\nSee this page for more info on Flow Logs\n","categories":"","description":"","excerpt":" This page will show the most recent 1000 flow logs for the specific …","ref":"/docs/nodes/flow-logs/","tags":"","title":"Node Flow Logs"},{"body":"Faster Node Overview Graphs With this release we have reduced the time it takes for the initial Overview graphs to load when you first navigate to the node.\nNew Time Range Selector Previously the Trustgrid portal used a few different time range selectors on different pages, none of which were the most user friendly. Trustgrid is standardizing on a new selector shown below which some key new abilities:\nChange from Local (browser) time zone to UTC Switch from an Absolute (e.g June 1 at 10am to Jun 1 at 11am) to a Relative time (last X hours) The new selector is in use at:\nFlow Logs - Advanced Search Data Plane - Gateway monitoring statistics Data Plane Panel Improvements Data Plane Monitor Graph Previously the statistics for latency (visible after clicking on the name of a connected gateway) were shown in three separate graphs: min, max, and mean. This sometimes made it hard to compare as they had different scales. Now these data points are visible on a single graph. They can also be deselected with the graph scale adjusting automatically.\nSort Peers by Connected Status Previously the connected status column didn’t allow you to sort. If you had a lot of connected peers and wanted to focus on disconnected ones it was a challenge. Now you can sort by clicking on the column header.\nNode Location Tab There is a new Location panel under History on the node detail page. This page allows you to:\nSpecify the Latitude and Longitude of used to display the location of the node on the network map. You can utilize a map such as Google Maps to determine these coordinates Specify the City, State, Country and Zip where the node is deployed. Currently this is for informational purposes only and does not update the Lat/Long coordinates. Flow Log Improvements In addition to the new time range selector, we have also improved how advanced searches return results. Previously, if your search included a long time range or was run on a node with a lot of flows the system could return partial results. Now we’ve added a “Load More” button and additional results will be returned.\nAccess Policy Improvements We’ve added several improvements to the Access Policy table for a virtual network.\nYou can now select and bulk delete rules New special destination object options: private - all IP v4 blocks defined as private by RFC 1918 public - public will cover all other IP v4 addresses ","categories":"","description":"","excerpt":"Faster Node Overview Graphs With this release we have reduced the time …","ref":"/release-notes/cloud/archive/2022/june/","tags":"","title":"June"},{"body":" Gateway nodes accept TLS tunnel connections from other nodes in the domain. They are responsible for routing traffic between nodes.\nGateways are only configurable at the node level. Configuring a gateway requires nodes::configure:gateway permissions.\nGateway Types A gateway can be one of three types:\npublic - allows all connections from edge nodes in the domain private - allows only allow-listed clients to connect hub - allows connections from edge nodes and other gateway nodes A public gateway should be secured with a firewall to prevent unauthorized access.\nConfiguration Navigate to a node and select Gateway under the System section.\nServer Settings Gateway Server settings Field Name Description Status Either Enabled or Disabled - when enabled, the node will listen and accept connections from other nodes. UDP Enabled Whether to allow UDP tunnels to be established through this gateway. Public IP or DNS The public IP or DNS name of the gateway. This is the address that other nodes will use to connect to this gateway. Port The port that the gateway will listen on. This is the port that other nodes will use to connect to this gateway. UDP Port The port that the gateway will listen on for UDP tunnels. This is the port that other nodes will use to connect to this gateway. Max Ingress Mbps The ingress bandwidth limit for the gateway. Connections will be throttled when this limit is reached. Certificate When using DNS for gateway connections, you may specify an uploaded [certificate]({{ ref “/docs/certificate” }}) to use for TLS connections. Gateway Type The type of gateway. See Gateway Types for more information. Monitor Network Hops to Peers Whether to monitor latency to peers through this gateway. This can have a performance impact and is not recommended for high-traffic gateways. Gateway Clients Private gateways only allow connectivity from listed and enabled clients. To add a client, use the typeahead textbox at the bottom of the clients table and select the desired node. Field Name Description Client Name of a node that should connect to this private gateway Enabled Values are Enabled (default) or Disabled. If set to Enabled the client node will attempt to connect. Client Settings Settings in this section define how the node connects to gateway servers as a client\nGateway client settings Field Name Description Max Egress Mbps The egress bandwidth limit for the gateway. Connections will be throttled when this limit is reached. Gateway Paths Allows you to define alternate paths to a gateway server\nField Name Description Name A name for the path. Gateway Node Gateway for which the path is applicable. Host IP Destination IP address for the path. Host Port Destination port for the path. Local IP Use this local IP as the source IP for the connection to the gateway. Use as Default True - Will not attempt to connect to the configured Gateway Node using the WAN interface IP and Default Gateway path. False - Will attempt to connect to the Gateway node using both this defined path and the WAN Interface IP and Default Gateway path. Gateway Tools To see detailed messages about gateway traffic, select the Troubleshoot Gateway Traffic option from the services menu under Gateway Tools.\nTroubleshoot Gateway Traffic dialog This will open a new window with live diagnostic messages about traffic\nOutput of Troubleshoot Gateway tool ","categories":"","description":"","excerpt":" Gateway nodes accept TLS tunnel connections from other nodes in the …","ref":"/docs/nodes/gateway/","tags":"","title":"Gateway"},{"body":"Tag Improvements Two major improvements regarding tags.\nCluster Members Inherit Tags Previously you had to set tags at the node and cluster level which required a lot of duplicate effort. Now when you configure tags at the cluster level the member nodes inherit this tag.\nTags Searchable in the Nodes Table With this release if you add a tag as a column to the nodes table, you can then search the table for matching values.\nNodes Table Improvements Two new columns can be added to the nodes table:\nVirtual Management IP Column You can now see from the table the virtual management IP assigned to each node. If you have multiple virtual networks you will have the option to select each network as a column. These columns have the prefix MGMT IP:.\nDevice Type Column You can now see what type of device, physical or virtual, is running the node software.\nGeneric Webhook Support as an Alert Channel This version adds the ability to publish alerts to a channel utilizing a generic webhook. This should allow integration with additional systems beyond the built-in channels Trustgrid supports.\nTo utilize either edit an existing channel or create a new one and populate the Generic Webhook section.\nProvisioning Improvements There have been several changes to the Provisioning (formerly Orders) section of the Portal including:\nDue Dates for Orders Support for specific device models (as opposed to just hardware vs virtual) ","categories":"","description":"","excerpt":"Tag Improvements Two major improvements regarding tags.\nCluster …","ref":"/release-notes/cloud/archive/2021/august/","tags":"","title":"August"},{"body":"Resource-Scoped Permission Policies The May 2022 release enabled the creation of more granular permissions policies. With this release we’ve added the ability to grant permissions to specific node or cluster resources. This enables you to limit a user to only see specific devices with very limited permissions.\nPolices now have a Resources section. This can be populated with a list of Trustgrid Resource Names (TGRN) to limit where the defined permissions are applied. See the documentation on Resource-Scoped Polices for more info.\nMonitor Network Hops Trustgrid has add a troubleshooting feature to collect traceroute like data on a regular basis. When enabled a node will collect 3 samples a minute and store the data in the cloud. This data will assist in determining the source of packet loss or high latency between devices. See Monitoring Network Hops to Peers to learn more.\nShow ISP and ASN for Public IP Trustgrid now uses our IP geolocation database provider to supply the internet service provider (ISP) and autonomous system number (ASN) associated with the public IP of nodes. This info is visible under History → Location, listed under the IP-Derived Info panel.\nIt should be noted the accuracy of this information varies between ISPs\nIdentity Provider (IdP) Logins in Authentication Audits Previously, the logs under the Operations → Authentication Audits only displayed logins using the Trustgrid native authentication provider. If you were using an IdP you would need to review the providers logs to see when users logged in.\nWith this release we now display IdP portal logins the same way native logins are reported.\n","categories":"","description":"","excerpt":"Resource-Scoped Permission Policies The May 2022 release enabled the …","ref":"/release-notes/cloud/archive/2022/august/","tags":"","title":"August"},{"body":" The Trustgrid Portal can integrate with external identity providers. The identity providers added to the Portal may be used for ZTNA access and/or Portal authentication.\nTo use an identity provider for Portal authentication, first configure the authentication domain.\nThis domain can be used to directly access the Portal, and unauthenticated users will be redirected to your chosen identity provider.\nFour different types of identity providers are supported: Azure AD, G Suite, OpenID, and SAML.\nField Name Description Type the identity provider type. Name used inside the portal when associating an identity provider with a ZTNA application Use for Portal Auth whether or not this provider should be the default authentication provider. Only one provider can be used for Portal authentication. ","categories":"","description":"","excerpt":" The Trustgrid Portal can integrate with external identity providers. …","ref":"/docs/idps/","tags":"","title":"Identity Providers"},{"body":"Network Interfaces Navigate to a node, then select Interfaces under the Network section.\nThe Interface dropdown at the top allows you to select which interface to manage.\nETH0 - WAN Interface This interface is always used to build the outbound TLS tunnels for control and data plane connectivity. If the node is deployed in a single interface configuration, this interface will also be used for local network connectivity.\nETH# - LAN Interface Used in configurations with more than one interface for local network connectivity.\nVLAN Subinterface Virtual under a physical LAN interface that will apply a VLAN tag to traffic\nConfiguration Field Name Description Hardware Address MAC address of the interface. Interface VRF Selects to which VRF the interface is attached. VLAN ID (Subinterfaces Only) Sets the VLAN ID/tag for the subinterface. IP Assignment (ETH0 only) DHCP - requires a DHCP server or relay in the same broadcast domain as the interface connection Static - configured using the fields below IPv4 Address CIDR IP address using classless inter-domain routing (CIDR) notation. Gateway IP ETH0 - The IP address of the default gateway for this device. All traffic not in the same network as an interface IP or with a specified route will use this gateway. ETH1 - This is only used in a 2-interface setup to access local resources outside the interface’s configured network. Routes must be defined. DNS Server 1/2 IP (ETH0 only) Used to resolve DNS names to connect to the Trustgrid control plane. Cluster Virtual IP Used in clusters, this IP address is moved between member nodes based on the active cluster member. It can be used to route traffic between the virtual and local networks. This IP address can only be changed within the cluster interfaces page. Auto-Negotiation Sets if the interface will use auto-negotiation to determine the speed and duplex settings. Values can be AUTO (default) or MANUAL. Duplex Locked unless Auto-Negotiation set to MANUAL. Sets the interface to either FULL (default) or HALF duplex Speed Locked unless Auto-Negotiation set to MANUAL. Sets the interface to 10, 100, 1000 Mbps. Ignore Health Check Value can be Disable (default) or Enable. If set to Enable, the interface’s link status will no longer be used by the node to determine its cluster member health state. Useful if a single node has a network connection it’s peer does not such as an alternate WAN path. Interface Routes If the node is part of a cluster, these must be configured at the cluster level\nThese routes are used to access networks that are not in the same network as a configured interface and that are not accessed using the default gateway IP configured for ETH0 - WAN Interface. It is rare to need to define these on the ETH0 interface.\nSelect the interface from the Network Interface dropdown.\nClick the + Add Entry button.\nEnter the route information There are three fields:\nField Name Description Destination CIDR This is the CIDR notation of the network or host that needs to be routed. For a single host, use /32 as the CIDR suffix. Next Hop The IP address to which traffic destined for the above defined network will be sent. No CIDR suffix is needed. Description Optional field to provide additional information about the route. Click the green check to confirm the route.\nRepeat steps 2-4 with any additional routes.\nClick the Save button.\nAdditional IPs IP address entries added to the list below will be bound to the current interface. Only visible on LAN interfaces and Subinterfaces Advanced Network Settings Field Name Description Dark Mode Value can be Disable (default) or Enable. When set to Enable the node will restrict ICMP responses so that it will not respond to ICMP (Ping) echo requests or respond to failed TCP/UDP connection attempts with reset or ICMP Destination Port Unreachable ","categories":"","description":"Configure and manage the node's local network configuration","excerpt":"Configure and manage the node's local network configuration","ref":"/docs/nodes/interfaces/","tags":["node"],"title":"Interfaces"},{"body":"Container Improvements Trustgrid has greatly enhanced the container features we support and this release makes these features available to all users.\nContainer Management You can now stop and start individual containers running as a service from within the portal.\nContainer Volumes and Mounts Containers on Trustgrid now support creating persistent volumes and mounting them within the container. These volumes can even be encrypted using Trustgrid managed, software-based encryption.\nContainer Privileges It is now possible to run containers as a privileged user or specify the user/group the container should execute as. Additionally, you can add or drop Linux capabilities that the container has enabled on execution.\nImport Container Configuration Container configurations can end up complex. Recreating on many nodes is tedious and error prone. Trustgrid now supports importing the configuration from an existing node or cluster that has the container defined as desired.\nInteractive Tools Improvements Terminate Running Tools without Closing Window Interactive tools such as Terminal and Sniff Traffic now support terminating the session without closing the window. This can be useful in situations, such as if sniffing traffic on a very active node, where you want to be able to stop the tool but still be able to analyze the output.\nTraffic Capture Tool Improvements The Traffic Capture tool now displays the settings used while running. This includes the interface and filter.\nProvisioning and Order Management Improvements The Provisioning section of the Trustgrid portal has been extensively overhauled to improve the order management experience and make future improvements easier.\nNew Look The first change you’ll notice is that clicking Provisioning opens a new tab. The orders table now makes it easier to search and filter the results.\nThe individual order screen is now a single page view to reduce the need to switch between tabs. And orders now support attaching files such as legacy device configurations or diagrams that might be useful for configuring the new devices.\nOrder Notifications You can now configure Alarm Filters for four new order based events:\nOrder Created Order Commented Order Status Change Order Customer Update These events can then be sent to existing or newly defined channels.\n","categories":"","description":"","excerpt":"Container Improvements Trustgrid has greatly enhanced the container …","ref":"/release-notes/cloud/archive/2021/september/","tags":"","title":"September"},{"body":"","categories":"","description":"Trustgrid Release Notes\n","excerpt":"Trustgrid Release Notes\n","ref":"/release-notes/","tags":"","title":"Release Notes"},{"body":"Trustgrid nodes can be in two states:\nEnabled - In this state the node will connected to the Trustgrid Control Plane and any Data Plane gateways the node is configured to use. Disabled - This is a reduced functionality state that cause the node to only attempt to connect to the Trustgrid control plane. It can be managed to a limited extent but many other Trustgrid features will not function in this state Disabling a node allows for additional security if a device is in transport and can also be used as an easily reversible way of verifying a node is no longer in use before fully deleting the node.\nChanging the node status will trigger a restart of the Trustgrid node service. Disabling/Enabling from Info Tab If disabling or enabling a single node you can:\nNavigate to that node in the Trustgrid portal. Open the Info tab by clicking the dropdown in the top-right, or hitting the ` key. From the Status dropdown change to Disable or Enable Info tab with Status dropdown Disabling/Enabling from Nodes Table If disabling or enabling multiple nodes it is easier to do so from the Nodes table\nNavigate to the nodes table. (Optional) Use the search box to filter the displayed nodes. Note that if you change this any selected nodes will be de-selected. Use the checkbox on the left to select the nodes you wish to disable or enable. From the Actions dropdown select either Enable or Disable Status actions on Nodes table Disabling/Enabling via Terraform Nodes can be enabled or disabled via the Trustgrid published Terraform provider using the tg_node_state resource.\nThe Trustgrid API refers to this state via the status attribute. The value ACTIVE means the node is enabled and the value INACTIVE indicates the node is currently disabled ","categories":"","description":"Describes the process of enabling or disabling a Trustgrid node and the impacts of such a change","excerpt":"Describes the process of enabling or disabling a Trustgrid node and …","ref":"/tutorials/management-tasks/changing-node-status/","tags":"","title":"Changing Node Status (Enabling / Disabling)"},{"body":" A network object allows naming a CIDR inside a VPN for easier rule management.\nA network object requires the following fields:\nField Name Description Name The label to use when referencing this object. CIDR Specifically an IPv4 CIDR. Multiple network objects may be clustered into a network group.\n","categories":["concepts"],"description":"","excerpt":" A network object allows naming a CIDR inside a VPN for easier rule …","ref":"/docs/domain/virtual-networks/network-objects/","tags":["domain","concepts","rewrite"],"title":"Network Objects"},{"body":"Cluster Improvements Cluster Site Health State With this release we introduce the concept of Cluster Site Health State. This addition makes it more obvious when there is an issue with a cluster at a site and possible to configure alarm filters to notify your team when changes occur.\nWe display the cluster health on the list view:\nAnd on the cluster overview:\nUnhealthy notice on cluster overview Offline notice on cluster overview Cluster Status Endpoint When placing a load balancer in front of a Trustgrid cluster it is necessary to give the load balancer a way to determine which node is active so that it can send the traffic appropriately. We’ve added an optional HTTP endpoint that will listen on cluster members but will only return a 200 code on the active member of the cluster.\nThere is now a new section under System → Cluster for cluster members where you can define the port on which the node will listen. This endpoint will always listen on the WAN interface IP.\nRequires node version 20220808 or newer\nEnable Different Interface Routes for Cluster Members Traditionally, cluster members share the interface routes configured at the cluster level. This is usually desirable, but certain situations can require each member to have a different route defined. For example, If you have deployed your cluster members in different AWS Availability Zones for redundancy and you have the heartbeat communication on a LAN interface each would need a different route.\nWith this release you will see the ability to “Add Entry” for additional routes under the LAN interface section of cluster members. You will also see a read-only entry with a blue square for any cluster-defined route.\nData Plane Panel Improvements Easier Peer Selection Previously, to select a node in the data plane peers table you had to click exactly on the node’s name. Now, you can click anywhere in the name box.\nDisplay Data Plane Stats for Gateways Prior to this release we only displayed Tunnel Latency and Network Hops (when enabled) on edge node devices. With this release you can now navigate to a gateway’s data plane panel and select a client edge node. The data displayed is based on the edge node’s perspective but can still provide useful information on the state of the connection between devices.\nOther Improvements Flow Log Advanced Search by TCP Flags The Flow Log Advanced Search now has the ability to search for TCP flows with specified TCP flags. In the TCP Flag section just click the flags that you want to search for and the matching flows will be returned. If multiple flags are selected, only flows with all matching flags will be returned.\nNode Audits Shows Node Version Changes When a node is upgraded and successfully reconnects, the Node Audits section will display the new and previous versions.\nSwagger API Improvements A number of new areas are now documented in our public swagger documentation: https://portal.trustgrid.io/api-docs/\nThe new sections include:\nAdditional Audit endpoints Container and VM configuration ZTNA Gateway ","categories":"","description":"","excerpt":"Cluster Improvements Cluster Site Health State With this release we …","ref":"/release-notes/cloud/archive/2022/october/","tags":"","title":"October"},{"body":"Order Management Improvements This release is primarily focused on making improvements to our order management system.\nNotification of Changes in Open Orders Previously if more than one user was making changes to the same order it was possible the second user to save would overwrite the changes of the first.\nNow the system will notify you if someone has changed an order while you have it open. You would then need to refresh the page to see the changes made.\nPriority Field Orders can now be assigned a priority of Normal, High or Urgent. This will be reflected in the Orders table by changing the color of the summary to yellow for High priority and red for Urgent.\nOrder priority menu Example High, Urgent, and Normal priority order summaries Support for Hyperlinks You can now add Hyperlinks within an order to provide support documentation on the configuration.\nHyperlink Form “In Production” Orders moved to Closed Now when an order’s status is changed to In Production, it will appear in the Closed page of orders. This will make is easier to see how many open orders are in process.\nOther Improvements Advanced Flow Log Search History You can now load a history of your previous Advanced Flow Log searches by clicking the history tab to the right. You can then choose to reload a prior search’s parameters by clicking the apply button.\nEvents Table Search The Events table now has a search field that will filter the events shown. This has been added both at the Node Detail Events page and under Operation to see events across all nodes in the org.\n","categories":"","description":"","excerpt":"Order Management Improvements This release is primarily focused on …","ref":"/release-notes/cloud/archive/2022/october-2/","tags":"","title":"October Second Release"},{"body":"Repository Performance Improvements This release includes a significant overhaul of the the repository control plane service. This service is responsible for providing upgrade packages and pushing/pulling container images.\nData Plane Stats for Private and Hub Gateways Prior to this release, viewing the Data Plane stats such as tunnel latency and [network hops](https://docs.trustgrid.io/tutorials/gateway-tools/monitoring-network-hops-to-peers/ would not display. These stats will now be displayed the just like edge and public gateway stats.\nChanging Configured Master (Active) Logging With this release, if a user changes which node is configured as the master (active) member of the cluster it will be logged on Changes for the cluster.\nChanging the configured master (active) node Change entry for active member change ","categories":"","description":"","excerpt":"Repository Performance Improvements This release includes a …","ref":"/release-notes/cloud/archive/2022/october-3/","tags":"","title":"October Third Release"},{"body":"Data Plane Status Table Previously Trustgrid had a visual indicator on the Node detail page to show the Data Plane health of a node, but it only showed the state as Connected, Degraded or Disconnected. While connected and disconnected were clear, there was little information on why the status was Degraded.\nWith this release hovering over the Data Plane status icon will bring up a pop-up screen showing all the peers and and their connection status. Additionally, if the peer is connected it will show:\nThe public IP of the peer The mode used to connect to with the peer (TLS or UDP) The route trip time (RTT) between the devices when the tool was last run. This data can be searched and refreshed. In a future release we will make historical RTT time viewable for each peer.\nFlow Log Improvements Flow logs provide valuable metadata about traffic across Trustgrid networks but our search had performance and reliability issues that made it difficult to use. With this release we’ve rearchitected how search these logs to allow for a significant performance improvement.\nImproved IP Geolocation Data Trustgrid has changed our public IP geolocation data providers to improve the accuracy of the information we use to place nodes on our Network Maps. This new provider will also allow us to present additional information such as ISP and ASN in the future, which could be handy for identifying when multiple devices from the same ISP or ASN start having issues.\nCustom Portal Roles Trustgrid is working on moving our permission structure beyond the four default roles (Monitor, Operator, Node-Administrator and Administrator) to allow customers to tailor roles to just the permissions their users need. For example, you could allow a user Monitor (read-only) permissions to most of the Trustgrid environment but grant them the ability to stop and start containers.\nCurrently this requires working with Trustgrid Support to define these new roles but once defined they can be assigned by Node Administrators and Administrators.\nOther Improvements You can now search the Nodes table for Management IPs and Device types Fixed a broken link in the new user invite email for customers without IDP integration ","categories":"","description":"","excerpt":"Data Plane Status Table Previously Trustgrid had a visual indicator on …","ref":"/release-notes/cloud/archive/2021/december/","tags":"","title":"December"},{"body":"Trustgrid uses each node’s public IP address to derive location information. If it’s incorrect, the fields can be set manually. If set manually, IP changes will not update the node’s location when viewed from the nodes table or the network map.\nTo change the Node Location: Change the details to desired settings then click Save when done.\n","categories":"","description":"","excerpt":"Trustgrid uses each node’s public IP address to derive location …","ref":"/docs/nodes/location/","tags":"","title":"Location"},{"body":" A node is an instance of software used for building connections, managing compute resources, and deploying software.\nNode Types A node can be installed on a hardware appliance, as a virtual appliance (Vsphere and Hyper-V), and deployed in a public cloud (Amazon AMI, Google, Microsoft). There are three main types of nodes - Edge, Gateway, and Management.\nAll Trustgrid nodes run on a hardened Ubuntu operating system. Nodes are managed through the Trustgrid portal or via the API (requires authentication token). A local UI exists to support the reconfiguration of an ethernet interface and diagnostic/network tests prior to connection to the Portal.\nEdge Nodes Edge Nodes build outgoing TLS tunnels to Gateway Nodes. Bidirectional traffic is supported through this tunnel, subject to ACLs and security policy restrictions. Edge Nodes will only require a firewall rule change if outbound internet restrictions are in place. Edge nodes can be a target for software deployment. Edge Nodes can be deployed with a single or multiple ethernet connections to support deployments behind a firewall or adjacent to a firewall (public WAN / private LAN).\nGateway Nodes Gateway Nodes accept incoming TLS tunnels from Edge Nodes. Traffic on these tunnels is bidirectional, as permitted by ACLs or policy. Gateway Nodes usually require a firewall change to permit the incoming traffic. Gateway Nodes are identical to Edge Nodes but with a gateway configuration applied. Gateway nodes only connect to other gateways if one is of type hub. Read more about gateway configuration.\nManagement Nodes Management Nodes are not like other nodes because they do not connect to the data plane, only the control plane. Management Nodes are deployed by Trustgrid for each customer and are multi-tenant like other control plane components. Customers may elect to deploy their own Management Nodes in place of multi-tenant Management Nodes. Management Nodes facilitate the monitoring, management, and support of Edge and Gateway Nodes.\nNode List View Adding a Tag as a Column on the Nodes Table Adding a tag as a column on the nodes tables is good way to make valuable information visible for multiple nodes at the same time. To add the column:\nNavigate to the nodes table page Click Actions and then select Columns from the dropdown Towards the bottom you will see all the available tags in the format tag: tag-name. Select the desired tag and click Save. The column will be added and the table can now be sorted by that column. Any node that does not have that tag set will be listed as blank.\nApplying a Tag Filter to the Nodes Table The nodes table can also be filtered to only show nodes with a specific tag name:value.\nOn the nodes table click Actions and select Add Tag Filter from the drop-down menu. After clicking Add Tag Filter, select the tag-name field and you will see a list of tag-names available. Select the desired tag. You can also start typing to filter what tag names are shown.\nSelect the tag value field and you will see a list of available values. Select the desired value.\n(Optional) Click Add Tag Filter to include an additional filter. Note that the two filters will be applied using AND only nodes with both tag name:value combinations matching will be shown.\nClick Apply Tag Filter and the table will only show matching nodes.\n","categories":["concepts"],"description":"","excerpt":" A node is an instance of software used for building connections, …","ref":"/docs/nodes/","tags":["node","concepts"],"title":"Nodes"},{"body":"Stats The Node overview page shows performance and network traffic data.\nSupported time windows are selectable at the top. VPN and network statistics can be targeted to specific virtual networks and interfaces.\nField Name Description Node Performance shows CPU, disk, and memory usage percentages VPN Traffic Volume shows data usage sent and received, across all VPNs and for the selected virtual network Traffic Volume shows data sent and receives, across all interfaces and for the selected interface Connected Peers shows the number of other nodes connected. This will change based on the node type - gateways connect to all edge nodes, while edge nodes only connect to gateways.(LINK HUB GATEWAY PAGE WHEN DOCUMENTED) VPN Flows shows new and active flows, across all VPNs and for the selected virtual network TCP Errors shows TCP errors across all interfaces ","categories":"","description":"","excerpt":"Stats The Node overview page shows performance and network traffic …","ref":"/docs/nodes/overview/","tags":"","title":"Overview"},{"body":"List View Trustgrid provides a fully managed private container registry. Uploaded container images may be viewed by navigating to Repositories in the portal:\nUsers can push and pull containers from the repository.\nDocker Login To authenticate with the registry, use the command provided at the bottom of the repositories view. Authentication lasts approximately 24 hours.\nContainer Namespace Each customer is isolated to their own container namespace. To upload or download a container, it must be named with your namespace as a prefix.\nFor example, to push a tomcat container to your registry:\ndocker tag tomcat:latest docker.trustgrid.io/namespace.trustgrid.io/tomcat:latest docker push docker.trustgrid.io/namespace.trustgrid.io/tomcat:latest\nContainer Repo View Each repository can be managed. Clicking into a container will show its uploaded tags and digests, as well as the URI that can be used to pull the container.\nNode Container Auth Trustgrid nodes authenticate automatically with the Trustgrid container registry and can pull any image uploaded to the registry.\n","categories":"","description":"","excerpt":"List View Trustgrid provides a fully managed private container …","ref":"/docs/repositories/","tags":"","title":"Repositories"},{"body":" Services are configured in conjunction with connectors to define a remote host:port to connect to for layer 4 (L4) connectivity.\nConfiguration Services are configured under the Networking \u003e Services tab of the node or cluster configuration section in the Trustgrid Portal.\nAdd Service dialogue Field Name Description Enabled Values: Yes or No. Allows each service to be individually disabled if desired\" Protocol The protocol of the service to connect to. Options are TCP, UDP, FTP, and TFTP, along with pre-defined default ports for RDP, SSH, and VNC.\nFTP must operate in passive mode when using L4 services and connectors.\nService Name A friendly name for the service that will be used in the Remote Service field of a connector. Can only contain letters, numbers, and the - character. Host The IP of the host to connect to. Port The port to connect to on the host. Description (Optional) User friendly description of the service. Test Connectivity Show only on the Services table for TCP Protocol services. When clicked, the client node will attempt a TCP port connection to the configured host and port and display success or failure.\n","categories":["node"],"description":"","excerpt":" Services are configured in conjunction with connectors to define a …","ref":"/docs/nodes/services/","tags":["layer 4","networking"],"title":"Services"},{"body":" Trustgrid Nodes support SNMP Version 3 for the monitoring of various node resources.\nConfiguration SNMP is configured under the SNMP tab of the configuration section of the node in the Trustgrid Portal.\nConfigure all fields and click save. Then set the status to enabled which will start the SNMP service on the node.\nField Name Description Status Set to enabled to start SNMP service. Setting to disabled will retain the configuration but stop the SNMP service on the node. Engine ID Automatically generated Username Create SNMP Username to be used by snmp client Auth Protocol Select MD5 or SHA Auth Passphrase Configure authentication passphrase of eight or more characters Privacy Protocol Select between DES, AES128 Port SNMP service runs on UDP port 161 by default. Specify an alternate port number to run the service on an alternate UDP port. Interface This is the interface on which the SNMP service will listen. This should always be set to an interface behind the firewall.\nLoopback - This will listen only on virtual management IPs. Useful for monitoring across the virtual network overlay (e.g. snmp collector is in the remote network)\nETH0 for single interface setups. Note: if enabled on a WAN interface with public IP SNMP port 161 will show as available on the internet\nETH1 for dual interface setups\nQuery the SNMP Service The SNMP Service is listening on the IP address of the Interface chosen along with the Virtual Management IP if configured. The example below is a snmpwalk from a client on the same layer 2 network that the data nic of the edge node resides in.\nTo query the SNMP service you can use a tool like snmpwalk or similar.\nSNMPWALK Example:\nsnmpwalk -v3 -l authPriv -u snmpuser -a MD5 -A “securepassword” -x DES -X “securepassword” ip.ad.dre.ss\nIn this example:\nMD5 and DES match the configured Auth and Privacy protocols. Be aware that other protocols may be selected\nsnmpuser matches the configured Username\nsecurepassword after -A is the Auth Passphrase a, after -X is the Privacy Passphrase\nip.ad.dre.ss needs to be replaced with the IP address of the node that you want to target:\nIf you are querying from the local network, you should use the IP address of the Interface selected on the SNMP config panel\nIf you are querying from across the virtual network, you’d need to use the Virtual Management IP in the correct Virtual Network.\nRunning this command should generate output like shown on this page.\nInformation Provided by SNMP A full list of all available OID’s supported by the Trustgrid Node is listed here.\n","categories":"","description":"","excerpt":" Trustgrid Nodes support SNMP Version 3 for the monitoring of various …","ref":"/docs/nodes/snmp/","tags":"","title":"SNMP"},{"body":" The Support page provides options for restricting Portal access and retrieving documents shared by Trustgrid.\nRemote Support Disallowing remote support prevents Trustgrid staff from invoking services (like remote terminal or ping) on nodes. Changing this field is audited (put a link to audits; they’re not documented yet though).\nUsers will need support::modify permissions to change this setting.\nIP Restriction Trustgrid Portal access for your organization can be limited to specific IP addresses. Multiple IP addresses can be added. Note that if your IP address changes and is not included on this list, you will be unable to access the Portal.\nUsers will need support::modify permissions to change this setting.\n","categories":"","description":"","excerpt":" The Support page provides options for restricting Portal access and …","ref":"/docs/support/","tags":"","title":"Support"},{"body":" Thresholds provide a way to trigger events when different measurements exceed a given value. Thresholds configured at the node level can override Domain Thresholds.\nTo view and configure thresholds, a user will need nodes::configure::thresholds permissions.\nNavigate to a node, and click Thresholds under the System section.\nNote that overridden thresholds have a yellow square icon next to them.\nLoad Thresholds Load thresholds measure the health of the node itself.\nField Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Options are CPU usage (%), memory usage (%), disk usage (%), and embryonic flows (absolute count). Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Network Thresholds Network thresholds measure the health of the network from the node’s perspective.\nField Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Options are latency (ms), bandwidth in (Mbps), and bandwidth out (Mbps). Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Target For latency, target node to measure the latency to. For bandwidth measurements, the interface to measure the bandwidth on. ","categories":"","description":"","excerpt":" Thresholds provide a way to trigger events when different …","ref":"/docs/nodes/thresholds/","tags":["node","concepts"],"title":"Thresholds"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/management-tasks/","tags":"","title":"Management Operations"},{"body":" This section explains how to use the Trustgrid Portal.\nNavigation Aside from the API documentation, the navigation on the left corresponds to how you would navigate the Portal. For example, the Nodes section corresponds to the Nodes section of the Portal.\nFor a more conceptual understanding of Trustgrid, visit Getting Started. To learn how to deploy nodes, use tools, or troubleshoot networks, visit the Guides section.\n","categories":"","description":"","excerpt":" This section explains how to use the Trustgrid Portal.\nNavigation …","ref":"/docs/","tags":"","title":"Documentation"},{"body":" A tag is a name / value pair that can be used to provide additional information about a Trustgrid resource (nodes, clusters, etc).\nTags are useful when managing enterprise-scale deployments of nodes. Tags allow the user to identify quickly and easily a node or group of nodes with the same property. Both the name and value of the tags are set by the user. Names should provide the context and values provide the actual data. For example, to provide the address of a device you would set the name to address, and the value to something like 123 Main St.\nIt is a best practice for Trustgrid customers to standardize on a set of tag names and appropriate values. This increases the consistency of use across your organization. When adding tags the existing tag names and associated values will be prepopulated as options. Some common uses of tags are:\nSupporting information (production status, contact info, hours of operation, escalation) On-premise/edge location information (site name, address, pin code) Configuration (High availability, instance type, region, disaster recovery) Tag names and values are case-sensitive and should only consist of letters, numbers, dashes (-), and underscores (_). Viewing Tags There are multiple ways to view tags.\nViewing Node Tags from the Node Detail Page After navigating to a specific node’s detail page you can view the tag by:\nOpening the Tags panel from the left side navigation bar:\nOpening the info panel by clicking Info in the top right or by clicking the ` (backtick) key\nModifying Tags To add a tag:\nNavigate to the Tags section of a node.\nClick Add Tag.\nA new row will appear at the bottom of the tags table. There will be a list of existing tag names for your organization. You can filter the list by typing in the field. You can either select an existing tag name, or create a new one by typing it out in full and then selecting New selection: tagName.\nNext move to the values field. As with the name, existing values will be listed. To enter a new value type it in completely.\nClick Save\nTag rows can be edited in-place. Change the name or value, then click Save.\nTo remove a tag, click the red X next to the tag name, then click Save.\n","categories":"","description":"","excerpt":" A tag is a name / value pair that can be used to provide additional …","ref":"/docs/nodes/tags/","tags":["tag"],"title":"Tags"},{"body":" Trustgrid’s architecture consists of Nodes deployed at the Edge (on-premise) and management infrastructure built in AWS. Nodes create tunnels to other nodes for data transfer, and to the management infrastructure for control. All tunnels are TLS connections and must be permitted by any firewall between\nNetwork Requirements for All Nodes In order to connect to the Trustgrid Control Plane, the following outbound traffic must be allowed from the node’s configured primary interface IP address\nTCP Port 443 and TCP/UDP 8443 to: 35.171.100.16/28 34.223.12.192/28 TCP/UDP Port 53 to the configured DNS servers. These DNS servers must be accessible from the WAN/outside interface IP and be able to resolve DNS requests for the trustgrid.io domain Trustgrid nodes will attempt connect to 169.254.169.254 on port 80. This is a standard instance metadata server in public clouds such as AWS and Azure. This connectivity is not required outside these providers. Recommendations At least 10 Mbps download speed is recommended for reasonable performance during upgrades. Actual bandwidth requirement will be specific to the workloads running across the device.\nHardware devices are recommended to be connected to ports configured for 1000 Mbps and full duplex with auto negotiation on.\nGateway Node Network Requirements In addition to being able to connect to the Control Plane resource outlined above, Gateway Nodes must be allowed to receive inbound traffic on their configured public IP and port (typically TCP/UDP port 8443). Both the advertised public IP and port are configurable when enabling a node as a gateway.\n","categories":"","description":"Network access requirements\n","excerpt":"Network access requirements\n","ref":"/help-center/kb/site-requirements/","tags":"","title":"Site Requirements"},{"body":" A network group is a list of network objects that allows for easier rule management.\nA network group requires a name to be set. This will be used to reference the group in access policy rules.\nNavigating into a network group allows management of the group’s member objects.\n","categories":["concepts"],"description":"","excerpt":" A network group is a list of network objects that allows for easier …","ref":"/docs/domain/virtual-networks/network-groups/","tags":["domain","concepts","rewrite"],"title":"Network Groups"},{"body":" Restarting the Trustgrid service is faster than a full node reboot and resolves many non-recurring problems.\nGo to the Node detail page for the node affected.\nSelect Restart located in the top right corner of the page\nAfter clicking, type in the name of the node and click Confirm to execute the action the node agent will restart (Node host will not restart)\nExpect the node to alert for disconnection and connection.\n","categories":"","description":"Describes how to restart the Trustgrid service on a node appliance","excerpt":"Describes how to restart the Trustgrid service on a node appliance","ref":"/tutorials/management-tasks/restart-node/","tags":"","title":"Restart the Trustgrid Service on a Node"},{"body":" User Management is used to securely control access to Trustgrid resources. Identities (users) are authenticated and granted permissions (via policies) to view or manage Trustgrid devices and applications.\nHow It Works Users’ identities are authenticated via one of three mechanisms: a. Username, password and MFA via Trustgrid’s native authentication system b. Via a configured Identity Provider (IdP) using OpenID or SAML c. Trustgrid generated API token Permissions are determined via one or more attached policies These permissions are evaluated as the user makes requests against either via Trustgrid Portal or API ","categories":"","description":"","excerpt":" User Management is used to securely control access to Trustgrid …","ref":"/docs/user-management/","tags":"","title":"User Management"},{"body":" Click on the Node from the node page you wish to reboot Select Reboot from the top right corner of the page Type in the name of the node in the text box, and click the confirmation button The node will reboot within 60 seconds Node agent will start automatically on reboot Expect the node to alert for disconnect/connect Does not require a cloud gateway ","categories":"","description":"Describes how to completely reboot a node appliance including the operating system","excerpt":"Describes how to completely reboot a node appliance including the …","ref":"/tutorials/management-tasks/reboot-node/","tags":"","title":"Reboot a Node"},{"body":"Tunnels Overview Trustgrid Supports configuring various tunneling protocols in order to establish secure connectivity between any appliance that supports the underlying protocol. The supported tunnels are listed below.\nIPsec - Internet Protocol Security supporting ikev1 and ikev2 tunnels GRE - Generic Routing Encapsulation used for setting up a direct point to point network connection Vnet - The virtual network tunnel is the Trustgrid Proprietary VPN tunneling protocol and therefore can only be used to establish connectivity to other Trustgrid nodes in the organization Wireguard - The latest open source tunneling protocol aiming to provide better performance than the traditional ipsec or openvpn protocols “Wireguard” is a registered trademark of Jason A. Donenfeld\n","categories":["node"],"description":"","excerpt":"Tunnels Overview Trustgrid Supports configuring various tunneling …","ref":"/docs/nodes/tunnels/","tags":["tunnels","networking"],"title":"Tunnels"},{"body":"Trustgrid nodes can deploy virtual machines (if supported) using the open source virtualization technology Kernel-base Virtual Machine (KVM)which allows the node to act as a hypervisor to run multiple, isolated virtual guests.\nThe virtual machine can be attached to both the local and virtual network space which allows both local and remote resources to communicate with the virtual machine. For example an API could be deployed on a Trustgrid Gateway which sends API calls via the virtual network space to a virtual machine running on a Trustgrid Edge Node. The API call could then be translated to make a call to a database running on the local network and passed back up to the gateway host.\nBefore being able to deploy a virtual machine to a node, an image needs to be created. Management Navigate to VM Management \u003e Virtual Machines on a node.\nField Name Description Name Name of the virtual machine. Description Description for the virtual machine. Image Image selected from the ones available. Firmware Boot firmware for the virtual machine.\nBIOS UEFI Device Bus Device Bus used for deployment of the virtual machine.\nVirtIO IDE SATA Overview Navigating into a virtual machine, the overview section allows editing basic information about the virtual machine’s execution environment.\nField Name Description Name Name of the virtual machine. Description Description for the virtual machine. Image Image selected from the ones available. Guest OS (read-only) Operating System of the Image. Hostname (Optional) Hostname given to the virtual machine on deploy. Stop Timeout (Optional) Denotes how long to wait for the virtual machine to gracefully stop before killing the process. Default is 2 minutes. Firmware (read-only) Boot firmware of the virtual machine. Device Bus (read-only) Device Bus used for deployment of the virtual machine. Auto Start (Optional) Indicates the virtual machine should automatically start after deploy. CPU Virtual machine CPU allocation.\nMemory Virtual machine Memory allocation in GB, MB, KB, or Bytes.\nNetwork The networking section allows you to configure the virtual machine’s VRF, its port mappings, and its virtual networks and interfaces.\nHost Port Mappings Host port mappings allow you to expose a port on the host to the virtual machine. This is useful for exposing a service running in the container to the local network.\nField Name Description Protocol The protocol to listen for. If not specified, all traffic is forwarded to the virtual machine. Host Interface The host interface to listen on. Host Port The host port to listen on. Virtual Machine Port The virtual machine port that will receive the mapped traffic. Virtual Networks Attaching a virtual network to a virtual machine allows virtual network traffic to reach it.\nField Name Description Virtual Network The virtual network to attach. Virtual IP The virtual IP to assign to the virtual machine. Allow Outbound Whether the virtual machine should be allowed to make outbound connections into the virtual network. Virtual Interfaces A virtual interface can be mapped to a virtual machine to forward all traffic.\nField Name Description Name The virtual interface name. Destination The interface destination inside the virtual machine. Volumes Allows mapping disks or cd-roms to a virtual machine.\nSnapshots Allows the creation, restoration, and deletion of virtual machine snapshots.\nField Name Description Name The snapshot name. Creation Time The timestamp when the snapshot was created. VM State The state of the virtual machine when the snapshot was created. Snapshot Mode Extenal Disk Only - Mode applied to the snapshot when the firmware of the virtual machine is UEFI. Internal - Mode applied to the snapshot when the firmware of the virtual machine is BIOS. This mode includes the guest virtual machine state. Parent Snapshot If this is a child snapshot, this references the parent snapshot. Description The snapshot description. Every snapshot operation is tracked asynchronously. You can keep track of the status of every snapshot creation, restoration, and deletion via the Recent Tasks table.\nCloud Init Cloud-init is a simple and powerful way to configure virtual machines during deployment. You can manage user creation, install updates, configure network, etc.\nYou can find the full cloud-init documentation here History Shows active and completed traffic flows for the virtual machine.\nActive flows can be manually terminated. ","categories":["virtual machines"],"description":"","excerpt":"Trustgrid nodes can deploy virtual machines (if supported) using the …","ref":"/docs/nodes/kvm/","tags":"","title":"Virtual Machines"},{"body":" Trustgrid nodes can be configured to provide VPN-like functionality, allowing network address translation (NAT) and routing between nodes.\nThe VPN feature enables routing of IP packets by utilizing a virtual IP space that is configured on the nodes. In this configuration, the node can be used as the next hop for route destined for the virtual IP space, or the node can be used as the default gateway for a network. The virtual IP space is used as a transit network with NAT being utilized to translate IP addresses on to/from the virtual IP space on either side. It is also possible to preserve the original source and destination by having the virtual IP space be identical to the LAN network.\nThe Trustgrid VPN feature provides the capability to securely route IP packets between remote networks. In this configuration, Trustgrid nodes can operate as a distributed mesh virtual private network (VPN) that can allow applications to access remote data and services at layer 3 (L3) of the network OSI model. This is done by defining a virtual L3 network (similar to an Amazon VPC) and then selecting how local node networks are exposed and translated into the the virtual address space.\nAttaching a Virtual Network To use VPN functionality, a node or cluster must be attached to a domain virtual network.\nNavigate to the VPN section for your node or cluster, and select Actions-\u003eAttach.\nAttach Virtual Network dialog on a Node Field Name Description Select Network Drop down list to select defined virtual networks. Validation CIDR Used to validate NATs defined on this node or cluster. If the Virtual CIDR of Inside NATs or the Network Group value of Outside Nats are outside the Validation CIDR a warning will appear. Must be a subnet equal to or smaller than the Virtual Network’s Network CIDR. Virtual Management IP This IP address is used by the node as the source IP for running VPN troubleshooting tools. Only visible in this dialog when attaching the network to a node. If attaching to a cluster, you will need to navigate to each member node to set the Virtual Management IP. Once attached, navigate into the network to manage the VPN configuration.\n","categories":"","description":"","excerpt":" Trustgrid nodes can be configured to provide VPN-like functionality, …","ref":"/docs/nodes/vpn/","tags":"","title":"VPN"},{"body":"Overview VRFs can be used route / nat and filter what traffic is allowed to pass and how it should appear on the network. VRFs can be associated to an interface whether it be a physical interface / virtual network interface or other tunnel interfaces such as ipsec or gre. VRFs are segmented on a layer 3 level from all other traffic traversing the Trustgrid node.\nFor standard use cases of source nat and/or destination nat creating a route and a NAT is sufficient. Traffic rules can be used for more advanced controls. An applicable ACL is required for any traffic to pass as a zero trust methodology is applied.\nAddress Translation This is where NATs are created in order to translate the traffic to appear as desired on the network. NATs support translating both source and destination CIDRs as well as masquerading as the egress interface address.\nSNAT / DNAT Example Using the example NAT below if a source packet was initiated from 10.10.10.100 destined for 10.10.20.100 the source address would be translated to 192.168.10.100 and the destination address would be translated to 192.168.20.100. It is important to note that nat translations occur before routing decisions are made.\nMaquerade Example Using the example below if a source packet is initiated from within 10.10.10.0/24 destined for anything in 192.168.10.0/24 the source would be translated to the interface address the packet is egressing on. If it was a single interface Trustgrid node it would be sourced as the wan facing interface address.\nRoutes Note that NAT translations happen before routing so routes should be created for the destination NAT CIDR if applicable. Routes require a destination CIDR, interface and metric. A next hop is optional and only applicable for non-tunnel interfaces such as physical interfaces or vlan subinterfaces. The gateway of the applicable interface will be used if no next hop is defined.\nThe example below would be used for example to offload all internet bound traffic directly out the WAN facing interface\nTraffic Rules Traffic rules can be used for more advanced granular traffic manipulation beyond standard source and destination nat. There are many more parameters that can be applied to the traffic depending on the specific use case. When creating a traffic rule an ACL is required for traffic to pass. The available parameters are defined below. Rules are evaluated based on the line number. The first matching rule is the one that will be applied to the packet. More specific rules should always be implemented above less specific rules. Eg a rule for a /24 network should be above a /16 network the /24 is included in.\nField Name Description Number The line number the rule is applied to. Rules are matched in numerical order. Action All traffic rules have an action that is applied to the associated packet.\nAccept - The packet is allowed to be processed locally. Drop - The packet is dropped and not responded to Reject - A TCP Reset is sent in response Forward - The packet is forwarded to its defined destination such as an interface or another VRF Mirror - Packets are not manipulated but can be mirrored for inspection purposes. For example passing through an IDS container such as Snort. Log - The packet is not manipulated but is marked for logging Ingress Interface The traffic rule is applied to packets that ingress on this interface Forward Interface Packets are forwarded out this interface once the rule is applied Protcol The protocol that the rule should apply to. All, ICMP, TCP or UDP Forward VRF Packets are forwarded into another VRF that is associated on the node. Only configureable when a forward action is selected. Source CIDR The source network the rule should apply to Destination CIDR The destination network the rule should apply to Masquerade Translate and source all packets from the nodes interface address when enabled DNAT Destination Forward all traffic to the DNAT destination IP/Port. For example in order to forward all http traffic through a proxy Destination Mac The destination mac address defined overwrites the source mac address of the packet. Necessary only for some container deployments such as Snort inpsecting traffic. Ports Used to define a port range when creating a traffic rule Traffic Rule Example In the below example the first rule on line number 1 is forwarding all traffic destined to 10.0.20.0/24 to a virtual network tunnel interface. Any NATs configured under Address Translation will be applied before the packet is forwarded to its destination. The rule on line number 10 will forward all traffic that does not match the first rule out to the internet masquerading as the WAN interfaces address. If the line numbers were reversed the virtual network rule would never be matched as all traffic would match the internet offload rule which is configured for all source and destination traffic.\n","categories":["node"],"description":"","excerpt":"Overview VRFs can be used route / nat and filter what traffic is …","ref":"/docs/nodes/vrfs/","tags":["vrfs","networking"],"title":"VRFs"},{"body":"Navigate to a node, then select ZTNA Gateway under the Network section.\nHTTPS Endpoint The HTTPS endpoint is used to provide connectivity for non-WireGuard ZTNA applications.\nField Name Description Enabled When enabled, this node will listen for ZTNA traffic. Public FQDN The IP or FQDN of the node or the load balancer in front of the node. If using a domain name without a load balancer, be sure to select the appropriate certificate. Port The port to listen on. Users will always connect on port 443, so only change this if the node is behind a load balancer. Certificate The certificate to use for TLS traffic. Only needed if the node is to be directly accessed by users (i.e., without a load balancer) and the FQDN is a domain name. WireGuard Endpoint The WireGuard endpoint is used to provide connectivity for WireGuard ZTNA applications.\nField Name Description Enabled When enabled, this node will listen for WireGuard traffic. Public FQDN The IP or FQDN of the node or the load balancer in front of the node. Port The port to listen on. Public Key The node’s WireGuard public key. This can be generated or imported using the actions dropdown. Note that regenerated the key will disconnect existing clients and require users to reconfigure their WireGuard connection. “WireGuard” is a registered trademark of Jason A. Donenfeld.\n","categories":"","description":"Configure a node to allow end-user connectivity for ZTNA applications","excerpt":"Configure a node to allow end-user connectivity for ZTNA applications","ref":"/docs/nodes/ztna-gateway/","tags":"","title":"ZTNA Gateway"},{"body":" ","categories":"","description":"","excerpt":" ","ref":"/docs/api/","tags":"","title":"API"},{"body":"Startup Process ARP for the default gateway DNS request for A record for gatekeeper.trustgrid.io \u0026 zuul.trustgrid.io The response will be IPs in the Trustgrid AWS networks, 35.171.100.16/28 (us-east-1) or 34.223.12.192/28 (us-west-2) The node will initiate a connection to port 8443 on the IP addresses returned and start a TLS handshake. After a successfully TLS handshake, the node will show as connected in the Trustgrid Portal ","categories":"","description":"A step by step description of how a healthy Edge Node starts up and connects to the Trustgrid system.","excerpt":"A step by step description of how a healthy Edge Node starts up and …","ref":"/help-center/kb/startup-process/","tags":"","title":"Edge Node Startup"},{"body":" Routes configured under Domains determine to which node or cluster the Trustgrid virtual network should route traffic for a specific subnet.\nVirtual Network Routes Routes defined a the virtual network level allow creating a global route table shared with all nodes and clusters attached to the virtual network. This table is then used to evaluate where to send VPN traffic for a specified destination CIDR.\nRoute Fields A Route has the following fields:\nField Name Description Destination This will be the name of the node or cluster that traffic will be routed to. This list is auto-populated based on the nodes and clusters in the selected domain. Destination CIDR This is the CIDR notation of the virtual network that should be routed to the above destination node or cluster. Metric If there are multiple routes for the same virtual network the metric will determine which route will be used. The lowest number is the highest priority. See the “Automatic Failover” text below. Description (Optional) This field can be used to provide additional information about the purpose of the route. e.g. it could label a route as a DR route indicating that in normal circumstances it would have a higher metric than a primary route. Managing Virtual Network Routes Adding Virtual Network Routes Navigate to Domain \u003e Virtual Networks and select the desired Virtual Network. The Routes table is selected by default Virtual Network \u003e Routes Tip: Use the search field to filter the list of routes so you can see the routes you are adding. You could filter by the CIDR address or part of the destination node/cluster names. This will show any existing matching routes, and will make it easy to see the new routes you are adding. Click the add route button. Add route button Provide the desired route information in the fields Select the destination cluster or nodeEnter the destination network in CIDR notation. For a single IP use /32.Enter a metric between 1 and 200.Optionally, provide a description. Repeat the above two steps for any additional routes you wish to add. Click the Save button. Save route button There should be a notification saying “Routes Updated” but you will need to review and apply changes before the changes are actually be published to nodes in your environment. Example of a saved route As stated above, the route changes are not actually implemented until you click the Apply button the Review Changes panel. Deleting Virtual Network Routes Navigate to Domain \u003e Virtual Networks and select the desired Virtual Network. The Routes table is selected by default Virtual Network \u003e Routes Use the search field to filter the list of routes. You could filter by the CIDR address or part of the destination node/cluster names. This will show any existing matching routes, and will make it easy to see the new routes so you can delete them. Click the red X on the far right of the route being removed. Repeat the above two steps for any additional routes you wish to add. Click the Save button. Save route button There should be a notification saying “Routes Updated” but you will need to review and apply changes before the changes are actually be published to nodes in your environment. Example of a saved route Route Failover Route failover allows a subnet to be routed to an alternate node or cluster in the event of a failure. This can be automatic or performed manually.\nPrerequisites In either configuration, the virtual network settings under VPN settings for the primary and backup destination nodes/clusters must match. Including:\nNetwork Virtual Route\nNetwork Group under Outside NAT Table\nVirtual CIDR under Inside NAT Table\nAutomatic Failover To have the route failover without manual intervention you must define two routes for the same subnet (Destination CIDR) with different metrics. The lowest numerical metric will take precedence unless the destination node or cluster is offline.\nIn the below example configuration we want traffic for the 10.20.0.0/24 network to the edge cluster first, and failover to the edge-dr cluster.\nPreventing Automated Failback or Forcing a Failover As mentioned above if multiple routes are configured traffic will route to destination with the lowest metric number. So if the primary destination fails but then comes back online traffic will be routed back automatically.\nHowever, there are some circumstances where this is not desirable. For example, if the primary site is unstable you may wish to keep traffic at the backup site until the primary is stabilized. Alternately, you may wish to preemptively reroute traffic to the backup site in advance of planned maintenance at the primary site.\nTo preemptively reroute traffic to the backup site, update the backup route to have a lower metric than the primary route.\nManual Failover In some circumstances, it may be preferable for failover to only occur with manual intervention. In this situation, you will have a single route under the domain. To initiate a failover you’ll need to update the destination cluster/node.\nLogin to the Portal and select your domain. Click the link to the desired domain under the “Name” column. Scroll down to the “Virtual Networks” section and select the “Routes” tab. Find the route you wish to failover. Update the destination device. (e.g. in the below you would switch from edge to edge-dr). Click save. ","categories":["concepts"],"description":"","excerpt":" Routes configured under Domains determine to which node or cluster …","ref":"/docs/domain/virtual-networks/routes/","tags":["domain","concepts","rewrite"],"title":"Routes"},{"body":" An access policy is a list of rules that each allow, reject, or drop traffic at the VPN level.\nIf no rules are defined, traffic will not pass through the virtual network.\nA rule can match traffic based on the following fields:\nField Name Description Action Whether to ALLOW, DROP, or REJECT the traffic. Protocol You can choose ANY, UDP, ICMP, or TCP. Source The source of the traffic. You can select a network object, a network group, or provide a CIDR. Destination The destination of the traffic. You can select a network object, a network group, or provide a CIDR. Line Number Rules are evaluated starting with the lowest numbered rule. Once a rule matches, later rules are ignored even if they might also match the traffic. Port Range For TCP and UDP traffic, you can specify a port (e.g., 80) or a range (e.g., 8000-9000). Note that all specified fields must be matched for the rule to match.\n","categories":["concepts"],"description":"","excerpt":" An access policy is a list of rules that each allow, reject, or drop …","ref":"/docs/domain/virtual-networks/access-policy/","tags":["domain","concepts","rewrite"],"title":"Access Policy"},{"body":"Update Process DNS request for A record of repo.trustgrid.io The response will be IPs in the Trustgrid AWS networks, 35.171.100.16/28 (us-east-1) or 34.223.12.192/28 (us-west-2) The node will initiate a connection to port 443 on the ip address returned for repo.trustgrid.io The update process will download any updated packages using port Potential Issues Confirm connectivity on Port 443 Verify no DPI-SSL or HTTPS proxy is interfering with the SSL certificate for repo.trustgrid.io ","categories":"","description":"A step by step description of how a healthy node appliance upgrades.","excerpt":"A step by step description of how a healthy node appliance upgrades.","ref":"/help-center/kb/upgrade-process/","tags":"","title":"Node Upgrade Process"},{"body":"How a Node Appliance Upgrades The upgrade process will:\nUpgrade the Trustgrid application package. As part of this process the node will backup the current running version. Apply security updates to install operating system packages. Reboot the Trustgrid node appliance. For details on what this looks like from a network level see the Node Upgrade Process KB article.\nFrequently Asked Questions Is the upgrade disruptive? - Yes. While the appliance is upgrading services will remain available, though performance may be degraded. However, the reboot step will make all services unavailable until the appliance fully boots and starts the Trustgrid service. Typically this takes a few minutes depending on the underlying hardware. How long will the upgrade take? - This is highly variable but typically this takes between 10 minutes and an hour. Below are a list of things that influence how long the upgrade takes: Internet bandwidth - This determines how quickly the node can download the updates. Time since previous update - The longer a node goes without updating the more security packages are likely to be required. CPU and disk performance - The upgrade process involves significant CPU processing and to a lesser extent disk I/O. The upgrade process is single-threaded, so core speed is more important than number of cores. Best Practices Upgrade nodes regularly to ensure access to the latest features and security updates For clustered nodes: Upgrade the standby node Change the standby node to be the configured master/active and wait for it to claim this role. Upgrade the new standby node in the cluster Utilize an Alert Suppression Window to reduce the number of alarms generated if upgrading many nodes. Required Permissions In order to perform the below actions a user must have a policy applied with the following permissions to the nodes that will be upgraded.\n\"statements\": [ { \"effect\": \"allow\", \"actions\": [ \"nodes::read\", \"nodes::upgrade\", \"nodes::manage\", \"nodes::service:node-upgrade\", \"portal::access\" ] } ], The above is only a partial policy. Use the policy creator to define a complete policy Upgrading a Single Node Navigate to the node that will be upgraded. From the tool bar click the Upgrade button. Upgrade button When prompted enter the node’s name and click confirm. Node upgrade confirmation A dialogue will indicate the command was successfully sent. Node upgrade response Upgrading Multiple Nodes Navigate to the Nodes table. (Optional) Use the search box or apply a tag filter to filter the displayed nodes. Note: if you change the search or tag filter any selected nodes will be deselected. Use the check boxes to select the desired nodes. Nodes table From the actions dropdown select Upgrade. Action \u003e Upgrade When prompted, confirm you want to proceed with the bulk upgrade. Confirm bulk upgrade A table will be presented showing the status of each node upgrade request. Upgrade Operation Report Monitoring Upgrade Progress You can monitor the upgrade status from a node’s Info tab. Info tab, Upgrade in Progress There are two fields Field Name Description Upgrade Status Shows the most recent status of an upgrade operation on this node. Possibly values are:\nIn Progress Completed Failed Completion Time Shows a timestamp for the last time an upgrade operation completed. Note: if an upgrade is currently In Progress, then this will be the completion time of the prior upgrade operations Example of Completed upgrade status ","categories":"","description":"","excerpt":"How a Node Appliance Upgrades The upgrade process will:\nUpgrade the …","ref":"/tutorials/management-tasks/upgrade-nodes/","tags":"","title":"Upgrading Trustgrid Nodes"},{"body":" Be advised: Deleting a node is an irreversible action. Delete nodes only after you are certain it is no longer needed. Best Practices Disable the node(s) for several days prior to deleting. This way if it is discovered that it is still needed it is simple to re-enable. Update any status tag to indicate the node(s) is being decommissioned. Before deleting, remove any virtual network routes with the node as a destination. While these can be removed later, they will be easier to find while the node is still listed as the destination. Deleting Nodes If the node(s) is not already disabled, disable the node(s) See best practice above before proceeding If the node(s) is a member of a cluster, remove the node(s) from the cluster. Navigate to the Nodes table and select the target node(s). Optionally, Use the search to filter the displayed nodes. From the Actions menu select the Delete option. Delete node action If deleting a single node, you will be prompted to enter the name of the node about to be deleted to confirm. If deleting multiple nodes, you will be prompted to enter DELETE to confirm. ","categories":"","description":"Describes the process of deleting Trustgrid nodes along with best practices","excerpt":"Describes the process of deleting Trustgrid nodes along with best …","ref":"/tutorials/management-tasks/deleting-nodes/","tags":"","title":"Deleting Trustgrid Nodes"},{"body":" Be advised: Deleting a cluster is an irreversible action. Delete clusters only after you are certain they are no longer needed. Best Practices Remove all members for a period of time to ensure the configuration is no longer needed. Update any status tag to indicate the cluster(s) is being decommissioned. Before deleting, remove any virtual network routes with the cluster as a destination. While these can be removed later, they will be easier to find while the cluster is still listed as the destination. Deleting Clusters Remove the node(s) from the cluster and remove any virtual network routes with the cluster as a destination. See best practices above Navigate to the Cluster table and select the target cluster(s). Optionally, Use the search to filter the displayed clusters. From the Actions menu select the Delete option. Delete cluster action If deleting a single cluster, you will be prompted to enter the fully-qualified domain name (fqdn) of the cluster about to be deleted to confirm. If deleting multiple clusters, you will be prompted to enter DELETE to confirm. ","categories":"","description":"Describes the process of deleting Trustgrid Cluster along with best practices","excerpt":"Describes the process of deleting Trustgrid Cluster along with best …","ref":"/tutorials/management-tasks/deleting-clusters/","tags":"","title":"Deleting Trustgrid Clusters"},{"body":" Because changes to a domain virtual network affect all nodes, domain configuration changes must be reviewed before applied, and are applied all at once.\nAfter making changes to a virtual network, you can review outstanding changes. A list of changes will show who made each change, with a before/after table if appropriate.\nIndividual changes can be rejected by clicking the delete icon at the top.\nOnce changes are applied, outstanding changes will disappear from the review page, and nodes will receive the configuration updates.\n","categories":["concepts"],"description":"","excerpt":" Because changes to a domain virtual network affect all nodes, domain …","ref":"/docs/domain/virtual-networks/review-changes/","tags":["domain","concepts","rewrite"],"title":"Review Changes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/help-center/kb/","tags":"","title":"Knowledge Base"},{"body":" The sections below provide examples of how Trustgrid nodes can be deployed to provide WAN/ISP redundancy Behind Firewall/Router with Multiple ISP Connections In this configuration the Trustgrid WAN interfaces are behind a firewall or router that has two independent ISP connections to provide internet access.\nThe firewall or router is responsible for either failing over outbound traffic in the event of an ISP failure, or to route different nodes to utilize specific ISP connections.\nThe WAN interface of the Trustgrid node would utilize private IPs in this configuration that are NAT’d to public IPs by the firewall/router. This is the only configuration that:\nSupports Single Node deployments Supports Single Interface configurations This configuration is not recommended for nodes acting as gateways. In this configuration devices are NAT’d to a different public IP depending on which ISP is active. A gateway node can only announce a single IP or DNS address for its clients to connect to. It would be possible to announce a DNS record and some form of dynamic DNS health check to update the record if the ISP changed. But that change would have to propagate which could take some time. Single Node Behind Firewall This configuration shows a single node connected to a firewall or router that has two ISP connected to it.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c-.Optional.-\u003e intNet \u003c-.Optional.-\u003e snLAN subgraph sn [Single Node] snWAN[WAN\\nInterface] snLAN[LAN\\nInterface] snLAN ~~~ snWAN end firewall[\"Firewall/Router\"] dmzNet[[DMZ\\n Network]] firewall == Primary==\u003e ISP1([ISP 1]) firewall -. Failover/Backup .-\u003e ISP2([ISP 2]) snWAN --\u003e dmzNet --\u003e firewall classDef tgnode fill:#346ed9,color:white class sn tgnode Clustered Nodes Behind Firewall This configuration shows a cluster of Trustgrid nodes connected to a firewall or router that has two ISPs connected to it.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c-.Optional.-\u003e intNet \u003c-.Optional.-\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] cl1LAN ~~~ cl1WAN end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] cl2LAN ~~~ cl2WAN end end dmzNet[[DMZ\\n Network]] firewall[\"Firewall/Router\"] firewall == Primary==\u003e ISP1([ISP 1]) firewall -. Failover/Backup .-\u003e ISP2([ISP 2]) cl1WAN \u0026 cl2WAN --\u003e dmzNet --\u003e firewall classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 Cluster WAN Interface to Different Networks Another method of providing redundancy takes advantage of Trustgrid clustering by connecting each member of the cluster to a different ISP on their WAN interface. This could be done by:\nDirectly attaching each member WAN interface to a different ISP handoff Connecting each member WAN interface to different DMZ private networks configured to use different ISPs for internet access A combination of public and private WAN networks In this configuration, the master/active member of the node will determine which ISP is being utilized. If one ISP is preferred you will need to have operational procedures in place to ensure the member node connected to it stays the master node. It is recommended that you keep the cluster mode configured as Automatic Failback and your organization establishes a tag to designate the preferred member.\nBecause the WAN interfaces are on different networks, this configuration requires at least one additional LAN interface to be configured for accessing internal resources and providing the cluster heartbeat communication Cluster WAN Direct Connections to Multiple ISPs This configuration shows Cluster-Node1’s WAN interface directly connected to one ISP. And Cluster-Node2’s WAN interface is connected directly to another ISP.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c---\u003e intNet \u003c---\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] cl1LAN ~~~ cl1WAN end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] cl2LAN ~~~ cl2WAN end end cl1WAN ==\u003e ISP1([ISP 1]) cl2WAN ==\u003e ISP2([ISP 2]) classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 Cluster WAN to separate DMZ networks This configuration shows Cluster-Node1’s WAN interface is connected to one DMZ/private network that is behind a firewall connected to one ISP. And Cluster-Node2’s WAN interface is connected to a second DMZ network behind a separate firewall connected to a different ISP.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c---\u003e intNet \u003c---\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] cl1LAN ~~~ cl1WAN end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] cl2LAN ~~~ cl2WAN end end dmzNet1[[DMZ\\n Network 1]] dmzNet2[[DMZ\\n Network 2]] firewall1[\"Firewall/Router 1\"] firewall2[\"Firewall/Router 2\"] cl1WAN --\u003e dmzNet1 --\u003e firewall1 ==\u003e ISP1([ISP 1]) cl2WAN --\u003e dmzNet2 --\u003e firewall2 ==\u003e ISP2([ISP 2]) classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 Note: While shown with two separate firewall/routers, this could also be accomplished with a single firewall/router configured to route each DMZ network to a different ISP. Cluster WAN using mix of public and DMZ networks This configuration shows Cluster-Node1’s WAN interface is connected to a private DMZ network behind a firewall that is using ISP 1. Cluster-Node2’s WAN interface is connected directly to ISP 2.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c---\u003e intNet \u003c---\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] cl1LAN ~~~ cl1WAN end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] cl2LAN ~~~ cl2WAN end end dmzNet1[[DMZ\\n Network 1]] firewall1[\"Firewall/Router 1\"] cl1WAN --\u003e dmzNet1 --\u003e firewall1 ==\u003e ISP1([ISP 1]) cl2WAN ==\u003e ISP2([ISP 2]) classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 ","categories":"","description":"Shows different way Trustgrid nodes can utilize multiple WAN or ISP connections for redundancy","excerpt":"Shows different way Trustgrid nodes can utilize multiple WAN or ISP …","ref":"/help-center/kb/wan-redunancy/","tags":"","title":"WAN/ISP Redundancy Configurations"},{"body":"","categories":"","description":"Release notes related to the Trustgrid Control Plane Services\n","excerpt":"Release notes related to the Trustgrid Control Plane Services\n","ref":"/release-notes/cloud/","tags":"","title":"Control Plane Release Notes"},{"body":" Connect cloud applications to data in any environment Start Here Guides Deployments - deploy a node to your environment Reference An explanation of the building blocks and core concepts for building with Trustgrid.\nNodes - every device or service that connects to Trustgrid is a node Clusters - pair nodes together for HA Tools Swagger API Terraform Provider Status Page ","categories":"","description":"","excerpt":" Connect cloud applications to data in any environment Start Here …","ref":"/","tags":"","title":"Documentation"},{"body":"This minor release fixes the following issues:\nIssues Fixed The Overview graphs on a Node Detail page showing “invalid date” when you hover over a VPN data point. The Flow Logs Advanced Search did not display the correct flows when the “Newest First” flow log order was used. ","categories":"","description":"Minor release to resolve issues","excerpt":"Minor release to resolve issues","ref":"/release-notes/cloud/may-2023-2/","tags":"","title":"May 2023 Second Release Notes"},{"body":"Accessibility Improvements Prior to this release we used only the color red to indicate if the control or data plane was disconnected. We now use different icons to indicate there is an issue with connectivity.\nControl Plane Disconnected Control Plane Disconnect icon Data Plane Disconnected Data Plane Disconnected icon Change Audit Improvements Several improvements where made around our change auditing system including:\nTag changes are now audited. Change records can now be replicated into a customer’s AWS S3 bucket. This works much like the existing S3 Flow Log Export and requires the same bucket policy and versioning settings. To have this setup contact Trustgrid support. Changes to Container settings now include the name of the container instead of its unique ID. Changes to a policy will now show what resources are covered by the policy. Group deletion is now audited with name. Authentication records using a configured Identity Provider(IdP) now include the IdP used. The advanced search now allows you to select more object types. L4 Proxy UI Improvements This release also makes several improvements to the UI for configuring and managing our Layer 4 (L4) proxy Services and Connectors.\nThese improvement include:\nMore consistency in the names of fields between the add/edit prompt and the table listings. The addition of links to automatically test connectivity of a TCP service and sniff traffic for a connector listening port Removal of the Services Health Check feature. This attribute has been removed from the Add Service prompt and the Services table. Any service that previously had this set to Enabled will continue performing this health check until the service is updated. A future node release will stop performing the health check even if the service is still set to Enabled. Flow Log Advanced Search With this release you can now set the source or destination node to local for an Advanced Flow Log Search. This will cover flows that do not traverse the data plane, such as traffic that is forwarded between interfaces.\nFormatted Slack Alarm Events Previously when an event was forwarded to a Slack Channel it was sent as raw JSON that was difficult to read. There is now an option to format messages sent to Slack to be human readable. Checkbox to enable Slack formatting With this selected message will appear in Slack like the below example. Example formatted slack event WireGuard Tunnel Client Config This release adds an example WireGuard client configuration to both the add and update dialogues for WireGuard tunnel interfaces.\nExample auto-generated WireGuard client configuration ","categories":"","description":"May Release focusing on Audit and UI improvements, plus bug fixes","excerpt":"May Release focusing on Audit and UI improvements, plus bug fixes","ref":"/release-notes/cloud/may-2023/","tags":"","title":"May 2023 Release Notes"},{"body":" Guides are written to help users leverage Trustgrid in different use cases. Don’t see what you need? Let us know and we’ll add it to the list.\n","categories":"","description":"","excerpt":" Guides are written to help users leverage Trustgrid in different use …","ref":"/tutorials/","tags":"","title":"Guides"},{"body":" Get help with Trustgrid products and services.\n","categories":"","description":"","excerpt":" Get help with Trustgrid products and services.\n","ref":"/help-center/","tags":"","title":"Help Center"},{"body":"Issues Fixed This minor release fixes the following issues:\nNetwork Maps displayed peer nodes as disconnected New Orders could not be created if left open too long before the first save ","categories":"","description":"","excerpt":"Issues Fixed This minor release fixes the following issues:\nNetwork …","ref":"/release-notes/cloud/april-2023-2/","tags":"","title":"April 2023 Second Release Notes"},{"body":"Documentation Trustgrid is moving away from our documentation previously hosted on Confluence to docs-as-code system at https://docs.trustgrid.io. This should enable us to more tightly integrate the portal UI with related documentation.\nAs a start, we’ve created a link called Documentation under the Management section of the main navigation bar that will open the docs in a new tab.\nAdditionally, we’ve created a section for release notes that will allow you to monitor release for Control Plane and Node releases via RSS feeds going forward.\nSwagger API Documentation Move As part of this change we are moving our API documentation from https://portal.trustgrid.io/api-docs/ to https://docs.trustgrid.io/docs/api/. This will allow updating this documentation outside our normal release process.\nCluster Configuration Prior to this release it was necessary to navigate to each member node and configure the cluster heartbeat IP and port after it was added to the cluster. In this release a prompt has been added to the “Add Node” flow that will allow you to configure these settings as part of adding the node to the cluster.\nData Plane Stats This release further improves on our recent addition of data plane telemetry information.\nShow data plane telemetry for offline nodes Show data plane telemetry for connections between public and private gateways Virtual Network Route Table Virtual Network Route Tables can now be sorted by Destination, Destination CIDR or Metric. This can make it much easier to view and understand how routes are configured.\nVirtual Network Routes sorted by destination Container Import Disable Imported Containers Previously, if you imported a container from another node or cluster it was created in the Enabled state. If the container was configured to run as a service this would cause the container to start immediately. This could create issues if additional changes were desired before the container attempts to start, such as creating volumes or adjusting environment variables. With this release the container is imported in a Disabled state and will need to be enabled once you are ready to use the container.\nImport Container Volumes There is a new Action available under Container Management \u003e Volumes to Import. This will enable you to import configured volumes configured on another node or cluster. This will simplify configuring containers that require several volumes to be defined.\n(Note: Just like with container configuration import, the source must match the destination type. A node can import from another node and a cluster can import from another cluster)\nNote: Just like with container configuration import, the source must match the destination type. A node can import from another node and a cluster can import from another cluster Flow Logs Flow Log Ordering Our flow logs have historically been searched starting with the oldest in the time range first. This sometimes forced you to load more results multiple times to see the most current information. With this release we now can search either with oldest or newest first. By default the Flow Logs page will now show the last two hours with the most recent first.\nAdditionally, in the Advanced Search there is a new option to select the Flow Log Order depending on your needs.\nFlow Log Order selector Flow Log S3 Export Previously Trustgrid had a mechanism to export flow logs to an AWS S3 bucket on a nightly basis. This was determined to be insufficient for our customers who wanted closer to real-time access to this data. With this release Trustgrid can configur near real-time S3 to S3 replication with our new Flow Log Export system.\nFlow CSV Export Date Format Trustgrid has long supported the option to export your current view of the Flow Logs to a CSV file. However, the format of dates was difficult to parse using most spreadsheet applications. With this release both the start time and end time (if available) is reported in a human readable format like dd-mm-yyyy hh:mm:ss.000 and in Unix Timestamp Milliseconds (MS). This should make analysis of the records much easier and more precise.\nExample CSV export Upgrade Improvements Multi-Node Upgrades Upgrading multiple nodes used to require navigating to each node one at a time, clicking the upgrade button and then entering the node’s name. This prevented accidental upgrades but was difficult for managing large environments. With this release users with the nodes::service:node-upgrade and nodes::upgrade permissions will have the ability to select multiple nodes from the Nodes table and then select “Upgrade” from the “Actions” menu. Multi-Node Upgrade Action Upgrade Status Starting with the node release dated 1.5.20220412-1238 nodes began reporting their upgrade status (In Process, Complete, Failed) to the Trustgrid cloud. With this release this information and the date of the last change in status is displayed in the Info tab of nodes. Upgrade Status section Portal Access Permission With this release there is a new permission portal::access that controls if a user is allowed (or denied) to authenticate into the Trustgrid management portal. This permission was automatically added to all built-in Trustgrid Managed policies, but any custom defined policies that are intended to be used on their own will need to add this permission if management portal access is desired. Portal Access Permission The portal::access must be applied with Resource scope of * to be effective. If using resource scoped policies an additional policy will need to be created and attached to users to grant portal access. ","categories":"","description":"","excerpt":"Documentation Trustgrid is moving away from our documentation …","ref":"/release-notes/cloud/april-2023/","tags":"","title":"April 2023 Release Notes"},{"body":" An Access Policy is comprised of several rules that determine whether a user is permitted to access a ZTNA application. If no rule matches a user’s access attempt, the attempt will be denied.\nEach rule has three types of criteria:\nField Name Description Include criteria in this section are logically OR’d together. For a rule to apply to an access attempt, at least one of the include criteria must match. Exception criteria in this section are logically NOT’d. If any exception criterion matches, the rule will not apply to the access attempt. Require criteria in this section are logically AND’d. ALL of the require criteria must match for the rule to apply to the access attempt. Rules also have an action:\nAllow - if the rule matches, allow access Block - if the rule matches, block access Rules are evaluated in the order they are listed in the policy. Rules may be moved higher or lower in the list by clicking the up or down arrows next to the rule.\nCriteria Field Name Description Emails a list of email addresses, comma separated. Eg, “user1@company.com, user2@company.com” Country the user’s country, determined by their IP address Emails ending in a required email suffix, like “@company.com” Everyone this rule always matches IDP Groups a list of groups that the user must be a member of IP Ranges a list of IP ranges either in CIDR notation or a single IP address, comma separated. Eg, “10.10.44, 10.10.8.0/24” ","categories":"","description":"","excerpt":" An Access Policy is comprised of several rules that determine whether …","ref":"/docs/applications/access-policy/","tags":["applications","ztna"],"title":"Access Policy"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/applications/","tags":"","title":"applications"},{"body":" A RDP app is a ZTNA application that allows remote access to an internal RDP server. RDP servers can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type:\nlocal to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application\nDestination Node - only available if connectivity type is Remote Node. The edge node with access to the application\nVRF - only available if connectivity type is Remote Node. The VRF used to connect to the application.\nInternal server hostname or IP - the internal hostname or IP address of the RDP server and port number\nVirtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application\nClient Virtual IP - only available if connectivity type is Virtual Network -defaults to the virtual management IP of the ZTNA gateway if it exists. The source virtual IP address that will be used to connect to the application\nVirtual server hostname or IP - only available if connectifity type is Virtual Network. The destination virtual IP address and port number that will be used to connect to the application\nSecurity Identity Provider - the Identity Provider to authenticate users Click Add Application Click the Remote Desktop - RDP option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A RDP app is a ZTNA application that allows remote access to an …","ref":"/docs/applications/rdp-app/","tags":["applications","ztna"],"title":"RDP App"},{"body":" A SSH app is a ZTNA application that allows remote access to internal SSH servers. SSH servers can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type:\nlocal to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application\nDestination Node - only available if connectivity type is Remote Node. The edge node with access to the application\nVRF - only available if connectivity type is Remote Node. The VRF used to connect to the application.\nInternal server hostname or IP - the internal hostname or IP address of the SSH server and port number\nVirtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application\nClient Virtual IP - only available if connectivity type is Virtual Network -defaults to the virtual management IP of the ZTNA gateway if it exists. The source virtual IP address that will be used to connect to the application\nVirtual server hostname or IP - only available if connectifity type is Virtual Network. The destination virtual IP address and port number that will be used to connect to the application\nSecurity Identity Provider - the Identity Provider to authenticate users Click Add Application Click the Secure Shell option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A SSH app is a ZTNA application that allows remote access to internal …","ref":"/docs/applications/ssh-app/","tags":["applications","ztna"],"title":"SSH App"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":" Trusted links allow a user to allow-list only specific URLs when accessed through a ZTNA application. This allows a user to access any URL on the internet through a ZTNA application, but only if the URL is explicitly allowed by the application.\nThis can be used to permit readonly or certain operations remotely, but still require local access for more sensitive operations.\n","categories":"","description":"","excerpt":" Trusted links allow a user to allow-list only specific URLs when …","ref":"/docs/applications/web-app/trusted-links/","tags":["applications","ztna"],"title":"Trusted Links"},{"body":" Visibility groups determine what applications a user can see on their application dashboard. A user must be a member of at least one selected group to see an application.\n","categories":"","description":"","excerpt":" Visibility groups determine what applications a user can see on their …","ref":"/docs/applications/visibility/","tags":["applications","ztna"],"title":"Visibility"},{"body":" A Web App is a ZTNA application that allows remote access to internal web applications. Services such as Jenkins or JIRA can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Hostname hostname of the internal web application External Address the public URL users will use to access the application Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type: local to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application Destination Node - only available if connectivity type is Remote Node. The edge node with access to the application VRF - only available if connectivity type is Remote Node. The VRF used to connect to the application. Virtual server URL - the internal URL of the application Virtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application Client Virtual IP - only available if connectivity type is Virtual Network - defaults to the virtual management IP of the ZTNA gateway if it exists. The virtual IP address that will be used to connect to the application TLS verification none - no TLS verification is performed custom CA - Trustgrid will validate the application’s certificate against the provided CA default key store - Trustgrid will validate the application’s certificate against the default key store TLS Custom CA - only available if using Custom CA TLS verification. The CA certificate used to validate the application’s certificate Security Identity Provider - the Identity Provider to authenticate users User session duration - How long a user’s session will last before they are required to re-authenticate Trust Mode: Discovery - all URLs accessed through the application will be permitted and listed in the Trusted Links section Zero Trust - only URLs explicitly trusted by the application will be permitted Click Add Application Click the Web Application option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A Web App is a ZTNA application that allows remote access to internal …","ref":"/docs/applications/web-app/","tags":["applications","ztna"],"title":"Web App"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/ztna/","tags":"","title":"ztna"},{"body":" A VNC app is a ZTNA application that allows remote access to an internal VNC server. VNC servers can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type:\nlocal to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application\nDestination Node - only available if connectivity type is Remote Node. The edge node with access to the application\nVRF - only available if connectivity type is Remote Node. The VRF used to connect to the application.\nInternal server hostname or IP - the internal hostname or IP address of the VNC server and port number\nVirtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application\nClient Virtual IP - only available if connectivity type is Virtual Network -defaults to the virtual management IP of the ZTNA gateway if it exists. The source virtual IP address that will be used to connect to the application\nVirtual server hostname or IP - only available if connectifity type is Virtual Network. The destination virtual IP address and port number that will be used to connect to the application\nSecurity Identity Provider - the Identity Provider to authenticate users Click Add Application Click the Remote Desktop - VNC option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A VNC app is a ZTNA application that allows remote access to an …","ref":"/docs/applications/vnc-app/","tags":["applications","ztna"],"title":"VNC App"},{"body":"","categories":"","description":"","excerpt":"","ref":"/release-notes/cloud/archive/2022/","tags":"","title":"2022"},{"body":"","categories":"","description":"","excerpt":"","ref":"/release-notes/cloud/archive/","tags":"","title":"Cloud Release Archive"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/architecture/","tags":"","title":"architecture"},{"body":"To prevent unauthorized users from potentially compromising the control plane, Trustgrid has implemented a policy to approve customers’ staff for access to technical support services. Trustgrid will not refuse support completely in cases when unauthorized staff request it, but will limit the disclosure of confidential information and will refuse to make configuration changes without approval from an authorized support contact.\nAll staff who request support must have a portal login.\nTrustgrid support staff will not execute any change requested by staff that exceeds that staff members access to portal.\na. Monitor Access: Staff can alert of issues and request remote assistance but no change in the portal can be requested or made.\nb. Operator Access: Staff can alert of issues and request remote assistance but only changes limited to the Operator role can be requested.\nc. Administrator Access: Staff can request any system change.\n","categories":"","description":"","excerpt":"To prevent unauthorized users from potentially compromising the …","ref":"/help-center/request-support/","tags":"","title":"Authorization to Request Support"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"Concepts Trustgrid is a platform that provides secure, reliable and high-performance connectivity between distributed systems and applications. The platform is designed to simplify networking for distributed enterprises by providing a software-defined network (SDN) that operates as a virtual overlay on top of existing networks, enabling organizations to build and manage their own private networks.\nNodes The basic building block of a Trustgrid network is a node. Nodes are deployed on-premises or in your cloud provider and are connected to each other with TLS tunnels. Nodes can be deployed in a variety of ways, including as virtual machines, containers, or bare metal servers.\nNodes are used to enable connectivity and access for different use cases, including:\nZTNA applications, allowing fine-grained network control for access to business applications or servers VPN-like functionality, allowing network address translation (NAT) and routing between nodes Remote container execution, allowing an admin to deploy and manage containers in edge networks FTP (remote or in a data center) and other layer 4 protocols Clusters Nodes can be grouped into clusters to share configuration and provide high-availability.\nVirtual Networks Nodes can be attached to virtual networks, which provide a way to share network configuration like routes, NATs, and ACLs at scale.\nApplications Applications can be exposed through nodes or clusters. Access to an application can be restricted via access policies, for example to only allow users from a specific country.\nManagement All Trustgrid nodes are entirely managed through our control plane:\nSoftware updates are provided through our apt repository that ensures nodes have security updates available and only run with tested software permutations Network, node, user, and application configuration is managed through our web portal Configuration changes are broadcast to nodes as needed, for example when adding routes or adding a gateway to your network ","categories":"","description":"","excerpt":"Concepts Trustgrid is a platform that provides secure, reliable and …","ref":"/getting-started/","tags":"","title":"Getting Started"},{"body":"\nUser Management Groups defined can be used to make Remote Access applications visible to users.\nThere are two sources for Groups\nTrustgrid-native Groups These groups are created in the portal via the Add Group button. Users can be added to the group by:\nFrom the Groups page you can select the group, then click Add Member. From the user section, search for and add the email address of the desired user. Click Save and repeat process to add other users. Identity Provider-Synchronized Groups These groups are create based on Identity Provider (IdP) configuration for select IdPs (currently Gsuite and Azure OpenID). The IdP can be configured to sync all or select groups, and the sync process will update the group membership automatically.\nif users are added to an IdP-synced group in the Trustgrid portal they will automatically be removed the next time they sync runs.\n","categories":"","description":"","excerpt":"\nUser Management Groups defined can be used to make Remote Access …","ref":"/docs/user-management/groups/","tags":"","title":"Groups"},{"body":" Trustgrid delivers a software defined wide area network (SD-WAN) that enables connectivity between cloud environments, data centers, and edge or on-premise hosts. Our robust networking feature set provides layer 3 and layer 4 network overlays with cloud management tools.\nTypes of Connectivity Trustgrid establishes mutual TLS tunnels between nodes using mutual authentication. These tunnels between edge nodes and gateway nodes constitute the data plane of a Trustgrid network. Over this tunnel two distinct types of connectivity are supported, Layer 3 and Layer 4. Layer 3 supports routed traffic and Network Address Translation (NAT) to replicate traditional WAN connections. Trustgrid’s Layer 4 networking uses reverse proxies to map local IP-port number combinations to remote hosts. Each connectivity type has distinct advantages and may be used for either gateway nodes or edge nodes.\nLayer 3 Overview The Trustgrid VPN feature provides the capability to securely route IP packets between networks. In this configuration, Trustgrid nodes can operate as a distributed mesh virtual private network (VPN) that can allow applications to access remote data and services at layer 3 (L3) of the network OSI model. This is done by defining a virtual L3 network (similar to an Amazon VPC) and then selecting how edge node networks are exposed and translated into the the virtual address space.\nLayer 3 configuration is required for all Trustgrid networking deployments on the Gateway (data center / cloud) side. This allows the use of L3 or Layer 4 configurations for edge node deployments. Layer 3 connectivity enables easy support of many hosts at each side of the connection. This allows the replication of existing routes and subnets to minimize reconfiguration of any remote or local networks.\nLayer 3 edge configuration is ideal in situations where there is an incomplete understanding of all traffic (source and destination hosts/ports) as it supports more permissive ACLs. It is required when using stateful protocols (except FTP) and other protocols such as SIP.\nAll gateway nodes must be deployed using L3 networking in a two interface (management/data NIC) configuration.\nLayer 4 Overview Trustgrid Layer 4 (L4) is only supported in edge configurations. Layer 4 networking enables a reverse proxy connection between the Gateway Node IP address:port number that maps directly to an on-premise host:port. Specific network plug-ins support stateful features like FTP using L4 connectivity. With Trustgrid’s L4 networks there is no concern of overlapping local IP subnets on either end of the tunnel because Trustgrid proxies the traffic. The source of all TCP/UDP traffic is the edge node interface, not the originating host. This is transparent to the hosts on either side.\nLayer 4 connectivity offers slightly better performance than L3 in specific types of traffic and is ideal when there is a single or few remote/edge hosts that are being accessed with deterministic traffic. Layer 4 edge nodes are usually easier to deploy at an edge site as they can avoid the configuration of a virtual network overlay (NATs, ACLs, Routes, etc). Remote sites that desire to view the actual source of traffic should use Layer 3 for edge configurations as the source IP for all traffic in a Layer 4 connection is the edge node’s data IP address.\n","categories":["overview"],"description":"Trustgrid networking overview\n","excerpt":"Trustgrid networking overview\n","ref":"/getting-started/networking/","tags":["architecture"],"title":"Networking"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/overview/","tags":"","title":"overview"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/overview/","tags":"","title":"overview"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/security/","tags":"","title":"security"},{"body":" Trustgrid’s mission is to replace aging Edge connectivity solutions with innovative, software defined solutions that integrate security and compliance in a way impossible for legacy solutions, while improving efficiency in deployment and life-cycle management.\nAuthentication Pre-shared keys (PSK) are the most common method for authenticated connectivity and present significant risk when implemented poorly. Certificate based authentication is difficult and requires advanced skill sets. Trustgrid is the ‘root of trust’ in a Public Key Infrastructure (PKI) built by our security experts to enable automated certificate management across Trustgrid networks. All devices enroll in the PKI and are managed centrally from Trustgrid’s cloud infrastructure. Certificates are issued per device and are used to authenticate, and for encryption of all traffic.\nAuthorization Central to the security of the Trustgrid network is an authorization model derived from Google’s Beyond Corp (aka Zero Trust from Forrester) initiative. This places an implicit deny on all traffic that cannot be configured to allow all traffic. Many breaches have been caused by allowing all traffic to overcome the burden of proper security configuration.\nTrustgrid uses a token to authorize communication between Trustgrid nodes.\nTLS Encryption All data on Trustgrid is encrypted from node to node using next generation encryption – TLS Mutual Authentication. The Internet Engineering Task Force (IETF) recommends TLS as the replacement to IPSec VPN.\nAutomated Management Trustgird offers tools for automating software updates at scale. A significant difficulty in securing traditional VPNs is the application of patches and updates to hardware appliances. Many vendors own and maintain hundreds or thousands of these devices and are simply unable to efficiently patch them. This leaves significant security vulnerabilities unaddressed in customer and vendor data centers.\nPrivate Data Routing Trustgrid enables private data connections routed on infrastructure owned by each vendor, not through centralized, multi-tenant gateways that touch hundreds of vendors’ connections concurrently.\n","categories":"","description":"","excerpt":" Trustgrid’s mission is to replace aging Edge connectivity solutions …","ref":"/getting-started/security/","tags":"","title":"Security"},{"body":"Trustgrid support is available 24/7/365 with a commitment to respond to any Emergency Support request within 30 minutes.\nTo contact support: Email: support@trustgrid.io\nPhone: 888-308-8995 x2\nAuthorized Support Trustgrid can only provide support to customers with a Trustgrid Portal account commensurate with the account’s permission level in the portal. To receive support the user must be able to respond to an email at the account’s email address in the portal.\nEnable Support for Trustgrid Trustgrid customers can prohibit Support access to Nodes in the Portal. It may be required to enable this support to resolve certain issues.\n","categories":"","description":"","excerpt":"Trustgrid support is available 24/7/365 with a commitment to respond …","ref":"/help-center/submit-support-request/","tags":"","title":"Submit a Support Request"},{"body":" Changes to the following configurations are audited: API Cluster Node Domain Certificate Org Profile Invite Audits record the event type (add/remove/change), the user name, the IP address, and the date of the change Audits are kept for 30 days Audits can be downloaded as CSV on the operations page ","categories":"","description":"","excerpt":" Changes to the following configurations are audited: API Cluster Node …","ref":"/help-center/view-logs/config-changes/","tags":"","title":"View Configuration Changes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/help-center/view-logs/","tags":"","title":"View Logs"},{"body":" View node update events on the Operations page Node update events are kept for 30 days You can download a CSV of the node updates from the Operations page All Trustgrid node agent updates and OS package updates are logged ","categories":"","description":"","excerpt":" View node update events on the Operations page Node update events are …","ref":"/help-center/view-logs/node-update-events/","tags":"","title":"View Node Update Events"},{"body":" For every authentication event, we log: user agent user id user name IP address User authentication events include: Failed login attempts Successful login attempts API interactions Successful sign ups You can download all of the events for a 30 day period in the Operations page Authentication events are kept for 30 days If your organization is utilizing a third-party identity provider via SAML or OpenID, that provider is responsible for providing and storing authentication log records ","categories":"","description":"","excerpt":" For every authentication event, we log: user agent user id user name …","ref":"/help-center/view-logs/user-authentication/","tags":"","title":"View User Authentication Events"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/alarm-filters/","tags":"","title":"alarm filters"},{"body":" Alarm Filters are used to determine which events trigger notifications and to define which channels should receive those notifications.\nAlarm filters have the following fields:\nField Name Description Name The name should be unique. Description The description is displayed in the alarm filters table. Enabled An alarm filter must be enabled for matching event to be sent to the selected channel. Deselecting the check box can be handy if you wish to suppress a specific type of alarm. Channels This section determines which channels matching alarms will be sent to. Criteria The criteria determine which events will match the filter. These conditions can be set as:\nAll (default) - All specified criteria must be true to match. Equivalent to a boolean AND condition. Any - Only one criteria must be true to match. Equivalent to a boolean OR condition. None - The specified criteria must be false to match. Equivalent to a boolean NOT of the criteria ANDed together. Node Name The “Node Name” criteria llows you to select one or more specific node names. Note, even if the filter is set to All, the filter will match any of the selected node names is associated with the event. Event Type The “Event Type” criteria determines which events will match the filter. Note, even if the filter is set to All, the filter will match any of the selected event types. Tag Matches The “Tag Matches” criteria allows you to use tag name/value pairs to determine if the filter should match events. For examples, you may what production devices to send to a high priority channel such as PagerDuty or OpsGenie. If your nodes have a tag to indicating “prod_status=production”, you can select that name/value pair from the list to properly filter your alarms.\nSeverity Each event type has a severity level associated with it. This filter will match any event with the selected severity type or higher. This is the only mandatory criteria.\nThe severity levels are:\nINFO WARNING ERROR CRITICAL For example, if you select the severity level of WARNING the filter will match WARNING, ERROR and CRITICAL events.\nSome events have a corresponding event that will automatically resolve the alert in the portal and in some channels such as PagerDuty. The corresponding event may have a different severity level, so make sure you select the lower severity for the criteria. e.g. Node Disconnect is a WARNING but Node Connect which resolves it is only INFO. So you’d need to select both Event Types and set the severity to INFO.\nContains Text This field will accept any single string of text to match to the contents of an event. For example, if all your gateways include -gw in the name you could enter that without quotes in the field and it would match any event that includes that text in the event payload. This criteria can also be used if there is another aspect of the node included in the event payload that doesn’t match the criteria above. To see the entire payload of an event configure a less specific payload and send to an email channel to see the JSON.\nThe event payload includes the node’s unique identifier (UID) which is a string of generated text and numbers. If your “Contains Text” criteria is too short, there is a chance a node UID will also match unexpectedly.\n","categories":"","description":"","excerpt":" Alarm Filters are used to determine which events trigger …","ref":"/docs/alarms/alarm-filters/","tags":["alarms","alarm filters"],"title":"Alarm Filters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/alarms/","tags":"","title":"alarms"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/alert-suppression/","tags":"","title":"alert suppression"},{"body":" Maintenance and other planned disruptive activity can generate a large amount of alerts and notifications for no value. The Trustgrid system allows you to define alert suppression windows during which no alerts are triggered.\nDefine Alert Suppression Window Navigate to Alarms -\u003e Alert Suppression.\nEnter a message to users. During the window this will be displayed on the dashboard when users first log in.\nSelect a duration between 1 and 4 hours for your window. From the calendar select the date that you want the window to start. From the drop down, select the hour that you want the window to begin. This time will be set based off your browser’s current timezone setting. This uses the 24 hour clock (e.g. 0 = 12 am, 14 = 2pm, etc.) Click the Schedule button. You will see a notification that the window has been scheduled and a notice of when it will begin. To update a scheduled window, make the desired changes and click the Update button.\nCancel Alert Suppression Window Navigate to Alarms -\u003e Alert Suppression.\nYou should see a notification with the scheduled window at the top. Confirm this is the window you wish to cancel.\nClick the Cancel Schedule button.\nYou should be notified that the window has been canceled. Limitations Only a single window can be scheduled at any one time.\nSuppression windows apply to all devices across the entire organization.\n","categories":"","description":"","excerpt":" Maintenance and other planned disruptive activity can generate a …","ref":"/docs/alarms/alert-suppression/","tags":["alert suppression","alarms"],"title":"Alert Suppression"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/channels/","tags":"","title":"channels"},{"body":" A channel defines one or more method of delivering alert notifications to external systems.\nNotification Delivery Channels Email Channel One or more email address (comma separated) that will receive messages from alerts@trustgrid.io\nPagerDuty Channel Trustgrid will generate an incident via the PagerDuty API if provided a valid API routing key.\nOpsGenie Channel Trustgrid will generate an incident via the OpsGenie API if provided a valid API key with read and create and update permissions.\nFor both PagerDuty and OpsGenie the integration will automatically resolve issues if an event occurs that negates the initial triggering event. For example, if an event is triggered by a Node Disconnect and the node reconnects, the Node Connect event will resolve the incident via the API. Slack Channel Trustgrid can post the event data to a configured channel via a webhook.\nOptionally, you can configure the slack event to be posted with formatting to make it easier to read as opposed to raw JSON. Slack format option checkbox Microsoft Teams Channel Trustgrid can post event data to a configured Teams channel via an incoming webhook\nOnly a single Slack or Teams channel can be targeted by a Trustgrid channel definition. However, you can create multiple Trustgrid channels if you wish to post the event data to more than one Slack/Teams channel. Example Event Data The event data is delivered in JSON, as shown below, which depending on the integration can allow for additional parsing.\nExample Event JSON { \"nodeName\": \"edge1\", /* Name of the node that the event relates to */ \"expires\": 1604801325, /* Unix epoch timestamp when this event will expire and automatically resolve */ \"level\": \"INFO\", /* Alert severity */ \"eventType\": \"Node Disconnect\", /* Matches to the event types */ \"source\": \"EKG\", \"message\": \"Node disconnected\", \"type\": \"Alert\", \"orgId\": \"8e1c2c05-2c86-4b1b-a0cc-############\", \"GS1PK\": \"Org#8e1c2c05-2c86-4b1b-a0cc-############\", \"_ct\": {}, \"uid\": \"1jwV1R2R6itQUjPza9yqTE8a8zu\", \"GS1SK\": \"Alert#1jwV1R2R6itQUjPza9yqTE8a8zu\", \"_md\": {}, \"domain\": \"example.trustgrid.io\", \"SK\": \"Alert#Node Disconnect\", \"_tp\": \"Alert\", \"PK\": \"Node#0895b104-5434-447b-8577-############\", \"state\": \"UNKNOWN\", \"nodeId\": \"0895b104-5434-447b-8577-############\", \"timestamp\": 1604714923, /* Unix epoch timestamp when the event was first triggered */ \"channelID\": \"bc47ca84-1d04-454b-bedc-a55d1a917c0e\", /* The unique id of the channel used to deliver this message. */ \"notes\": [\"Text from Description Field\"], \"alarmIDs\": [ /* A list of alarm filters that matched the event */ \"be324011-4bea-4392-a06a-541646decd39\" ] } Example Formatted Slack Event Below is an example of a formatted Slack event. Example Slack Event ","categories":"","description":"","excerpt":" A channel defines one or more method of delivering alert …","ref":"/docs/alarms/channels/","tags":["alarms","channels"],"title":"Channels"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/cluster/","tags":"","title":"cluster"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/cluster-health/","tags":"","title":"cluster health"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/cluster-management/","tags":"","title":"cluster management"},{"body":" A healthy cluster should have two online Trustgrid nodes in a healthy state. The Trustgrid control plane can monitor the member nodes and generate events when their state changes such that the health of the cluster is impacted.\nBasics These events are based on the information reported by each member node to the control plane. Because of this:\nThere can be a delay between a change and the Cluster Site Health events. If member nodes have issues preventing control plane connections but not impacting data plane or other services the events may not accurately reflect the state of the cluster. Cluster Health State The Trustgrid will now display one of three states in the portal:\nState Meaning Healthy Both members are online with a single member active. Unhealthy There is at least one online and healthy member of the cluster with the active role AND one or more of these conditions is true:\nOne of the cluster members is offline, unhealthy or disabled There are two cluster members with the active role Offline Both nodes are offline, unhealthy or disabled.\n","categories":"","description":"","excerpt":" A healthy cluster should have two online Trustgrid nodes in a healthy …","ref":"/docs/clusters/cluster-health/","tags":["concepts","clusters","cluster health","cluster management"],"title":"Cluster Site Health State"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/clusters/","tags":"","title":"clusters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/concepts/","tags":"","title":"concepts"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/concepts/","tags":"","title":"concepts"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/domain/","tags":"","title":"domain"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/event-types/","tags":"","title":"event types"},{"body":" Filter Type Name Severity Message Description All Gateways Disconnected WARNING This event will be triggered if an edge node loses connectivity to all it’s available gateways. All Peers Disconnected WARNING This event will be triggered if a node is configured as a gateway an it lose connectivity to all it’s configured edge nodes. Certificate Expiring WARNING Alerts when a certificate uploaded via Portal → Certificates is about to expire in less than three months. Cluster Failover INFO Node is the active cluster member Sent by a node when it claims the active role. Cluster Failover Info Node is no longer the active cluster member Sent by a node when it releases the active role. Connection Flapping WARNING Alerts when a node disconnects and reconnects 10 times within 5 minutes. A follow up alert will be sent after each subsequent 120 disconnect/reconnects. Connection Flapping INFO This alert will be sent when a node’s “Connection Flapping” issue has been resolved. Connection Timeout ERROR Alerts when a node does not reconnect after a profile update has been pushed to the node. Data Plane Disruption WARNING This event will be triggered if a data plane tunnel is terminated unexpectedly. Date Plane Disruption WARNING Gateway nodename removed from the domain If a node acting as a gateway (public, private or hub) is disabled or the gateway service is disabled all other nodes in the domain will log this event. Gateway Connectivity Health Check CRITICAL Alerts when an edge node is unable to communicate with a gateway node. Gateway Connectivity Health Check INFO Alerts when an edge node reestablishes connectivity to a gateway node after a failure is reported. Gateway Ingress Limit Reached ERROR Alerts when a gateway node’s ingress limit is above 95 percent utilization for two minutes straight. Metric Threshold Violation ERROR Alerts when a node cpu, ram, disk, or latency configured metric threshold is violated. Metric Threshold Violation INFO Alerts when a previously reported threshold violation has been cleared. Network Error CRITICAL Stale ARP detected Alerts when a stale ARP entry is detected for a node’s cluster IP. Network Error WARNING Interface {OS interface name} is running with half-duplex Alerts if an interface has been detected running at half-duplex. This is almost always a result of a failure to auto-negotiate the speed/duplex and can result in poor performance. Node Connect INFO Alerts when a node connects to the control plane. Node Disconnect WARNING Alerts when a node disconnects from the control plane. Order Created INFO Alerts when a new provisioning order has been created. Order Commented INFO Alerts when a provisioning order case has been commented. Unauthorized IP WARNING Alerts when a node’s public IP has been locked but the connection to the control plane comes from a different IP. ","categories":"","description":"","excerpt":" Filter Type Name Severity Message Description All Gateways …","ref":"/docs/alarms/event-types/","tags":["event types","events","alarms"],"title":"Event Types"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/events/","tags":"","title":"events"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/help/","tags":"","title":"help"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/operations-runbook/","tags":["overview","help","troubleshoot"],"title":"Operations Runbook"},{"body":" Production status tags are used for for organizing large Trustgrid deployments.\nIt is recommended that customers use a tag to indicate if nodes are currently in production or not. For example, you may wish to have a tag such as prod_status with possible values like\ndeploying for devices still being deployed production for devices actively in user decommission for devices that are being removed It’s important to have these tag names and values be consistent within the organization including case. Production and production would be viewed as two different values, as an example. ","categories":"","description":"","excerpt":" Production status tags are used for for organizing large Trustgrid …","ref":"/docs/nodes/tags/prod-status-tag/","tags":"","title":"Production Status Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/rewrite/","tags":"","title":"rewrite"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/tag/","tags":"","title":"tag"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/troubleshoot/","tags":"","title":"troubleshoot"},{"body":" Virtual networks define an overlay network and routes for layer 3 connectivity. Trustgrid nodes are then assigned to networks. Virtual network overlays work similarly to Amazon’s VPCs but can span between clouds, data centers, and the edge.\nVirtual Networks Concepts Overlay Example Virtual Networks - Layer 3 Trustgrid uses a virtual network to traffic between nodes. This avoids common challenges like conflicting subnets in large, non-centralized networks.\nInside and outside NATs are used to expose hosts for traffic\nRoutes may be configured on the nodes\nACLs can be applied\nSimple Host Communication An inside Nat on the edge node that maps 10.0.5.250 to 172.16.3.250 would allow the data center host (10.0.1.150) to communicate with 172.16.3.250 host using the address 10.0.5.250\nAn outside Nat on the edge node that maps 10.0.1.150 to 10.0.5.150 would allow the edge host (172.16.3.250) to communicate the data center host at 10.0.5.150.\nA route would have to be added to the default gateway of 172.16.3.0/24 for 10.0.5.150 to route traffic for 10.0.5.0/24 through the gw of the edge node (172.16.0.5) data interface.\nVirtual IP Addresses Through the use of inside and outside NAT rules, local IP addresses to the Trustgrid node may be exposed on the network through a Virtual IP Address. For instance, a local device may have a local IP address of 192.168.1.100, but you may want it to appear to other devices or applications on the virtual network as IP address 10.0.20.100. Virtual IP Subnets are also supported where each IP in a subnet is mapped to the corresponding IP in a virtual subnet.\nInside NAT Inside NATs are added to a network to expose hosts in the private network to authorized traffic in the virtual network. For example a host at 192.168.1.184/32 could be exposed as 172.16.1.184/32. Traffic from authorized edge nodes could then communicate with 172.16.1.184.\nOutside NAT The use of an outside NAT can eliminate the need to create routes on internal gateways. Outsides NATs translate address in edge (remote) private networks to a privately addressable local IP. For example a host at 172.16.10.184/32 could be translated to 192.168.1.184/32.\nRoutes Routes are used to specify the network interface to be used when accessing specific subnets.\nVirtual Network Attributes Field Name Description Name A unique name for the network. Can contain letters, numbers and - characters. Network CIDR Network CIDR that includes all desired virtual IP addresses.\nVirtual network defined routes can only point to destination CIDRs within this Network CIDR. This restriction can be overridden by defining routes at the node or cluster VPN \u003e Static routes level. Description A user friendly description of the virtual network NO-NAT Mode Enabled - Nodes attached to the this virtual network will not require traffic match defined inside and outside NATs to allow traffic to ingress from or egress to the local network. Disabled (default) - Nodes attached to this virtual network will require traffic match defined inside and outside NATs to allow traffic to ingress from or egress to the local network. Or, will require the traffic matching mode be set to allow either Inbound or Outbound traffic that does not match. ","categories":["concepts"],"description":"","excerpt":" Virtual networks define an overlay network and routes for layer 3 …","ref":"/docs/domain/virtual-networks/","tags":["domain","concepts","rewrite"],"title":"Virtual Networks"},{"body":" Events are emitted from nodes and from the Trustgrid control plane when actionable things happen. Events are the basis for alarms and notifications.\nEvents can be viewed for individual nodes by navigating to Events under the History section.\nEvents for the entire organization can be viewed by navigating to Events under the Alarms section.\nClicking the Test button will send the event through your configured alarms to help verify channels are configured as expected.\nEvent Times Field Name Description Generated Time The time the event was created. Received Time The time the event was received by the control plane. This can be later than the generated time in the event of a network disruption, for eample. ","categories":"","description":"","excerpt":" Events are emitted from nodes and from the Trustgrid control plane …","ref":"/docs/alarms/events/","tags":["events","alarms"],"title":"Events"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/node/","tags":"","title":"node"},{"body":"","categories":"","description":"","excerpt":"","ref":"/release-notes/cloud/archive/2021/","tags":"","title":"2021"},{"body":"Generating an API Key Navigate to User Management -\u003e API Access, and click Regenerate API keys. This will invalidate your existing API key, if it exists. The API key is tied to your user and will have the same permissions.\nThe client secret key will only be available at time of generation - if it’s lost, the key will need to be regenerated\nUsing the API Key To use the API key in a request, pass it in as an HTTP header, like Authorization: trustgrid-token client-id:client-secret Anything that can be done in the Trustgrid Portal can be done with the API (except for generating an API token).\nTo query the API for all nodes, for example, you could run:\ncurl -H “Authorization: trustgrid-token YOUR-CLIENT-ID:YOUR-CLIENT-SECRET” https://api.trustgrid.io/node\nIn the API documentation, clicking Authorize at the top right will prompt for the API header.\n","categories":"","description":"","excerpt":"Generating an API Key Navigate to User Management -\u003e API Access, and …","ref":"/docs/user-management/api-access/","tags":"","title":"API Access"},{"body":" Trustgrid records information for authentication attempts into the control plane. This information can be used to troubleshoot authentication issues, or to monitor for suspicious activity.\nAuthentication audits are available by navigating to Operations-\u003eAuthentication Audits. Only the most recent 25 records are shown, but the last 30 days of audits can be downloaded by clicking the link at the bottom of the page.\nSuccessful logins from external identity providers are logged, but failed attempts are not. Check your IDP’s documentation for information on how to view those. ","categories":"","description":"","excerpt":" Trustgrid records information for authentication attempts into the …","ref":"/docs/operations/authentication/","tags":"","title":"Authentication Audits"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/aws/","tags":"","title":"aws"},{"body":" Create EC2 Target Group and add both Trustgrid gateways with the target being wireguard server port (Default UDP 51820) The health check should be set to http with a path of /status and override traffic port to be port 80.\nOnly the active member of the Trustgrid Cluster will respond as healthy to the health check.\nCreate NLB (Network Load Balancer) with listener set to configured UDP wireguard server port (Default 51820) and forwarding to the target group created above. The load balancer should be created as internet facing IPV4 and mapped to the Public facing subnets of the Trustgrid gateways. ","categories":"","description":"","excerpt":" Create EC2 Target Group and add both Trustgrid gateways with the …","ref":"/tutorials/deployments/aws-ha-cluster/","tags":"","title":"AWS Requirements for HA Wireguard Cluster"},{"body":" Create EC2 target group and add both Trustgrid application gateways with the target being TCP port 80. The health check should be for http and the path should be /status\nOnly the active member of the Trustgrid Cluster will respond as healthy to this check.\nCreate an ALB (Application Load Balancer) with the listener set to HTTPS and forwarding to the target group created above. Under secure listener settings apply the SSL Certificate provided by Trustgrid for the application gateways. ELBSecurityPolicy-2016-08 is recommended as the default security policy by AWS. The load balancer should be created as internet facing IPV4 and mapped to the Public facing subnets of the Trustgrid gateways.\n","categories":"","description":"","excerpt":" Create EC2 target group and add both Trustgrid application gateways …","ref":"/tutorials/deployments/aws-ha-ztna-gateway-cluster/","tags":"","title":"AWS Requirements for HA ZTNA Gateway Cluster"},{"body":"Setup Setting up the Azure AD integration requires the configuration of an Azure App registration. See Azure App registration configuration.\nField Name Description Issuer Specifies the Azure App OpenID metadata endpoint. Client ID Specifies the Azure App client ID. Secret Specifies the Azure App secret. Before being able to save the configuration, validation of the Issuer needs to be performed by pressing the Test button. Once the validation has been performed and the configuration saved, the sync section will be available.\nSync all users - Syncs all available users along with all the groups associated to the users. Sync users from specific groups - Syncs all users from the selected groups. At any given point the sync selection can be changed and saved, and the sync will automatically start. Azure App registration configuration The following information is only partial Azure AD reference for configuring an App registration via the Microsoft Azure Portal. Information presented in the following images might have changed. Create a new App Registration Once you’ve registered your application you need to make a note of the Application Client ID and Metadata endpoint that provides the Open ID metadata. You can find it by click on Endpoints at the top of the application. The Application Client ID will be used for the Client ID configuration parameter of the Identity Provider in Trustgrid Portal. The metadata endpoint goes in the Issuer configuration parameter of the Identity Provider in Trustgrid Portal. It should be something like https://login.microsoftonline.com/\u003capp_id\u003e/v2.0 Ignore what comes after the /.well-known part. Configure the Authentication piece of the Azure app Add a platform by selecting the “Web” type and add the corresponding redirect uri and logout url, and select both Access Tokens and ID tokens checkboxes. Field Name Description Trustgrid Redirect URL https://id.trustgrid.io/auth/openid/callback Trustgrid Logout URL https://id.trustgrid.io/logout You need to create a secret for the authentication piece. You can select the expiration to be any of the selections. Once you create the secret make sure to make a note of the “value” since that piece of information is what is going to be used under the Secret configuration parameter of the Identity Provider in Trustgrid Portal. Once you’ve created the client secret, navigate to “Token Configuration” and add the “email” optional claim ","categories":["idps"],"description":"","excerpt":"Setup Setting up the Azure AD integration requires the configuration …","ref":"/docs/idps/azure-idp-fields/","tags":"","title":"Azure AD"},{"body":"Currently changing password requires users to:\nLog out of the portal If needed, select Not your account?. If yoou don’t see this option, ignore this step. On the login page select Don't remember your password? Enter your email in the provided text box and click Send Email to reset your password You should see a notification that the email was sent on the login page. In the email, you should see information like the image below. If you still wish to reset your password, click Confirm. After clicking Confirm you will be taken to a page where you can enter your new desired password. After you finalise it by clicking Reset Password, you will be able to log in with your new password. ","categories":"","description":"","excerpt":"Currently changing password requires users to:\nLog out of the portal …","ref":"/docs/user-management/users/auth0-change-password/","tags":"","title":"Changing Password Process with Auth0"},{"body":" The WAN interface of a Trustgrid node is used to build connections to both the Control Plane and any Data Plane connectivity. Any change to this IP address is disruptive and presents a risk that the device will go offline if incorrect information is provided. This could potentially require a technical resource to go onsite to reconnect physical devices.\nTo make the below changes via the Trustgrid portal the user must have the Node Administrator or Administrator role. The node must also be connected to the Trustgrid Control Plane to make this change via the portal. The document details the process of updating the ETH0 - WAN Interface IP via the Trustgrid portal. This change can also be performed via the Trustgrid LocalUI .\nNetwork Adapter 1 - WAN IP Change - Try Method Nodes must be running version 20200331 or newer to use the Try method Trustgrid nodes have the ability to test a new IP configuration before permanently applying the configuration to the device. The process works like this:\nThe user will enter the new IP configuration into the portal and click Try\nThe user will select the duration to try the new configuration (10, 30 or 60 minutes)\na. If the device successfully reconnects to the control plane after the select time the user will have the option of importing and saving this new configuration permanently, or reverting to the previous configuration.\nb. If the device does not reconnect within the chosen duration, the device will automatically revert to its previous IP address configuration.\nThe device will revert to the original IP if it is rebooted or power cycled after initiating the “try” option and before importing and saving those changes in the portal.\nChanging Network Adapter 1 - WAN via Try - Detail Process Login to the portal and navigate to the Node that you wish to reconfigure.\nConfirm the node is actively connected to the cloud\nNote: If the device is not online when the below IP change is made it cannot pull this config from the device. Until it reconnects to the cloud it will continue using the original IP address.\na. First confirm there is a green dot next to the node name\nb. Confirm that you can open an interactive tool such as Terminal or Sniff Interface traffic. Leave this tool open so you know it when the device\nNavigate to the Configuration \u003e Network section and confirm Network Adapter 1 - WAN Interface is selected.\nSet the IP settings to the desired new configuration a. Not that the IP adress and the subnet mask are to be entered in CIDR notation SCroll down and select Try Select the duration of time the device should be allowed to be disconnected before reverting to the prior IP configuration and click Confirm The below warning will be presented for confirmation. You will need to type in the word ‘yes’ to confirm. At this point the device will apply the new IP address and attempt to reconnect.\na. If the device cannot connect for the chosen duration the settings will revert to the original IP settings.\nb. If the device successfully reconnects you will be presented with the below options. You may need to refresh the page to see these options.\ni. Import - This option will update the portal to show the new IP address information. ii. Revert - This option will revert the portal to show the original IP address information. c. Select the desired option and then scroll down and select Save. Again you will be prompted to confirm the change.\nNetwork Adapter 1 - WAN IP Change - Save Method This process is very similar to the above with the exception that the change is permanent. The device will continue to use the configured IP address until either:\nThe device connects to the cloud using the newly saved IP, at which point this process or the above Try method can be used to reconfigure the IP remotely\nThe device is reconfigured locally using either the Trustgrid Local UI or console (contact Trustgrid Support)\nChanging Network Adapter 1 - WAN via Try - Detail Process Login to the portal and navigate to the Node that you wish to reconfigure.\nConfirm the node is actively connected to the cloud\nNote: If the device is not online when the below IP change is made it cannot pull this config from the device. Until it reconnects to the cloud it will continue using the original IP address.\na. First confirm there is a green dot next to the node name b. Confirm that you can open an interactive tool such as Terminal or Sniff Interface traffic. Leave this tool open so you know it when the device Navigate to Configuration -\u003e Network section and confirm Network Adapter 1 - WAN Interface is selected. Set the IP settings to the desired new configuration a. Note that the IP address and subnet mask are to be entered in CIDR notation. After setting the IP address click Save\nYou’ll be presented with a warning like the below. Type ‘yes’ and click Confirm.\nThe device will be notified it has an updated configuration. It will pull this configuration down and automatically restart the Trustgrid service using the new IP address.\na. The restart usually takes less than a minute.\nb. What ever interactive service you were using (Terminal, etc) should disconnect.\nAfter the local site networking is updated (either physically by moving a cable, or logically by updating the connected switch port config) so that the new IP address can connect the device should come back online.\nAddition Post-IP Change Verification After the WAN IP has been changed there are a few areas where the WAN interface IP may have been used:\nGateway Nodes If the Trustgrid node is acting as either a public or private gateway, you may also need to update the Public IP field under System -\u003e Gateway -\u003e Server Settings. If your gateway is using DNS instead you will need to update that DNS record accordingly.\nClustered Nodes If the Trustgrid node is clustered and the WAN interface IP was being used for the cluster heartbeat you will need to adjust the IP address it is listening.\nThe heartbeat IP and port is visible under System -\u003e Cluster of each cluster member’s node detail page.\nIf the Host field is using the old WAN interface IP address, change it to the new IP and click Save.\nIf the nodes has two or more interfaces, it is typical that those LAN interface IPs will be used for the cluster heartbeat. In that case no change is required on this page.\n","categories":"","description":"","excerpt":" The WAN interface of a Trustgrid node is used to build connections to …","ref":"/tutorials/wan-interface-ip/","tags":"","title":"Changing the WAN Interface IP"},{"body":"View the status of all Trustgrid services on our Statuspage Account\nWithin the Trustgrid Portal, hover over the username in the upper right corner and then select Status.\n","categories":"","description":"","excerpt":"View the status of all Trustgrid services on our Statuspage Account …","ref":"/help-center/trustgrid-service-status/","tags":"","title":"Check Trustgrid Services Status"},{"body":" When the active (master) member of the cluster goes unhealthy the standby member will take over the active role. This process should be automatic and not require manual intervention. However, in certain circumstances, such as the unexpected failover of a public gateway, it is worth investigating to confirm traffic is in a healthy state.\nPossible Messages Master role assumed - failover\nIndicates the master role has moved from the designated master (primary) to the backup/secondary node Master role reclaimed by expected master\nIndicates the master role has returned to the designated master Failover Process Below is a brief description events that occur during a failover process:\nThe node assuming the master role will ARP to the network that it now owns the Cluster Virtual IP (VIP)\nThe Domain route table will update that the assuming node should receive all traffic for the cluster (clustername-master)\nThe assuming node will load all NAT entries associated with the cluster\nResponse Process After a failover or failback it is necessary to verify that traffic is flowing appropriately.\nLogin to the portal and navigate to the affected cluster’s page\nVerify that only a single node shows as master\nOn the Configuration → Network tab note the cluster VIP\nClick on the indicated current master\na. Verify the VPN Route Table shows\ni. Navigate to the `Configuration` → `VPN` tab ii. Launch the \"View Virtual Route Table\" tool iii. Verify that routes show as “available true” 1. If the cluster is a gateway cluster there may be many routes and not all be active, just confirm many show as available. 2. The route to the management VIP for the other node in the cluster will always be false. b. Verify traffic is flowing through the appropriate node.\ni. Navigate to the `Configuration` → `Network` tab ii. Confirm the interface associated with the Cluster VIP is selected 3. For single interface nodes: ETH0 / Network Adapter 1 - WAN Adapter 4. For dual interface nodes: ETH1 / Network Adapter 2 - LAN Adapter iii. Open the `Sniff Interface Traffic` tool. 5. Set the filter to “host clusterVIP” without quotes and replacing clusterVIP with the appropriate Cluster virtual IP. Click `start session`. 6. Confirm that you see traffic flowing through the interface. **Continue monitoring for several minutes to confirm the traffic is maintained.** 7. Leave the Sniff Interface Tool running while completing the next step iv. Repeat steps i-iii on the node that **is not** currently indicated as the master. 1.You want to verify there is **no traffic for the cluster VIP running through the non-master node**. 8. You may see a periodic ARP from the cluster master, but that should be it. Compare traffic volume before and after the failover\na. If the event was a failover and failback compare traffic from the current master\nb. If the event was a failover but has not failed back you will need to compare traffic volume on the current master to the volume on the previous master\ni. e.g if traffic failed from node1 to node2, compare node1’s traffic prior to the failover to the volume of traffic on node2 after the failover ","categories":"","description":"","excerpt":" When the active (master) member of the cluster goes unhealthy the …","ref":"/tutorials/operations-runbook/cluster-failover-response/","tags":["cluster","help","troubleshoot"],"title":"Cluster Failover Response"},{"body":" Trustgrid records information about changes users make to all configuration. This can be helpful when troubleshooting recent changes.\nChanges can be viewed for a specific node and for the entire organization. To view changes for a specific node, navigate to a node and select Changes under the History section. To view changes for the entire organization, navigate to Operations-\u003eChanges.\nThe following information is shown for each change:\nField Name Description Date When the change was made IP The IP address from which the change originated Event The type of change (delete/create/change/action). Note that for some entities where the entire entity is re-sent to the API, a change may show create instead of change. Details Information about the change. Typically will include the item’s ID and a brief summary of the changes made. User Name The user who made the change Item Type The type of item changed Viewing configuration changes requires audits::read:config permissions.\nConfiguration changes are stored for 90 days. The last 90 days’ worth of changes can be downloaded as a CSV by clicking the link at the bottom of the page.\nSearching for Changes The Advanced Search button allows you to search for changes by date, user, IP address, and event type. The search is case-sensitive.\n","categories":"","description":"","excerpt":" Trustgrid records information about changes users make to all …","ref":"/docs/operations/changes/","tags":"","title":"Configuration Changes"},{"body":"FTPS \u0026 FTPS Using Layer 3 FTP \u0026 FTPS are supported in passive mode when using layer 3. This configuration requires the FTP server to be configured with the external IP address in the passive settings set to the Trustgrid virtual IP that corresponds to the FTP server.\nFileZilla passive mode settings:\nFTP Using Layer 4 FTP is supported in passive mode when using L4 Proxy, however FTPS is not. To configure FTP access through L4 Proxy, the Outbound L4 Service and/or L4 Connector need to be configured with FTP set as the protocol as shown below:\n","categories":"","description":"","excerpt":"FTPS \u0026 FTPS Using Layer 3 FTP \u0026 FTPS are supported in passive mode …","ref":"/tutorials/ftp-and-ftps/","tags":"","title":"Configure FTP and FTPS"},{"body":" Deploy a pair of Trustgrid gateways. Deployment guide includes an example Cloud Formation template that can be used directly or customized for your environment or converted to Terraform if preferred. Gateways can be deployed in the same availability zone or different ones to provide greater redundancy across AWS. Deploy a Trustgrid Node AMI in AWS.\nUnder networking \u003e clusters create a cluster using a descriptive and unique name as seen below. Select the cluster that was created and add both gateways to it using the actions drop down button as seen below. Configure the cluster heartbeat on each individual gateway node. This is located under system \u003e cluster. The host should be the gateway interface on which you want to configure the heartbeat. This can be either the WAN facing or LAN facing interface. You can see what IP is configured from the node page under interfaces. The port defaults to TCP 9000 but can be any unused TCP port if desired. Security groups for both gateways will need to allow this communication in both directions. Both gateways send a heartbeat to each other on the configured IP and Port to determine if the other member is healthy. If the secondary is not able to get a response from the primary then it will become the active member of the cluster. Once this has been configured both nodes should show as green and healthy in the cluster as seen below. If deploying gateways in different availability zones then LAN interface routes will need to be added to the cluster for both gateway LAN subnets as seen below. This is to ensure the heartbeat communication is routed over the correct interface instead of going out the WAN interface. Under the cluster \u003e interfaces \u003e eth1 LAN \u003e AWS Route Table Entries add the appropriate CIDR for the edge IP space. This should be the subnet that includes all virtual network IP space configured for edge node sites. For example if you have 100 different edge node sites carved out of 172.16.0.0/16 then you would just add this one CIDR. Once this has been added the route should be created in the routing table that is associated to the gateways LAN interface pointing to the ENI of the active member of the cluster.\nThere is an IAM profile that should have been associated to each gateway outlined in the deployment guide providing them permissions to manage the routes defined in the AWS Route Table Entries. When a failover event occurs an API Call is made to update the route to point to the ENI of the active member of the cluster.\nThis concludes the cluster configuration specifics for AWS deployment. Appropriate VPN configuration will need to be applied in order for traffic to pass end to end between the gateways and edge node sites.\n","categories":"","description":"","excerpt":" Deploy a pair of Trustgrid gateways. Deployment guide includes an …","ref":"/tutorials/deployments/configure-ha-gateway-cluster-in-aws/","tags":["aws"],"title":"Configure HA Trustgrid Gateway Cluster in AWS"},{"body":"The VPN feature enables routing of IP packets by utilizing a virtual IP space that is configured on the nodes. In this configuration, the node can be used as the next hop for route destined for the virtual IP space, or the node can be used as the default gateway for a network. The virtual IP space is used as a transit network with NAT being utilized to translate IP addresses on to/from the virtual IP space on either side. It is also possible to preserve the original source and destination by having the virtual IP space be identical to the LAN network.\nThe Trustgrid VPN feature provides the capability to securely route IP packets between remote networks. In this configuration, Trustgrid nodes can operate as a distributed mesh virtual private network (VPN) that can allow applications to access remote data and services at layer 3 (L3) of the network OSI model. This is done by defining a virtual L3 network (similar to an Amazon VPC) and then selecting how local node networks are exposed and translated into the the virtual address space.\nThe following steps illustrate how to configure the Trustgrid VPN feature and will need to be configured on all nodes/clusters that need to communicate across the virtual network.\nCreate the Virtual Network Under Domains -\u003e Domain -\u003e Virtual Networks create the Virtual Network. All gateway/edge nodes deployed and attached to this virtual network will need to be assigned a subnet out of this IP space. It is important to ensure the CIDR created is large enough to encompass all future node deployments. In this example the entire IPV4 space is being used. This IP space is only applicable to the individual virtual network therefore if there are multiple virtual networks there is no overlap or conflict in IP space allocation. Create Routes for the desired Virtual CIDR with the destination being either a single node or a cluster if an HA deployment. Create the appropriate ACL’s if desired for only allowing specific traffic to pass. An ACL is required for any traffic to pass as it is a zero trust model. If traffic is already filtered before reaching the Trustgrid nodes then at minimum an Any:Any rule will need to be created as seen below. Attach Virtual Network to Node / Cluster Select the node or cluster and under vpn attach the virtual network. Define the validation CIDR which should match the route created. NAT rules can only be created within this CIDR. Select the appropriate interface to attach the virtual network to. This can be a physical interface or a virtual vlan interface and should be whichever interface clients will be using as the next hop to reach the remote networks. Configure the appropriate Inside and Outside NATs and then save the configuration. NATs explained in further detail below. Inside NAT: An inside NAT defines how a local device IP address translates into a virtual network address. For instance, a local device may have a local IP address of 192.168.1.100, but you may want it to appear to other devices or applications on the virtual network as IP address 10.0.20.100. Or you may want an entire block of local IP addresses to show up on the virtual network as a different block. You can do this translation via Inside NATs. Inside NAT’s also control what local devices can participate on the virtual network. If a local device does not have an inside NAT configured that includes its IP address, it can’t access or be accessed by other devices on the network. To add an inside NAT you must enter the following information:\nLocal CIDR - The local IP address or address block that should be mapped into the virtual network. It should be entered in CIDR block format (eg - 192.168.100.0/24 or 192.168.100.51/32).\nVirtual CIDR - The network IP address or addresses that the local IP addresses should be mapped to, also entered in CIDR block format.\nNote that network addresses map 1x1 with local addresses, so the prefix length (the /xx number of the CIDR) should be the same in both the local and network CIDR blocks of the inside NAT entry.\nOutside NAT: By default, when a device on the local network of a node receives traffic from a remote device on the network, the remote device IP address will be the IP address that was entered in the local CIDR block for the remote node’s inside NAT entry for the remote device. For instance, if the remote device was mapped to network address 10.0.100.1, then its traffic on the local network will appear to come from IP address 10.0.100.1. However due to the local network configuration, there may be some situations where it is desirable to translate remote network addresses before egressing onto the local network. For instance on a local network of 192.168.0.0/16, a user may want the remote devices virtual network IP of 10.0.100.1 to be translated to 192.168.50.5 so that it fits better into the local network setup. This kind of translation can be achieved by adding outside nats. To add an outside NAT you must enter the following information:\nNetwork Group - The network IP address or addresses that should be translated before egressing onto the local network. This should be entered in CIDR block format.\nLocal CIDR - The local IP address or addresses that the network addresses should be mapped to, also entered in CIDR format.\nNote there are situations where it may be desirable to make multiple remote devices masquerade as one local IP address though the use of port address translation (PAT). This can be achieved by defining an outside nat in which the network CIDR contains a larger address space than the local CIDR. For instance, an entry with network CIDR 10.0.1.0/24 and local CIDR 192.168.100.10 would make all remote devices with network IP addresses in 10.0.1.0/24 appear as IP address 192.168.100.10 on the local network.\n","categories":"","description":"","excerpt":"The VPN feature enables routing of IP packets by utilizing a virtual …","ref":"/tutorials/config-l3-vpn/","tags":"","title":"Configure Layer 3 VPN"},{"body":"This describes the process of deploying a WireGuard client which will act as a Trustgrid Edge node connecting to a Trustgrid gateway routing traffic for clients connecting via the WireGuard service. This process describes how to configure it using an Ubuntu Linux server.\nDeploy Wireguard Service: https://linuxize.com/post/how-to-set-up-wireguard-vpn-on-ubuntu-18-04/\nBelow is an example wireguard interface config for wg0. Per the above article, iptables rules need to be added to source nat the traffic to the wireguard interface address from all clients.\n[Interface] PrivateKey = QPuBCrqefTzPkF+QIMjADFOoWSI+4xFc33M697btnQ= Address = 172.16.22.10/24 DNS = 8.8.8.8, 4.2.2.2 [Peer] PublicKey = f85A1r4j3WWANBCTEIGNWLDMoqyepJWUmaDC4yVY= PresharedKey = K9g6ZZ/IXeZL1ACAUEVB2hgFir2AAfhBRaRWVhcJyA= AllowedIPs = 192.168.20.0/24 Endpoint = 172.16.22.20:5555 PersistentKeepalive = 30 IPTables rules:\nsysctl -w net.ipv4.ip_forward=1 iptables -A FORWARD -i wg0 -j ACCEPT iptables -t nat -A POSTROUTING -o wg0 -j MASQUERADE iptables -t nat -A POSTROUTING -o ens192 -j MASQUERADE Enable the Wireguard Service on the Trustgrid Gateway and define the desired port. Also either generate or import the public key to be used\nConfigure the wireguard service as a client of the Trustgrid Gateway. If the gateway is a member of a cluster it will be configured under the cluster configuration options otherwise it will be configured on the individual gateway. Enter in the desired client name / the pre-shared key and public key generated on the wireguard server. Internet access can also be allowed if that is being configured on the gateway side.\nSelect the client that was added and configure the inside nat. The virtual CIDR should be within the virtual network space that the Gateway is attached to as seen below. This can be seen under domains \u003e domain \u003e virtual networks. The Local CIDR should be the wireguard interface address that is sourcing all traffic to the gateway. An outside NAT is not normally required. Any hosts communicating with the remote networks on the gateway side will need to use the wireguard server interface as the next hop for reaching that network.\n“WireGuard” is a registered trademark of Jason A. Donenfeld.\n","categories":"","description":"","excerpt":"This describes the process of deploying a WireGuard client which will …","ref":"/tutorials/configure-wg-edge-node/","tags":["wireguard"],"title":"Configure WireGuard on an Edge Node"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/containers/","tags":"","title":"containers"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/control-plane-disconnect/","tags":"","title":"control plane disconnect"},{"body":" When the Control Plane is disconnected there is no way to utilize remote tools to resolve the issue so you will need to contact the End-user technical resource for the site to troubleshoot\nWhen troubleshooting the control plane it is a good idea to familiarize yourself with the [Edge Node Startup \u0026 Update Communication Process].\nNetwork Requirements In order to connect to the Trustgrid Control Plane, the following outbound traffic must be allowed from the node’s configured primary interface IP address TCP Port 443 and TCP/UDP 8443 to: 35.171.100.16/28 34.223.12.192/28 TCP/UDP Port 53 to the configured DNS servers. These DNS servers must be able to resolve DNS requests for the trustgrid.io domain Triage the total site connectivity to see if actions can be taken to restore functionality for the edge site while troubleshooting the specific node\nConfirm with the site tech:\na. There are no known power or internet issues at the site\nb. No changes have been made to any firewalls between the Trustgrid node and the internet (if applicable). In order to connect the Trustgrid node must have access to the Network Requirements defined above.\nHave the site tech attempt to ping the inside interface IP address(es) to see if the device is showing as powered up and online. If the site is using a single-interface configuration this would be the Network Adapter 1 - WAN Interface IP(s) in the portal.\na. If the ping is successful you have determined the device has power and that the operating system and Trustgrid software are running. In this case, you can focus on internet side issues.\nb. If the ping fails, work with the site tech to:\ni. Confirm the node is powered on ii. Connect directly to the network of the inside interface and attempt ping from there. They should also connect directly to the inside interface and statically configure an IP in the same network. Attempt power cycling the node by removing power and returning from physical devices or using the hypervisor management tools for virtual nodes.\nConnect to the console of the device\na. A normal node looks something like this\ni. Work with the onsite tech to login to the Trustgrid Local Console Utility. This tools will display connectivity status and allow you to alter the WAN/outside IP settings if needed. b. If you see a screen like below attempt rebooting the device to restore connectivity. If that works contact Trustgrid support so we can investigate further.\nDisconnect the cable from the WAN/Outside port of the Trustgrid node and connect to a laptop NIC. Statically assign the same IP and DNS settings that the Trustgrid node is using. Confirm the following:\na. Using nslookup or dig to confirm you can resolve zuul.trustgrid.io\nb. Open a browser and navigate to https://zuul.trustgrid.io:8443\ni. If the device can connect to that server and port you should see a warning like this because Trustgrid uses its own Certificate Authority (CA) 1. Click `Not Secure` and then click `Certificate (invalid)` 1. You should expect to see a chain like the below. a. If there are any different certificates or CAs that indicates something like DPI-SSL/HTTPS Proxy is interfering with the handsake. See [this page] for resolution requirements. ii. If the browser says it cannot connect this indicates a firewall or routing issue upstream. If possible, capture traffic between the Trustgrid node and the internet. Specifically, the capture should filter to only see traffic from the Trustgrid node’s IP address and TCP port 8443 and TCP/UDP port 53. Common problems seen include:\na. Blocked DNS - Edge Node Behavior When DNS Fails\nb. Blocked port 8443 to the Trustgrid Networks - Edge Node Behavior When Port 8443 to Trustgrid Public Networks is Blocked\nc. DPI-SSL or HTTPS altering the TLS certificate chain - Edge Node Behavior When SSL / TLS Certificate is Altered\nNEED PROPER LINKS TO USE AND NEED TO FIND HOW TO ADD LINKS TO INDENT FORMAT ","categories":"","description":"","excerpt":" When the Control Plane is disconnected there is no way to utilize …","ref":"/tutorials/operations-runbook/control-plane-disconnect/","tags":["control plane disconnect","help","troubleshoot"],"title":"Control Plane Disconnect"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/data-store/","tags":"","title":"data store"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/data-store/","tags":"","title":"data store"},{"body":"Standing up a Trustgrid node in AWS is easy using an Amazon AMI. Trustgrid nodes in AWS use two network interfaces - a management and data interface. The management interface communicates with Trustgrid Cloud Management systems. The data interface is used to terminate TLS tunnels from Edge Nodes.\nNotes The cloudformation template below works with an AMI currently published in US-EAST1. Deploying in other regions requires working with Trustgrid Support Logs /var/log/syslog, /var/log/secure, and /var/log/trustgrid/tg-default.log to CloudWatch Requires VPC and public subnet Does not create security groups or roles - those have to be managed separately (more below) If using a burstable performance instance types (T2, T3 and T3a) the following is advised:\nSet CPU Credits for all Gateway instances to unlimited to allow CPU to burst in the event there is a spike above the normal threshold. Unlimited mode for burstable performance instances - Amazon Elastic Compute Cloud\nConfigure monitoring of your CPU Credit Balance to alert if your credits are being consumed or you are being charged for additional CPU usage which might warrant resizing your devices. Monitor your CPU credits - Amazon Elastic Compute Cloud\nPrerequisites VPC with public and private subnets - Management NIC goes in the public subnet, Data NIC goes in the private subnet\nNote: If doing a multi-AZ cluster deployment the private subnets need to use the same route table for automated route management to work Security group for management NIC that allows the following traffic:\nInbound traffic on designated Trustgrid gateway port (typical TCP 8443) for remote nodes. Access to this port can be secured to only allow access from remote nodes if desired. This is only required if deploying a Trustgrid gateway. If the node is acting as an edge then no inbound access is required. Outbound traffic to Trustgrid’s control plane IP (TCP 80/443 \u0026 8443 to 35.171.100.16/28 \u0026 34.223.12.192/28) Outbound traffic to AWS API (TCP 443) https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html Inbound \u0026 Outbound to/from management NIC security group on cluster port (typically TCP port 9000) For the initial deployment outbound access for TCP 80/443 should be allowed. Upon successful registration with the Trustgrid Portal this can be removed. IAM role for the instance with policies allowing publishing to Cloudwatch logs and changes to the routing table of the data NIC - See attached doc\nAll Interfaces on the Trustgrid Gateway should have source / destination check disabled in AWS\nSecurity group for data NIC - No configuration for now\nAn IP in the private subnet that will be used by the data NIC\nAn SSH keypair that can be used to SSH to the instance if necessary\nVPC must have unallocated public IP that will be claimed during provisioning\nProcess Create a new Node. When complete the Node license will copy to clipboard.\nNote: The node will not be visible in the portal until the registration process is complete. Download the license to local storage in case the clipboard is cleared. You cannot reissue a license without recreating the node. Click this link to start the AMI provisioning process. https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/create/review?templateURL=https://s3.amazonaws.com/tg-dev-public/cf-trustgrid-node.json\nFill out the fields in the CloudFormation form\nInstance Configuration Stack Name Unique name to describe this deployment Instance Type Set the instance type of the EC2 instance to deploy (bigger instances cost more) Host IAM Role An EC2 associated role that allows creating and writing to CloudWatch logs. Only the role name itself is required.\nThe role needs these IAM privileges: logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents, logs:DescribeLogStreams on resource arn:aws:logs:*:*:*\nCloudwatch logs policy\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\" ], \"Resource\": [\"*\"] } ] } If EC2 Nodes will be clustered (Layer 3) the IAM role needs ec2:DescribeRouteTables for any resource and ec2:CreateRoute \u0026 ec2:DeleteRoute on the route table\nRoute Table Policy\n{ \"Effect\": \"Allow\", \"Action\": \"ec2:DescribeRouteTables\", \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"ec2:CreateRoute\", \"ec2:DeleteRoute\" ], \"Resource\": \"arn:aws:ec2:us-east-1:079972220921:route-table/rtb-f428d58b\" } NOTE: Set the Resource field to the ARN of the Routing Table associated with the data NICs of the instance.\nCloudWatch Note: We will create log groups named /trustgrid/var/log/syslog and /trustgrid/var/log/trustgrid/tg-default.log.\nSSH Keypair SSH keypair to SSH to the instance as ubuntu user if necessary\nNOTE: SSH access requires a security group change allowing access. We strongly recommend that SSH is not allowed from anywhere (0.0.0.0/0).\nManagement Configuration Security Group Needs to allow outbound traffic to other gateways and our public IP range, at a minimum. If it’s a gateway node, needs to allow inbound access on desired gateway port. Subnet The VPC subnet to put the EC2 instance in. This needs to be a subnet with public IP enables (the instance will automatically claim one; the Auto-Assign Public IP does not need to be enabled) Data Path Configuration Security Group The security group for the data path - needs to allow outbound communication to other gateways, and inbound communication on its gateway port Subnet The VPC subnet to put the data interface in - if it’s a cloud-accessible gateway, should be a public subnet, if it’s only for internal AWS traffic, can be a private subnet. Will need outbound access either through IGW or NAT GW. Data IP The private IP for the data path - must belong to the subnet Trustgrid Configuration Security Group Copy/paste the license from the portal.\nNote: It is critical that you copy/paste the license correctly.\nIf you are not a direct Trustgrid customer please work with your vendor to get these licenses generated and sent to you. Creating the Stack Create the stack. Check the box acknowleding that AWS CloudFormation might create IAM resources. This is required because we create an instance profile for the to-be-run EC2 instance. When the node appears in the Portal, activate it. In the EC2 console, reboot the node (it will be named trustgrid-node) You can now manage the node as you would any other in the Portal UI. ","categories":"","description":"","excerpt":"Standing up a Trustgrid node in AWS is easy using an Amazon AMI. …","ref":"/tutorials/deployments/deploy-aws-ami/","tags":["aws"],"title":"Deploy a Trustgrid Node AMI in AWS"},{"body":"VM Requirements Requirement Description OS Ubuntu 18.04 LTS Disk Size At least 30 GB Instance Type Trustgrid has validated using the B-series burstable - Azure Virtual Machines instance type.\nVPN throughput is tied to CPU the recommended size depends on roles, expected throughput.\nFor Gateway nodes expecting up to ~200Mbps throughput, Trustgrid recommends the Standard_B4ms or larger For Edge nodes expecting less than 100Mbps throughput, Trustgrid recommends the Standard_B2s or Standard_B2ms or larger Interfaces One WAN interface with a public IP and one LAN interface on a private subnet. The nodes will need to be able to route to all required hosts/applications that need to communicate across the Trustgrid virtual network.\nThe LAN interface needs to have IP Forwarding Enabled in order to forward the traffic across the tunnel.\nSee Azure virtual network traffic routing.\nNetwork Access During deployment only, Trustgrid will need direct SSH access from their provisioning system to the VM instances that will be converted into Trustgrid nodes.\nFor gateways:\nOutbound internet access to the Trustgrid control plane networks and ability to resolve public DNS names. Inbound access required is the TCP port defined for the Trustgrid gateway service to listen on. Edge nodes will connect to the gateways public IP and port defined. The default port used is 8443. For edge nodes:\nOutbound internet access to the Trustgrid control plane networks, outbound access to the IP and ports of the Trustgrid gateways, and ability to resolve public DNS names. No inbound access is required on the public interface. For all clustered nodes:\nThe cluster heartbeat runs on the LAN/inside interface on TCP Port 9000. This port will need to be open between both Trustgrid Gateways for failover to work correctly. Admin Username and SSH Key Trustgrid requires SSH access to the deployed VM to complete the Trustgrid deployment process. After the deployment is complete the VM ceases to listen on port 22 and any external access to that port can be revoked.\nUsername: ubuntu\nSSH public key:\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDK1AHNLfqOd13qsWQGa4FgoNcpllJYlIlkJdqCkLFq0qaYVrh0b1mxalVzrrxy8rSj7DYlofRArb9hntijLnkrlKxMcWVgqMg4JAcXEQvWUtkIwFemE/NoZoXncKfr6lJZ/+gT1LhNX7IMUh7vVhYsyhDkbdvU0FcnJVelEW5TCRdPLzTMcbRfjCo6MiCoMK45nQIKRHofAJFPSubmPAKZC0L1Dz4zwnb1PeCadSDRHDwPWB3vCl9H/h+7Oe7TC+kEc4bV8OzZTnzfX4Mdo9rb9Afz3ZFWYYh3KP2v1hsF6rtSLS6EpuMZVS41YHvGpHQjFgn0n8hNIoQvf9gO4hxH Requirements for HA Failover Azure Routing Table An Azure routing table resource needs to be associated with the LAN interface’s subnet.\nView LAN Subnet Routing Table In the Azure Portal search for Virtual Networks and select the service\nFrom the list of Virtual Networks select your target Virtual Network\nFrom the navigation panel select Subnets\nSelect your inside/private subnet that is attached to the LAN interface of your Trustgrid VMs\nThere should be a route table\nCreate Route Table for LAN Subnet If there is no Route Table associated with your LAN/inside/private subnet you will need to add it.\nIn the Azure portal search for Route Tables and select the service\nClick the +Create button\nSelect the Resource Group that contains your Virtual Network and VMs\nSelect the Region that your VMs are deployed in\nGive the Route Table a name consistent with your naming conventions\n(Optional) change the Propagate Gateway routes option.\nClick Review + Create, review then click Review + Create again\nRepeat the above steps to “View LAN Subnet Routing Table” and change the route table from None to the newly created Route Table.\nSave the change\nPermissions Required for Cluster Route Failover Copy this sample json file for use in creating a custom role with the required permissions. See process below.\nThe assignableScopes section will need to be modified to represent the resource information of the target Azure account.\n{ \"properties\": { \"roleName\": \"tg-route-table\", \"description\": \"manage azure route table\", \"assignableScopes\": [ ], \"permissions\": [ { \"actions\": [ \"Microsoft.Network/networkWatchers/nextHop/action\", \"Microsoft.Network/networkInterfaces/effectiveRouteTable/action\", \"Microsoft.Network/routeTables/routes/delete\", \"Microsoft.Network/routeTables/routes/write\", \"Microsoft.Network/routeTables/routes/read\", \"Microsoft.Network/routeTables/join/action\", \"Microsoft.Network/routeTables/delete\", \"Microsoft.Network/routeTables/write\", \"Microsoft.Network/routeTables/read\", \"Microsoft.Network/networkInterfaces/read\", \"Microsoft.Network/virtualNetworks/read\", \"Microsoft.Compute/virtualMachines/read\" ], \"notActions\": [], \"dataActions\": [], \"notDataActions\": [] } ] } } System-assigned Managed Identity needs to be enabled for both VMs in the cluster.\nA custom role needs to be created in the Azure subscription that allows the Trustgrid nodes to update the route table when failover occurs\nCreate the custom role In the Azure portal search for “Subscriptions” and select the Subscriptions service\nSelect the subscription that contains the Trustgrid VMs\nSelect “Access control (IAM),” then click “+Add”, then “Add custom role”\nSave the JSON above to a file named azure-custom-role-sample.json.\nSelect “Start from JSON” and from the file selector, select the downloaded json file.\nOptionally, update the role name to meet your internal naming conventions.\nClick Next.\nOn the Permissions page you will see the permissions that will be granted. Click Next again.\nOn the Assignable Scopes page click +Add Assignable Scope\nFrom the Type select Resource Group\nFrom the Subscription, select the subscription your VMs and virtual networks are in.\nFrom the Select pane on the right search for and select the Resource Group containing you VM’s\nClick Select and then Next.\nOn the JSON page, click the Next button.\nClick Review + Create, then click Create.\nAssign the custom role to your Trustgrid VM’s system-assigned\nIn the Azure portal search for Resource Groups and select the service\nSelect your target Resource Group\nSelect the Access Control (IAM) panel, then click +Add, then “Add role assignment”\nSearch for and select the desired role and click Next\nUnder “Assign access to” select “Managed Identity” then click +Select members\nFrom the Managed Identity dropdown select Virtual Machine\nSelect the identity for your first Trustgrid VM\nClick select.\nClick +Select members again and repeat with your second Trustgrid VM\nClick “Review + Assign” then “Review + Assign” a second time\nThese permissions can take some time to go into effect.\nDeployment Process The current deployment process involves Trustgrid and the site’s technical team with Azure access working together to complete converting a standard Ubuntu 18.04 LTS based VM into a Trustgrid Appliance (or appliances for a clustered deployment).\nParticipants Site Tech - User(s) with permissions to deploy new instances in Azure, create the required Managed System Identity shown above, and make changes to allow the required network connectivity Trustgrid Tech - Trustgrid professional services team member that will complete the conversion of the generic image into a If the Site Tech is not part of the organization that is Trustgrid’s direct customer, Trustgrid will need documented approval from that customer before proceeding with assisting in the deployment.\nHigh-Level Process Prior to a scheduled call the Site Tech can: Build a vNet with public and private subnets if it does not already exist Create the Managed System Identify permissions as defined above Create VM Instances based of the Ubuntu 18.04 LTS image and sizing requirement mentioned above A conference call will be scheduled between the Site Tech and Trustgrid Tech during business hours During the conference call: Trustgrid Tech - Confirm connectivity to the node Run automation process to convert into Trustgrid appliance Register the device with the target organization Confirm healthy functionality and connectivity to the required Configure and test clustering including route failover (if clustering is to be used) Configure VPN (if to be used) and confirm access to required networks/hosts if possible Site Tech - Revoke direct SSH access ","categories":"","description":"","excerpt":"VM Requirements Requirement Description OS Ubuntu 18.04 LTS Disk Size …","ref":"/tutorials/deployments/deploy-azure/","tags":"","title":"Deploy to Azure"},{"body":"Requirements Hardware Resources 4 vCPU 4 GB RAM 30 GB disk space Software Requirements vSphere 6.7 or newer (with VMWare support) Configuration Best Practices Backups Trustgrid recommends against backing up virtualized Nodes. Backups that utilize VMware’s Data Protection API will initiate a VM Snapshot that will pause all traffic through the VM for a short period of time. This can cause issues such as master failover in a cluster and disruption of existing network flows.\nIn place of backups Trustgrid recommends deploying clustered nodes on different ESX hosts if possible. Nodes can be redeployed and rapidly configured as the configuration is stored in our cloud management system.\nDynamic Resource Scheduling (DRS) and Storage DRS Automation Level Trustgrid recommends setting the DRS level for a VM to either Partially Automated or Disabled. Even the temporary loss of network connectivity during vMotion migrations can disrupt some network flows.\nSet a Custom Automation Level for a Virtual Machine Change Storage DRS Automation Level for a Virtual Machine (Recommended) Anti-Affinity If you have Trustgrid nodes clustered within a vSphere Cluster with DRS enabled you should create an anti-affinity rule. This rule should keep the nodes running on independent hosts for additional hardware redundancy.\nCreate VM Anti-Affinity Rules Deployment Process The Trustgrid gateway node can be deployed in a vSphere environment (v6.7 and higher) using a custom VM template provided by Trustgrid. Follow the instructions below to deploy the OVF template in your environment.\nDownload \u0026 Extract the customized VM template from the link sent to you by Trustgrid\nOpen \u0026 log in to your vSphere web client\nNavigate to Host \u0026 Clusters\nRight click on vSphere ESX host in the Navigator pane and select Deploy OVF Template\nSelect Local File and then click Browse\nSelect all of the files included in the zip file and click open, then click Next\nConfirm the name and desired location for your VM and click Next\nSelect a resource to place your VM on and click Next\nClick Next on the Review Details pane\nSelect your preferred storage options and click Next\nSelect the proper networks for your network interfaces.\nThe destination network for the first network interface will be the network designated for the node’s management interface. If you opted for a single interface configuration, you will only need this interface connected. The destination network for the second network interface will be the network designated for the node’s data interface. If you opted for a single interface configuration you will still need to provide a port group for this to complete the deployment but it can be disconnected after deployment Verify the configuration data and click Finish to deploy the VM\nOnce your VM Template has finished deployment, power on the VM\nDeployment of your Trustgrid gateway node VM is now complete. If configuring this Node as a gateway, the next step will be to allow inbound TCP port 8443 to your gateway VM to allow remote nodes to connect back to it.\n","categories":"","description":"","excerpt":"Requirements Hardware Resources 4 vCPU 4 GB RAM 30 GB disk space …","ref":"/tutorials/deployments/deploy-vsphere/","tags":"","title":"Deploy to vSphere"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/deployments/","tags":"","title":"Deployments"},{"body":" Data store directory creation allows you to add new directories to organize your files in a hierarchical, tree-like structure.\nThe destination where the directory will be created can be changed by selecting a particular directory as the parent from the File Explorer side bar. Field Name Description Parent Directory The data store location where this directory will created. Name The name of the directory to create. ","categories":["data store"],"description":"","excerpt":" Data store directory creation allows you to add new directories to …","ref":"/docs/nodes/datastore/mkdir/","tags":["containers","s3","virtual machines"],"title":"Directory Creation"},{"body":"Nodes can act as DNS servers for the virtual network. Find DNS definitions and change them under the DNS section of the VPN configuration.\nUpstream Servers Upstream servers will be used to answer DNS queries for domains that are not in the virtual network.\nHost IP Address The upstream DNS server’s IP address Host Port The upstream DNS server’s port (usually 53) ","categories":"","description":"","excerpt":"Nodes can act as DNS servers for the virtual network. Find DNS …","ref":"/docs/nodes/vpn/dns/","tags":"","title":"DNS"},{"body":"Dynamic routing allows a node to export and import routes from other nodes in the virtual network. Find dynamic route definitions and change them under the Dynamic Routing section of the VPN configuration.\nDynamic Routing table Exports Export routes for other nodes in the virtual network to import.\nAdd Export Route dialog Field Name Description Destination The node to route traffic to. Destination CIDR The network to route traffic to. Metric The route metric. Lower metrics are processed first. Gateway Path An optional gateway path to use for the route. Imports Import routes from other nodes in the virtual network.\nAdd Import Route dialog Field Name Description Destination The node to route traffic to. Destination CIDR The network to route traffic to. Metric The route metric. Lower metrics are processed first. Gateway Path An optional gateway path to use for the route. ","categories":"","description":"","excerpt":"Dynamic routing allows a node to export and import routes from other …","ref":"/docs/nodes/vpn/dynamic-routing/","tags":"","title":"Dynamic Routing"},{"body":"Symptoms Node does not connect to the Portal Packet captures show repeated DNS queries for gatekeeper.trustgrid.io but no response Cause DNS servers configured on edge node are not accessible A firewall is blocking TCP/UDP port 53 between the edge node and the configured DNS DNS servers configured on edge node cannot resolve public DNS entries for the trustgrid.io domain Troubleshooting Steps Determine the configured DNS Servers - Connecting a monitor to the node will display the current IP configuration including the DNS Servers as shown below: (If possible) Capture traffic between the edge node and the internet and confirm you see both a DNS query (usually for gatekeeper.trustgrid.io) AND response Resolution Ensure the edge node can make TCP/UDP connection on port 53 to the configured DNS server If using private DNS server ensure they have forwarders configured that can resolve trustgrid.io DNS records If configured DNS servers are incorrect the node will need to be manually reconfigured. Contact Trustgrid Support for assistance ","categories":"","description":"","excerpt":"Symptoms Node does not connect to the Portal Packet captures show …","ref":"/help-center/kb/startup-process/dns-failure/","tags":"","title":"Edge Node Behavior When DNS Resolution Fails"},{"body":"Symptoms Node will not connect to the portal Packet capture shows the following behavior: DNS request and response for gatekeeper.trustgrid.io and zuul.trustgrid.io TCP connection attempt to port 8443 on the returned IP address with no response A 2 minute delay before the above cycle repeats Cause The Trustgrid edge node cannot connect to the Trustgrid control plane over 8443 Verification Place a device in the same network (or assume the IP address of) the edge node. Confirm you can make a successful connection to gatekeeper.trustgrid.io:8443 using telnet, netcat or similar tool Resolution Adjust firewall settings to ensure TCP traffic over port 8443 is allowed to all of the Trustgrid control plane ","categories":"","description":"","excerpt":"Symptoms Node will not connect to the portal Packet capture shows the …","ref":"/help-center/kb/startup-process/8443-blocked/","tags":"","title":"Edge Node Behavior When Port 8443 is blocked"},{"body":" Products that alter SSL/TLS certificate chains will prevent the node from functioning normally.\nSymptoms Node will not connect - This will occur if the SSL/TLS chain is altered on port 8443 Node will not update - This will occur if the SSL/TLS chain is altered on port 443 Packet captures will show something like the below repeating: TLS “Client Hello” Server (Trustgrid IP) will send a reset (RST) Cause The integrity of communication is a critical feature of Trustgrid’s network solution. Any product that alters the SSL certificate chain will prevent the node from functioning normally.\nTypically this is caused by a security appliance (Next Generation Firewall or Web Proxy) doing some form of SSL Decryption (e.g. DPI-SSL, HTTPS inspection)\nVerification To verify this is indeed occurring you can run the below command from the Trustgrid terminal:\nopenssl s_client -connect repo.trustgrid.io:443 -showcerts This example is testing connectivity to the Trustgrid repository used for updates. You can replace repo.trustgrid.io:443 with gatekeeper.trustgrid.io:8443 to test connectivity to a Trustgrid service over 8443.\nAfter running you will need to scroll back to the top to see the first certificate in the chain\nIf the certificate chain is being altered you will see something like the below where Trustgrid is not the first entry:\nThe correct certiticate chain should look like:\nResolution Traffic on ports 443 and 8443 between the Trustgrid node and the Trustgrid public IPs and/or *.trustgrid.io must be excluded from any SSL/TLS decryption/inspection After excluding the traffic, restart the edge node ","categories":"","description":"","excerpt":" Products that alter SSL/TLS certificate chains will prevent the node …","ref":"/help-center/kb/startup-process/ssl-tls-tampering/","tags":"","title":"Edge Node Behavior When SSL / TLS Certificate is Altered"},{"body":"In Okta, switch to the Classic UI to be able to configure SAML applications.\nFurther Information on configuring SAML Application in Okta Classic UI: https://developer.okta.com/standards/SAML/setting_up_a_saml_application_in_okta/\nCreate an Application, then select Web and SAML 2.0.\nWhen configuring SAML, enter the Trustgrid Portal and select EmailAddress for Name ID format and Email for Application username.\nComplete the following survey questions and then download the IDP Metadata XML File by clicking on Identity Provider Metadata link. This will open up the xml file as shown below. Save this XML file and provide it to Trustgrid Support.\nAdditionally you will also need to provide a subdomain that will be used as the login URL only for SAML users. For example the subdomain must be subdomain.trustgrid.io. Any Okta Users going to https://subdomain.trustgrid.io will be directed to the Okta Login Page and authenticate with their Okta credentials. Once authenticated successfully they will be logged into the Trustgrid Portal. Note that if for any reason SAML authentication is failing you may always fall back to the Trustgrid portal local authentication by navigating to https://portal.trustgrid.io and using your Trustgrid portal user credentials. All users that are going to use Okta to login to the Trustgrid portal will need to be associated with the Trustgrid Okta SAML Application.\nReference for assigning users to Okta SAML Application: https://developer.okta.com/standards/SAML/setting_up_a_saml_application_in_okta\nOnce both the XML file and subdomain have been received by Trustgrid Support it will be configured in the Trustgrid Portal.\nAdding SAML Users After enabling SAML you can add users following the process below:\nIn Okta, add the user either to the Trustgrid application directly or to a group that includes access to the Trustgrid application In the Trustgrid portal, invite the Trustgrid user using their primary email address in Okta The users should receive an email with a link that directs them to https://subdomain.trustgrid.io but they can navigate there directly. Subdomain will be whatever was provided to Trustgrid support as they enabled SAML. ","categories":"","description":"","excerpt":"In Okta, switch to the Classic UI to be able to configure SAML …","ref":"/tutorials/saml-okta/","tags":"","title":"Enable SAML with Okta"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/failover/","tags":"","title":"failover"},{"body":" File syncing allows a user to transfer files to the data store as well as upload files from the data store.\nTransfer Files A user can populate the data store by transferring files from an Amazon S3 bucket or from an HTTP endpoint.\nThe destination where the file will be stored can be changed by selecting a particular directory from the File Explorer side bar. Amazon S3 Transfer A user can select to transfer a file from an S3 URI.\nSync File Field Name Description S3 URI The S3 URI for the location of the file to transfer. Datastore Destination The data store location where the file will be transferred to. Configure Authentication In order to be able to utilize the S3 File Sync option, valid AWS credentials need to be configured on the node for the applicable S3 buckets.\nConfigure Bandwidth Throttling The S3 File Sync service will always try to utilize as much bandwidth as possible to perform the transfer of the file. If the amount of bandwidth needs to be limited, a user can configure the amount of bandwidth allowed to be utilized in Kbps/Mbps/Gbps.\nField Name Description Max Concurrent Requests The maximum number of concurrent requests allowed. Max Bandwidth The maximum bandwidth that will be consumed for uploading and downloading data to and from Amazon S3. Bandwidth Rate Rate associated to the Max Bandwidth specified. Supported values are Kbps, Mbps, and Gbps. In general, it is recommended to first use Max Concurrent Requests to lower transfers to the desired bandwidth consumption. The Max Bandwidth setting would then be used to further limit bandwidth consumption if setting Max Concurrent Requests is unable to lower bandwidth consumption to the desired rate. HTTP Endpoint Transfer A user can select to transfer a file from an HTTP endpoint. The endpoint has to be unauthenticated since the node currently doesn’t support providing credentials.\nSync File Field Name Description HTTP URI The HTTP URI for the location of the file to transfer. Datastore File Name The transferred file will be saved with this name under the datastore destination. Hash (Optional) Optional fields used to validate the integrity of the transferred file. Hashing Algorithm If a hash is specified, this specifies the hashing algorithm used during validation of the file. Upload Files\nA user can extract files from the datastore by uploading them to an Amazon S3 bucket or to an HTTP endpoint.\nA file needs to be selected first before the File Upload button gets enabled on the File Explorer menu bar. Amazon S3 Upload A user can select to transfer a file to an S3 URI.\nFile Upload Field Name Description S3 Bucket URI The S3 bucket URI for the location where the file will be uploaded. Datastore File The data store file to upload. For configuration of AWS authentication and Bandwidth Throttling refer to Configure Authentication and Configure Bandwidth Throttling HTTP Endpoint Upload A user can select to upload a file to an HTTP endpoint. The endpoint has to be unauthenticated since the node currently doesn’t support providing credentials.\nFile Upload Field Name Description HTTP URI The HTTP URI for the location where the file will be uploaded. Datastore File The data store file to upload. Use Multipart Used to denote if multipart should be used when uploading the file. True for use multipart and false otherwise. The node uses the POST method to perform the HTTP upload ","categories":["data store"],"description":"","excerpt":" File syncing allows a user to transfer files to the data store as …","ref":"/docs/nodes/datastore/sync/","tags":["containers","s3","virtual machines"],"title":"File Sync"},{"body":" Go to the Node detail page for the node in question\nThere are several IP addresses reported:\na. In the top table, IP Address is the egress IP address that the node is using to communicate with the management plane\nb. In the shadow table, the IP addresses for all non-loopback interfaces are shown\n","categories":"","description":"","excerpt":" Go to the Node detail page for the node in question\nThere are several …","ref":"/tutorials/find-ip-node/","tags":"","title":"Find the IP Adress of a Node"},{"body":" This page shows Flow Logs from all nodes in an organization. See this page for more info on Flow Logs\nFlow Log Export Trustgrid can export flow logs to any S3 bucket. Set your bucket name and apply the policy provided, and then Trustgrid will configure replication for your flow logs into your bucket.\nFields for configuring S3 replication Field Name Description AWS Account ID This is the AWS Account ID that contains the bucket you wish to have Flow Logs replicated to. S3 Bucket The bucket name. You must own the S3 bucket and apply the policy in AWS to allow Trustgrid to replicate files to the bucket. After submitting the above information, Trustgrid will complete their required configuration within 2 business days Requirements Enable Bucket Versioning You must enable bucket versioning on the target S3 bucket for replication to work.\nConfigure Bucket Policy Below is an example Bucket Policy with the required permissions to push flow logs to your S3 bucket. Be sure you replace example-flowlogs in lines 19 \u0026 20 with the name of your bucket and add this bucket policy to your S3 bucket.\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"allow-tg-writes\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"arn:aws:iam::079972220921:root\" }, \"Action\": [ \"s3:ReplicateObject\", \"s3:ReplicateDelete\", \"s3:ReplicateTags\", \"s3:List*\", \"s3:GetBucketVersioning\", \"s3:PutBucketVersioning\" ], \"Resource\": [ \"arn:aws:s3:::example-flowlogs\", \"arn:aws:s3:::example-flowlogs/*\" ] } ] } ","categories":"","description":"","excerpt":" This page shows Flow Logs from all nodes in an organization. See this …","ref":"/docs/operations/flow-logs/","tags":"","title":"Organization Flow Logs"},{"body":" Flow logs are a records of for network traffic that passes through a node. They can be used to troubleshoot connectivity issues, or to monitor traffic patterns.\nWhat are flow logs? Flow logs are records containing metadata about each network traffic flow, or conversation, from the initial connection (e.g. the first SYN packet for TCP) to the closing of the connection (e.g. FIN or RST packets for TCP). Flow logs do not contain any payload data for the flow which makes them much smaller and more secure than a full packet capture of the same flow.\nFlow logs can be used for troubleshooting by:\nVerifying that both the expected source and destination node have the appropriate logs. That any NATs are applying as expected. That the expected number of flows or sent/received byte are being passed. TCP Flags can be used to confirm a successful connection is being made. For example: A TCP Flow with only a SYN flag is never completing the TCP Handshake process indicating an issue, such as a firewall or routing configuration problem, preventing the destination IP from either receiving packets or replying successfully A TCP Flow with only a SYN \u0026 RST flag indicates something in the path is actively resetting the connection attempt. This could be a firewall or an application IP restriction. Flow Log Data Below are the potential fields of a single flow log.\nField Name Description Start Time The time the flow started End Time The time the flow ended Protocol The protocol of the traffic TCP, UDP, ICMP Source Node The node that initiated the flow Source IP The IP address through which the node initiated the flow Source Port The port through which the node initiated the flow Dest Node The node that received the flow Dest IP The IP address to which traffic was sent Dest Port The port to which traffic was sent Recv Bytes Bytes received at the source node Sent Bytes Bytes sent from the source node TCP Flags TCP Flags set during the flow:\nSYN - sync packet PSH - push packet ACK - ack packet URG - urgent packet FIN - finish packet RST - reset packet TCP Flags are only available for TCP flows that traverse the layer 3 VPN function. ICMP and UDP traffic, Layer 4 services and VPN Port Forwards will not have this data.\nNAT Impact on Source and Destination Fields When NATs are applied to a flow they will influence the source/destination IP and port values.\nConsider this flow:\ngraph LR client(HTTP Client\\n192.168.100.1) -- src: 192.168.100.1\\ndest: 10.100.1.1--\u003e Node1 subgraph Virtual Network Node1 -- src: 10.100.2.1\\ndest: 10.100.1.1 --\u003e Node2[Node2 \\n Local IP\\n172.16.1.100] end Node2 --src: 172.16.1.100 \\n dest:172.16.1.20 --\u003e server(HTTP Server\\n172.16.1.20) Node1 would report the flow before any NATs were applied\nSource IP Destination IP 192.168.100.1 10.100.1.1 Node2 would report the flow after the NATs on Node1 were applied (changing the source 10.100.2.1) and the NATs on Node2 were applied (changing the source to 172.16.1.100 and the destination to 172.16.1.20)\nSource IP Destination IP 192.168.100.1 10.100.1.1 Note: For simplicity sake ports were excluded. Destination ports will not be changed by NATs. Source ports would also be maintained for any 1:1 NAT, but would change if a many:1 (or overload) NAT was applied to the flow. Viewing Flow Logs Flow logs are visible at an organization level by navigating to Operations \u003e Flow Logs. This will show you the most recent 1000 flows over the last two hours for the all nodes in the organization.\nTo view Flow Logs only for traffic through a specific node, navigate to that node and go to History \u003e Flow Logs. This will show you the most recent 1000 flows over the last two hours for the currently selected node.\nExample flow log table for a node Advanced Search Flow logs can be filtered by any of the fields listed above. To filter by a field, click the Advanced Search button at the top right of the flow logs table.\nIn addition, the ordering can be changed so that oldest flows (or flows closest to the time range specified) can be shown first. There is a limit of 10,000 flows returned per search.\nAdvanced Search dialog ","categories":"","description":"","excerpt":" Flow logs are a records of for network traffic that passes through a …","ref":"/help-center/flow-logs/","tags":"","title":"Flow Logs"},{"body":"Setup Setting up the G Suite integration requires a G Suite administrator to perform the configuration.\nOnce the integration has been successful, the user sync selection will be presented:\nSync all users - Syncs all available users along with all the groups associated to the users. Sync users from specific groups - Syncs all users from the selected groups. Disconnect G Suite - Deletes all users and groups and removes the G Suite integration. Once the initial manual sync has occurred, automatic synchronization will happen once a day. Automatic synchronization guarantees up to date view of users and their corresponding groups. At any given point the sync selection can be changed and saved, and the sync will automatically start. ","categories":["idps"],"description":"","excerpt":"Setup Setting up the G Suite integration requires a G Suite …","ref":"/docs/idps/gsuite-idp-fields/","tags":"","title":"G Suite"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/gateway-tools/","tags":"","title":"Gateway Tools"},{"body":" Trustgrid supports configuring GRE tunnels that can be used to establish connectivity to any appliance that supports the GRE protocol. A GRE tunnel interface is created which can then be attached to an interface on a node. VRFs can then be used to control the flow of traffic and how it should appear on the network.\nConfigure GRE Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select GRE\nGRE Tunnel Configuration Parameters Name - the name of the GRE tunnel interface that will be created on the Trustgrid node Description - optional field to used to document the purpose of the tunnel IP - the ip address the tunnel is created with in CIDR Peer - the remote IP address of the appliance the tunnel is being established with VRF - existing VRF on the node the tunnel is being associated to MTU - the MTU of the tunnel interface. Typically can be set to 1476. ","categories":["node"],"description":"","excerpt":" Trustgrid supports configuring GRE tunnels that can be used to …","ref":"/docs/nodes/tunnels/gre/","tags":["tunnels","networking"],"title":"GRE"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/idps/","tags":"","title":"idps"},{"body":"The images section shows the container images that have been downloaded to the node. They may be deleted to free up space.\n","categories":"","description":"","excerpt":"The images section shows the container images that have been …","ref":"/docs/nodes/containers/images/","tags":"","title":"Images"},{"body":"The images section allows a user to add/delete virtual machine images.\nThe Downloaded column shows whether or not an image is present on the node. Field Name Description Display Name Friendly name associated to the image. Description Description for the image. Image File Image file selected from the node data store. Operating System Operating System for the image. This is rather important to optimize the virtual machine configuration. If an incorrect Operating System is selected for the image, the virtual machine might not be able to detect install media or perform critical device controller operations Delete Image If the image is present on the node, executing a delete of the image will prompt the deletion of the image from the node.\nYes - The image will be attempted to be deleted from the node first before the image entry is removed. No - The image will not be deleted from the node and the image entry will be removed. ","categories":["virtual machines"],"description":"","excerpt":"The images section allows a user to add/delete virtual machine images. …","ref":"/docs/nodes/kvm/images/","tags":"","title":"Images"},{"body":" Trustgrid supports configuring traditional IPSec tunnels that can be used to establish connectivity to any appliance that supports the IPSec protocol. Once an IPSec tunnel is configured an IPSec virtual interface is created that can be attached to a node interface. VRFs can be used in conjunction to explicitly control what traffic is allowed (VRF ACLs) to pass and how it should look on the network (VRF NATs or Traffic Rules).\nConfigure IPSec Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select IPSEC\nIPsec Tunnel Configuration Parameters Required Parameters Name - the name of the IPSec tunnel interface that will be created on the node and displayed in the Trustgrid Portal Description - used to document the purpose of the tunnel Interface - the network interface the tunnel will be listening on. Typically this will be network adapter 1 which is the WAN interface Interface IP - the ip address the tunnel will be created to use in CIDR. Typically this would be a /30. Interface VRF - the VRF the tunnel will be associated with in order to apply ACLs / NATs / Routes or Traffic Rules Interface MTU - the specified MTU of the tunnel interface. Typically this can be left to the default of 1436 IKE Version - select version 1 or version 2 Peer IP - The remote ip address of the appliance the tunnel is being established with IKE Cipher - The cipher used for phase 1 IKE DH Group - The Diffie-Hellman Group used for phase 1 IPSEC Cipher - the cipher used for phase 2 PFS - The Diffie-Hellman Group used for phase 2 perfect forward secrecy DPD Interval - seconds for dead peer detection DPD Retries - number of dead peer detection retries before the tunnel is re-keyed / torn down Rekey Interval - time in seconds before a re-key of the tunnel is initiated Replay Window - size of the replay window which is used to prevent replay attacks. Typically set between 64 and 128 Local Subnet - the local subnet in CIDR that will be considered interesting traffic and be allowed to forward over the tunnel Remote Subnet - the remote subnet in CIDR will be considered interesting traffic and be received on the tunnel Auto Add - the connection is added and then waits for the remote peer to initiate the tunnel establishment Auto Start - the connection is added and then attempts to initiate the tunnel to the remote peer PSK - the pre-shared key used by both peers to establish the tunnel Optional Parameters Virtual Network - associate the tunnel to a Trustgrid Virtual Network IKE Local ID - The IP address that will be seen by the remote peer to establish the tunnel. Typically this would be the public facing WAN IP of the Trustgrid Node. IKE Remote ID - Used for identity validation. Typically this is the same address as the Peer IP ","categories":["node"],"description":"","excerpt":" Trustgrid supports configuring traditional IPSec tunnels that can be …","ref":"/docs/nodes/tunnels/ipsec/","tags":["tunnels","networking"],"title":"IPSec"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/layer-4/","tags":"","title":"layer 4"},{"body":" This security feature allows restricting node functionality to the current public IP address. If the public IP changes the data plane connectivity will cease to function and no data plane traffic will pass. It is the equivalent to disabling a node in the trustgrid portal. This feature should not be used on networks where the Public IP is controlled via DHCP. It should only be used where the public address is statically assigned to the node and is not expected to change.\nProcess to Restrict Click Info in the top right corner of the page, or click the backtick key (`) to show the menu Click the padlock button next to Public IP to lock (Do not enable if using DHCP. Static addresses only) Public IP should now show padlock icon as locked as shown below Click the padlock again to remove the restriction at any point. Alerts: Once locked changing the Public IP of the node will result in an alert being generated as seen belo. At this point no data plane traffic will be allowed.\n","categories":"","description":"","excerpt":" This security feature allows restricting node functionality to the …","ref":"/tutorials/limit-node-functionality/","tags":"","title":"Limit Node Functionality to Current Public IP"},{"body":"Add Member This will add the selected node to the cluster and gain any configuration defined at the cluster level.\nClick Actions \u003e Add Node. Action \u003e Add Node Select the desired node from the list. This is a type-ahead field that will filter the list as you type. Click Add Node. Member node selection list You are prompted if you want to configure cluster heartbeat settings. Prompt to configure heartbeat settings No - The node is added to the cluster and you will manually need to navigate to the node’s cluster settings and configure the heartbeat before it will be healthy. Yes - The configuration prompt allows you to set the Heartbeat and, optionally, the Status Endpoint settings. Heartbeat and Status Endpoint settings Remove Member Removing a node from a cluster will remove the cluster heartbeat and endpoint settings defined on the node and any cluster-level configuration.\nSelect the desired node from the member table. Click Action \u003e Remove Node. Remove Node option from Actions Confirm you want to remove the node by clicking Yes. ","categories":"","description":"","excerpt":"Add Member This will add the selected node to the cluster and gain any …","ref":"/docs/clusters/manage-members/","tags":"","title":"Manage Cluster Members"},{"body":" This feature collects traceroute-like data to all its connected peers and stores the results in the Trustgrid cloud for historical review.\nNetwork hop monitoring requires version 20220808 or newer to gather the required data. How it Works The node will send out packets to each peer’s public IP and port (if a gateway) with incrementing Time To Live (TTL) values. As the packets pass through each router (or hop) along the way the TTL is decreased by one. Any time a router receives a packet with at TTL with the value 1 it will drop the packet and can reply with an ICMP packet saying “Time to Live has been exceeded” The node uses these ICMP packets to calculate latency to each hop. Known Limitations There are several known limitations with gathering this data:\nRouters on the internet are not required to respond with ICMP. This will lead to gaps in the Hop numbers. Those that do respond sometimes deprioritize their response which leads to misleading latency numbers. If you see a hop with high values, but the the values for higher hop numbers is normal this is not likely the cause of problems If a hop has high values and all subsequent hops have higher values this is likely the source of the latency/loss Firewall rules have to allow the packets and the responses. By utilizing the same TCP port as the gateway, all data collected from edge nodes should be allowed out. Some firewalls/routers have trouble correlating the TCP request with the ICMP response which leads to no data Gathering this data requires compute resources on the node and the gateway. Trustgrid recommends only enabling on edge nodes that have frequent latency or packet loss issues as a troubleshooting tool. It is not recommended to enable this feature on public gateways or private gateways with a large number of clients Enabling Network Hop Monitoring Navigate to the node you want to enable Verify there version is 20220808 or higher Navigate to Gateway under the System section Enable Network Hop Monitoring and click Save Special Considerations Azure Nodes If you enable this on an edge node running on an Azure VM, the default security group rules will prevent responses from intermediate hops on the path. You will still get data from the final hop, which is the target gateway.\nYou will need to add an inbound rule to the node’s public interface network security group.\nThe rule needs the settings shown below:\nThe rule has to allow the destination of any which is not without risk. Make you weight the risks and benefits and are aware what VMs in Azure are using the same security group. Viewing Network Hop Data Navigate to the node you want to view Select Data Plane on the left Select the peer you wish to view data for. You will see a table of hops appear in the bottom right. You can select a time point on the latency chart, and the hops table will update to show the data for that time point. ","categories":"","description":"","excerpt":" This feature collects traceroute-like data to all its connected peers …","ref":"/tutorials/gateway-tools/monitoring-network-hops-to-peers/","tags":"","title":"Monitoring Network Hops to Peers"},{"body":" NATs allow Trustgrid to alter the source and/or destination IP address of layer 3 traffic as it enters or leaves the VPN.\nAdding an Interface NATs are scoped to an interface. Add an interface from the Actions menu.\nAdd Interface dialog Field Name Description Network Interface Select the desired interface from the drop down list of those available on the node or cluster. Description User friendly description of this interface attachment. This field is initially populated with the description from the selected interface. Traffic Matching mode This option is only available if the the attached virtual network does not have NO-NAT mode enabled.\nTraffic not matching a NAT should be denied on this interface. Inbound traffic not matching a NAT should be allowed on this interface. Outbound traffic not matching a NAT should be allowed on this interface. Outside NAT Table Used to define outside NATs Inside NAT Table Used to define inside NATs Inside NATs An inside NAT defines how a local device IP address translates into a virtual network address. For instance, a local device may have a local IP address of 192.168.1.100, but you may want it to appear to other devices or applications on the virtual network as IP address 10.0.20.100. Or you may want an entire block of local IP addresses to show up on the virtual network as a different block. You can do this translation with an inside NATs. Inside NATs also control what local devices can participate on the virtual network. If a local device does not have an inside NAT configured that includes its IP address, it can’t access or be accessed by other devices on the network. Inside NATs require the following information:\nField Name Description Local CIDR The local IP address or address block that should be mapped into the virtual network. It should be entered in CIDR block format (eg - 192.168.100.0/24 or 192.168.100.51/32). Virtual CIDR The network IP address or addresses that the local IP addresses should be mapped to, also entered in CIDR block format. Network addresses map 1x1 with local addresses, so the prefix length (the /xx number of the CIDR) should be the same in both the local and network CIDR blocks of the inside NAT entry. Outside NATs By default, when a device on the local network of a node receives traffic from a remote device on the network, the remote device IP address will be the IP address that was entered in the local CIDR block for the remote node’s inside NAT entry for the remote device. For instance, if the remote device was mapped to network address 10.0.100.1, then its traffic on the local network will appear to come from IP address 10.0.100.1. However due to the local network configuration, there may be some situations where it is desirable to translate remote network addresses before egressing onto the local network. For instance on a local network of 192.168.0.0/16, a user may want the remote devices virtual network IP of 10.0.100.1 to be translated to 192.168.50.5 so that it fits better into the local network setup. This kind of translation can be achieved by adding outside nats. To add an outside NAT you must enter the following information:\nField Name Description Network Group The network IP address or addresses that should be translated before egressing onto the local network. This should be entered in CIDR block format. Local CIDR The local IP address or addresses that the network addresses should be mapped to, also entered in CIDR format. An outside NAT is required for all nodes and clusters attached to a virtual network unless the virtual network is in NO-NAT mode. Note there are situations where it may be desirable to make multiple remote devices masquerade as one local IP address though the use of port address translation (PAT). This can be achieved by defining an outside nat in which the network CIDR contains a larger address space than the local CIDR. For instance, an entry with network CIDR 10.0.1.0/24 and local CIDR 192.168.100.10 would make all remote devices with network IP addresses in 10.0.1.0/24 appear as IP address 192.168.100.10 on the local network.\n","categories":"","description":"","excerpt":" NATs allow Trustgrid to alter the source and/or destination IP …","ref":"/docs/nodes/vpn/nats/","tags":"","title":"Network Address Translation (NATs)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/networking/","tags":"","title":"networking"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/node/","tags":"","title":"node"},{"body":"Symptoms Node will not update either automatically or when manually triggered Node will not be able to pull down container images from the organization repository Cause The Trustgrid node cannot connect to repo.trustgrid.io on port 443 to update packages Resolution Confirm the node can resolve repo.trustgrid.io Ensure the node can connect to repo.trustgrid.io:443 ","categories":"","description":"","excerpt":"Symptoms Node will not update either automatically or when manually …","ref":"/help-center/kb/upgrade-process/443-blocked/","tags":"","title":"Node Behavior When Port 443 is blocked"},{"body":" This process is intended to help customer support personnel quickly identify the scope of a node down problem and get services back online as quickly as possible.\nNode Down Triage Triage Checklist Determine Production Status of the Trustgrid Node\nConfirm High Availability or Disaster Recover is Functioning\nIf clustered, is the partner active and working\nIf there is a second site, confirm if it is active\nDetermine the type of outage (Control Plane, Data Plane or Both)\nDetermine Production Status of the Trustgrid Node Use the Production Status Tags to determine if the node is in use and expected to be online.\nConfirm High Availability or Disaster Recover is Functioning Before troubleshooting why a node is down we should determine if the services it provided can be provided in the interim by a cluster member or devices at a secondary/disaster-recovery site.\nIs the Node a Cluster Member Check if partner member is online:\nIf Yes:\n- Confirm partner member is now active and operating normally. - The issue is limited to this specific Node. This could be its power input, the hardware or operating system, configuration, or its internet connection (if different than partner member). If No:\n- Possible site-level issue including power or internet provider - Proceed to Secondary / DR Site Is there a Secondary / DR Site for this Node/Cluster? Are the nodes deployed at the secondary site online in the Trustgrid?\nIf No:\n- Confirm nodes for other end-user sites are not also offline which might indicate a wider spread issue. Escalate to Trustgrid Support if you suspect a major issue with the Trustgrid system. - If limited to a single customer it is recommended to contact that customer immediately. They may be experiencing an outage or performing maintenance. If Yes:\n- If the customer is configured for Automatic Failover between sites, verify that traffic is flowing through the active member at the secondary site. - If the customer is configured for Manual Failover you will need to adjust the route destination to point to the secondary site. Determine Connectivity Status of the Trustgrid Node Because Trustgrid provides independent control and data planes, there are a few ways it can manifest as “down”:\nControl Plane Down The node appears offline from within the Trustgrid portal. This indicates that the node shutdown or has not sent a heartbeat notification to Trustgrid within the past 10 minutes. Data Plane Down The node appears online from within the portal but reports it is unable to connect to one or more gateway nodes. This can be indicated by the Data Plane Status indicator when viewing the node in the portal, or by receiving a “Gateway Connectivity Health Check” failure event notification. Both of these only work if the Control Plane is currently working. Both Control and Data Plane Down In this situation the node appears down in the Trustgrid Portal and users/applications are unable to reach services across the data plane between the Gateway and Edge sites. This is the most common scenario. While the Data Plane is most critical for the services provided across the device, first priority should be restoring the Control Plane connection so that additional troubleshooting tools are available. Often this process also uncovers the reason the data plane is down. ","categories":"","description":"","excerpt":" This process is intended to help customer support personnel quickly …","ref":"/tutorials/operations-runbook/node-down-response/","tags":["node","troubleshoot","help"],"title":"Node Down Response"},{"body":"","categories":"","description":"Release notes related to the Trustgrid Node software\n","excerpt":"Release notes related to the Trustgrid Node software\n","ref":"/release-notes/node/","tags":"","title":"Node Release Notes"},{"body":"SNMP Standard OIDs Trustgrid exposes data through standard OIDs to provide information about the below resources. Most monitoring software will detect these automatically.\nCPU\nMemory\nDisk\nNetwork Interface\nTrustgrid Custom OIDs The following custom data points are made available under Trustgrid’s Enterprise OID .1.3.6.1.4.1.53560 which will need to be used as the prefix for the below OIDs\n.2.2.1 - Lists VPN Stats in a table each virtual network is a row in the table (signified with the suffix .# for that networks row number) with a value for each metric\n.1.# - Lists the interface name associated with the below Virtual network name.\n.2.# - Lists the Virtual Network names associated with this node.\n.3.# - Lists the Number of New Flows\n.4.# - Lists the Number of Active Flows\n.5.# - Lists the Inbound TCP Octets since last polling\n.6.# - Lists the Outbound TCP Octets since last polling\n.7.# - Lists the Inbound UDP Octets since last polling\n.8.# - Lists the Outbound UDP Octet since last polling\n.9.# - Lists the Inbound ICMP Octets since last polling\n.10.# - Lists the Outbound ICMP Octets since last polling\n.2.3.0 - Lists the Control Plane connectivity status. Returns UP if connected and DOWN if disconnected\n.2.4.0 - Lists Data Plane connectivity status. Returns UP if connected to all gateways and DOWN if disconnected from at least one configured gateway\n.2.5.1 - Table with name and value of all tags associated with the node\n.2.6.0 - Integer showing the number of available data plane connections (known gateways if an edge node is queried, known edge node clients if a gateway node is queried)\n.2.7.0 - Integer showing the number of active data plane connections\n.2.8.0 - String showing the cluster status of the node. Possible values are PRIMARY, SECONDARY, or NOT_CLUSTERED\nExample output The output below shows the device has two virtual networks (mesh \u0026 LRE-NETWORK) both attached to the same physical interface (enp0s20f1). The mesh network has no activity. The LRE-NETWORK has significant TCP traffic and a large number of flows.\niso.3.6.1.4.1.53560.2.2.1.1.1 = STRING: \"enp3s0\" iso.3.6.1.4.1.53560.2.2.1.1.2 = STRING: \"enp3s0\" iso.3.6.1.4.1.53560.2.2.1.1.3 = STRING: \"enp3s0\" iso.3.6.1.4.1.53560.2.2.1.2.1 = STRING: \"Default-Route\" iso.3.6.1.4.1.53560.2.2.1.2.2 = STRING: \"mesh\" iso.3.6.1.4.1.53560.2.2.1.2.3 = STRING: \"LRE-NETWORK\" iso.3.6.1.4.1.53560.2.2.1.3.1 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.3.2 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.3.3 = INTEGER: 6562 iso.3.6.1.4.1.53560.2.2.1.4.1 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.4.2 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.4.3 = INTEGER: -8328 iso.3.6.1.4.1.53560.2.2.1.5.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.5.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.5.3 = Counter64: 5821341 iso.3.6.1.4.1.53560.2.2.1.6.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.6.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.6.3 = Counter64: 132753210 iso.3.6.1.4.1.53560.2.2.1.7.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.7.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.7.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.8.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.8.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.8.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.9.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.9.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.9.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.10.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.10.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.10.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.3.0 = STRING: \"UP\" iso.3.6.1.4.1.53560.2.4.0 = STRING: \"UP\" iso.3.6.1.4.1.53560.2.5.1.1.1 = STRING: \"test\" iso.3.6.1.4.1.53560.2.5.1.1.2 = STRING: \"enviro\" iso.3.6.1.4.1.53560.2.5.1.2.1 = STRING: \"null\" iso.3.6.1.4.1.53560.2.5.1.2.2 = STRING: \"LRE\" iso.3.6.1.4.1.53560.2.6.0 = INTEGER: 8 iso.3.6.1.4.1.53560.2.7.0 = INTEGER: 8 iso.3.6.1.4.1.53560.2.8.0 = STRING: \"NOT_CLUSTERED\" ","categories":"","description":"","excerpt":"SNMP Standard OIDs Trustgrid exposes data through standard OIDs to …","ref":"/docs/nodes/snmp/oids/","tags":"","title":"OIDs"},{"body":" Edge nodes can be configured in an “on a stick” configuration, in which only a single NIC is used for each node. Operating in this mode is supported only when using Layer 3 or Layer 4 configuration where hosts behind gateway nodes need access to data behind edge nodes.\nIn this configuration, the source IP of traffic from the edge node depends on whether Layer 3 or Layer 4 is being used, as illustrated below.\nLayer 3 Traffic will originate only from the current active node from the IP address(es) specified in outside NAT rules in the edge node’s config.\nLayer 3 - routed single edge node Trustgrid node(s) used as the next hop in a route for the Trustgrid virtual network. Traffic at the edge will originate from the node’s IP address.\nLayer 4 Traffic will originate from either edge node with round-robin load-balancing with the source IP address being the IP address of whichever node the traffic originates from.\n","categories":"","description":"","excerpt":" Edge nodes can be configured in an “on a stick” configuration, in …","ref":"/tutorials/deployments/ros-config/","tags":"","title":"On a Stick Configuration"},{"body":"\nField Name Description Issuer The OpenID issuer URL. This will be provided to you by your OpenID Identity Provider. Client ID The OpenID application client ID. This will be provided to you by your OpenID Identity Provider. Client Secret The OpenID application client secret. This will be provided to you by your OpenID Identity Provider. ","categories":"","description":"","excerpt":"\nField Name Description Issuer The OpenID issuer URL. This will be …","ref":"/docs/idps/open-idp-fields/","tags":"","title":"OpenID"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/operations/","tags":"","title":"Operations"},{"body":"Invited users utilize Trustgrid’s native authentication provider for password complexity and multi-factor authentication.\nUsers authenticating via a custom identity provider will use that system’s password complexity and MFA requirements.\nPassword Complexity At least 10 characters in length Lower case (a-z), upper case (A-Z) and numbers (0-9) Special characters (!@#$%^\u0026*) No more than 2 identical characters in a row Cannot reuse the last 5 passwords Cannot be in the list of the 10,000 most common passwords Cannot include the user’s name, username, or email address Multi-factor Authentication Requirements The Trustgrid native provider utilizes a One-time Password via applications such as Google Authenticator or similar to provide multi-factor authentication during login.\n","categories":"","description":"","excerpt":"Invited users utilize Trustgrid’s native authentication provider for …","ref":"/docs/user-management/users/password-complexity-requirements/","tags":"","title":"Password Complexity and MFA Requirements"},{"body":" This tool runs a ping from the gateway node to a remote edge node to verify the Trustgrid overlay network is functioning as expected.\nUsage Navigate to the node from which you want to test connectivity.\nClick the Data Plane link on the left hand side.\nAmong the gateways (in the case of an edge node) or edge nodes (in the case of a gateway), click Ping on the row of the node you want to test.\nA modal will pop up with options. Click Execute to start the ping.\nA window will pop up with the ping output. You can adjust the interval to change the time between pings (in seconds), and the size to change how much data is sent.\n","categories":"","description":"","excerpt":" This tool runs a ping from the gateway node to a remote edge node to …","ref":"/tutorials/gateway-tools/ping-remote-node/","tags":"","title":"Ping Remote Node"},{"body":"Prerequisites Both the source and destination nodes should have a virtual management IP configured There should be a unique IP under Node \u003e Configuration \u003e VPN \u003e Virtual Management IP In the virtual network route configuration in your domain, a route should exist with the following settings: Destination: node name (even if part of a cluster) Destination CIDR: virtual management IP with a /32 suffix Metric: 1 Use the View Virtual Route Table tool to verify both the source and destination nodes have valid, available routes to each other’s virtual management IP Need to know the virtual IP address of the inside NAT if targeting a local IP on the destination network Need to know the virtual management IP address of the destination node if only verifying VPN network connectivity The Ping Remote Node tool allows you to verify data plane communication by node name Usage Login to the Trustgrid portal and navigate to the Node from which you want to test connectivity.\nSelect VPN under the Network section.\nClick the Tools button and select the Ping Remote Virtual Host option from the Select a service dropdown.\nModify the host parameter to the target virtual IP address and click Execute.\nA window will pop up with the content like below.\nResponses There are several configuration elements that need to be configured and working for a VPN deployment to be successful. When something is not configured correctly, the trustgrid node responds to an ICMP ping with a variety of different “Destination Unreachable” error messages that can indicate what exactly appears to be wrong. Here are the error responses the node may give when attempting to ping a remote machine through the VPN when something is amiss.\nDestination Net Unknown This error means that the node cannot find an interface network binding with an inside and outside nat that match the requests source and destination IP. You should re-examine the inside and outside nats for the node interface that is receiving the packet, and make sure that an inside nat is defined that matches the source machines local IP and an outside nat that matches the virtual destination IP (or that no outside nat is present, which defaults to 1x1).\nDestination Net Unreachable This error means that the node cannot find a route defined at the domain/network level for the destination IP in this request. You should examine the domain route definitions and make sure that one is included for the virtual destination IP address you are trying to ping. Use the View Virtual Route Table tool using the target IP as a filter to confirm the route exists and is available.\nDestination Host Unreachable This error indicates that there is a route defined for the ping dest IP, but that the destination node associated with the route is not currently connected to this node. You should look at the routes in the source node’s detail page in the portal and make sure that there is one included for the destination node that should be receiving the request.\nPacket Filtered This error results when the ping request could not be performed do to the lack of a domain network ACL allowing the request. While this itself only indicates that ICMP traffic is not allowed between these two hosts in this direction, it can be used as a valuable indicator of a bigger policy issue. Check your ACL list in the portal to ensure that icmp are allowed between these to hosts.\nDestination Host Unknown This error happens when the ping packet made it to the destination node, but no set of inside/outside nats could be found that include the source and destination IPs of this request. Check the destination node VPN settings to ensure an inside NAT is present for the virtual destination IP of the request, and either an outside NAT exists and includes the virtual source IP, or no outside NAT is present, which defaults to 1x1.\nNo Ping Response Error When a ping sits there and no response is received, usually the best way to troubleshoot further is to sniff interface traffic with a filter of icmp and host \u003ctarget-ip\u003e on the source and dest nodes.\nWhen troubleshooting, keep in mind that the lack of an error likely means one of the following:\nThe local node VPN interface that should be receiving the packet hasn’t been configured correctly. The local firewall, router or target machine isn’t correctly routing packets to the source node. There is an ARP issue on either the source or destination node where the node isn’t responding correctly (tcpdump -i \u003cdata_nic\u003e arp) There is no responding machine on the remote side! ","categories":"","description":"Ping a remote virtual host from a node","excerpt":"Ping a remote virtual host from a node","ref":"/tutorials/remote-tools/ping-remote-virtual-host/","tags":"","title":"Ping Remote Virtual Host"},{"body":" User Management Policies define what an authenticated user is allowed to do within the Trustgrid system. Policies either allow or explicitly deny specific actions by the user.\nTypes of Policies Trustgrid Managed Policies These policies start with the prefix builtin-tg and are created and managed by Trustgrid to provide a starting level of permissions based on common user types. Descriptions of the user types for each role are listed below.\nAs Trustgrid adds new features or actions theses policies will automatically be updated to include appropriate permissions. These policies cannot be edited by customers.\nCustomer Managed Policies These policies can be defined by customers to meet the specific needs of their teams.\nBest Practices Start by attaching the Trustgrid Managed Policies that best fits the user’s minimum, required needs following the principle of “least privilege.” If additional permissions are required, create a Customer Managed Policy that includes those specific rights rights. Then attach that policy to the user. Trustgrid Managed Policy Descriptions Below are the basic descriptions of the Trustgrid Managed Policies including an example role description. Trustgrid will use this description to guide if it is appropriate to add new permissions to the policies.\nThe policies are listed from lowest permissions to highest.\ntg-builtin-apps-user This policy provides minimal permission for a user to connect to the Trustgrid applications portal for using Remote access apps. The user has no rights within the Trustgrid management portal and should likely be given a landing page of /apps to be redirected straight to the applications portal.\nTarget User: End user for remote access applications with no knowledge of the Trustgrid system.\ntg-builtin-monitor This policy provides read-only access to non-sensitive resources in the Trustgrid management portal.\nTarget User: Project manager or executive sponsor that needs to view information in the portal, but does not require tools required to troubleshoot or resolve issues.\ntg-builtin-operator This policy provides mostly read-only access but also has the ability to view and use tools within the portal and perform actions to resolve common issues (e.g. restarting/rebooting nodes).\nTarget User: Entry level technical resources responsible for initial triage of support issues.\ntg-builtin-node-admin This policy provides the ability to make changes to most resources but is restricted from making changes that can have a wide impact such as changing a gateway node server settings.\nTarget User: Mid-level technical resources that need to make changes to things like node VPN configuration and virtual networks routes, but should be restricted from making changes that can impact an entire organization when possible.\ntg-builtin-admin This policy has permissions to change almost all resources with the exceptions of Identity Providers and User Management.\nTarget User: Senior technical resources needing near full access.\ntg-builtin-access-admin This policy grants the ability to manage permissions and identity related resources including configuring Identity Providers, Add/Inviting Users, and creating and assigning policies\nTarget User: Management or access control related resources responsible for granting access to the Trustgrid system.\nResource-Scoped Policies Policies have a Resources section that allow the permissions granted to be limited to specific Trustgrid resources, such as nodes and clusters. This can be used to present a user with an extremely limited view in the portal. For example, an edge site technical contact could be given a login that was only permitted to see the nodes at their site.\nIn order to grant users access to the portal a second policy is required granting the portal::access permission to the * resource. Trustgrid Resource Names or TGRN Trustgrid has adopted a resource naming convention that follows the basic format: tgrn:tg::\u003cservice\u003e:\u003cresource-type\u003e/\u003cresource-id\u003e\nWildcard TGRN By default the Resources field is populated with * which grants permissions to all resources. This is included by default for new policies and would need to be removed to provide TGRN restricted permissions.\nNode TGRN A node’s TGRN will start with the below prefix: tgrn:tg::nodes:node/ To get the node’s complete TGRN you’ll need to append the node ID which is visible by navigating to the node and either copying from the URL or using the Node ID field in the Info visor drop down\nA complete node TGRN looks like: tgrn:tg::nodes:node/ab3550cf-f3da-4d90-b4b1-b870fc85c9c7\nCluster TGRN Cluster TGRN start with the prefix: tgrn:tg::nodes:cluster/ This is followed by the cluster’s fully qualified domain name (fqdn) which is the combination of the cluster name and your organizations trustgrid domain. This visible in the URL when you navigate to a cluster in the portal.\nA complete cluster TGRN looks like: tgrn:tg::nodes:cluster/awscluster.training.trustgrid.io\nPolicy Management Creating/Editing Policies Navigate to User Management → Policies For a new policy click Create Policy. To edit an existing find it in the list and click on its name. The policy wizard has two sections. The left section groups permissions by category and is where you allow or deny permissions. The right section shows the resulting JSON of the policy and is read only. As an example we will create a role to grant users the ability to see, edit and comment on Provisioning orders. a. Under Permissions, search for orders b. Click the green check box next to each of the desired permissions. (Clicking the X would explicitly deny that permission which will take precedent over any other policy that allows that permission) c. You will notice the Policy JSON updated as you select permissions d. Click Save Attaching Policies and Viewing Effective Permissions Policies are attached and their cumulative effect can be viewed under User Management → Users by selecting the desired user.\n","categories":"","description":"","excerpt":" User Management Policies define what an authenticated user is allowed …","ref":"/docs/user-management/policies/","tags":"","title":"Policies"},{"body":"Port forwarding allows a node to expose an L4 service on the virtual network.\nPort Forward listing Field Name Description Virtual IP Address The IP to expose the service on the virtual network. Virtual Port The port to expose the service on the virtual network. Local Service The service to expose. ","categories":"","description":"","excerpt":"Port forwarding allows a node to expose an L4 service on the virtual …","ref":"/docs/nodes/vpn/port-forwarding/","tags":"","title":"Port Forwarding"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/remote-tools/","tags":"","title":"Remote Tools"},{"body":"When troubleshooting a problem on edge or gateway nodes, reviewing node events can provide critical information about the nature of the problem.\nChoose the node that may be causing the problem Scroll down to Events Look for any critical problems For more issues involving multiple nodes, review [Domain Node Events](need link for this).\nChoose the Operations tab View Events across the organization Types]](https://docs.trustgrid.io/docs/alarms/event-types/)\n","categories":"","description":"","excerpt":"When troubleshooting a problem on edge or gateway nodes, reviewing …","ref":"/help-center/review-node-events/","tags":"","title":"Review Node Events"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/s3/","tags":"","title":"s3"},{"body":"When configuring a SAML IDP, the provider will often provide a metadata XML file to simplify configuration. If provided, you can upload that on the SAML configuration page, which will automatically populate the fields necessary for SAML authentication.\nField Name Description Issuer A URL that will point to the IDP, typically with some identifying information so the IDP can determine the source of the request. This will be provided by your SAML identity provider. Login URL A URL that will initiate the login process. This will be provided by your SAML identity provider. Identity Provider Signing Certificate A certificate used to authenticate requests between Trustgrid and the SAML IDP. This will be provided by your SAML identity provider. ","categories":"","description":"","excerpt":"When configuring a SAML IDP, the provider will often provide a …","ref":"/docs/idps/saml-idp-fields/","tags":"","title":"SAML"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":" The below processes should be used to move traffic between sites in event of a complete site down scenario. This is handled by the Virtual Network Route Table.\nIn the examples below, xxxEdgeCluster is the primary site and xxx-edge3 is the secondary/disaster recovery site. Manual Failover When a customer has selected manual failover, a portal user will need to adjust the destination of all routes currently pointed at the failed site.\nFailing Over There will usually be routes for the nodes’ Virtual Management IP. These should not be changed in this process.\nIn the portal, navigate to Domain → Virtual Networks and then select the appropriate Virtual network.\nSelect the Routes panel from the left navigation bar.\nFilter the route table either using the node/cluster names or network to be failed over (shown below).\na. If there is more than one network that needs to be routed to the secondary site using node/cluster names to filter is more efficient Clear the destination field and start typing the name of the secondary site node/cluster. Select the appropriate node/cluster from the list. Click Save. Then select Review Changes.\nYou should see a modified route for each network you adjusted showing the previous and current destination. If everything looks correct click Apply Changes.\nIt may take 1-2 minutes for nodes to pull down the updated routing table. Once that has completed any new flow or connection will automatically be sent to the new destination node. If the node/cluster is still online at the primary site, and there are existing flows/connections they will persist at that site. To clear them restart the active node at the primary site. See the last step in the Forcing Failover section below for instructions. Failing Back To send traffic back to the primary site reverse the changes in the routing performed during the failover.\nAutomatic Failover When a customer has selected automatic failover between sites there should be no intervention required if the primary site goes offline. The route table will be configured with multiple routes with different metrics. When determining where to send virtual traffic a node will select:\nThe most specific route - meaning if there is a route for 192.168.100.1/32 and another for 192.168.100.0/24, the /32 route will be preferred With the lowest metric that is currently available - meaning this node has an active tunnel to the destination node/cluster Below reflects a typical automatic failover configuration for a network\nForcing Failover or Prevent Auto-Failback If it is necessary to move traffic to the secondary site without the primary site going offline follow the below process.\nAlso, if a failure of the primary site has occurred and you want to ensure traffic does not automatically return to that site if it comes online (e.g. it is unstable) you can follow the same process.\nIn the portal, navigate to Domain → Virtual Networks and then select the appropriate Virtual network.\nSelect Routes from the left navigation bar.\nFilter the route table either using the node/cluster names or network to be failed over (shown below)\na. If there is more than one network that needs to be routed to the secondary site using node/cluster names to filter is more efficient Adjust the metric so that the primary site is a higher number than the secondary site. The maximum metric value is 200. Click Save and navigate to Review Changes\nYou should see a change like below for each route adjusted. Click Apply Changes if all looks correct.\nIt may take 1-2 minutes for nodes to pull down the updated route table. At that point, they will route new flows/connections to the new destination.\nBecause the primary site is still online, you will need to restart the active node at that site to clear out any existing flows/connections.\na. If it’s a cluster, navigate to the cluster and then select the currently active node from the overview page. If a single node site, navigate directly to that node.\nb. From the toolbar select Restart\nc. Enter the node’s name and click confirm\nRestore Traffic to Primary Site To restore traffic to the primary site repeat the above steps but set the route for the primary site to have the lowest metric.\n","categories":"","description":"","excerpt":" The below processes should be used to move traffic between sites in …","ref":"/tutorials/operations-runbook/site-failover/","tags":["failover","help","troubleshoot"],"title":"Site Failover"},{"body":" The sniff interface traffic tool performs a traffic capture on the selected node, which can help troubleshoot connectivity issues.\nSummary The Sniff Interface Traffic tool allows you to monitor traffic in real-time but there are certain instances where you need to be able to capture traffic to a file for further analysis. For example, intermittent issues may require leaving a capture running for an unknown period of time. Or, perhaps you need to review the application data within the packet payload.\nThe Traffic Capture is started with a standard tcpdump filter, just like the sniff interface tool, and max capture file size. Once the capture is stopped the captured data is written to .pcap files which can then be transferred for review.\nThe pcap files will include the data payload of any communication captured. If a non-encrypted protocol (such as HTTP or FTP) is used this could be visible in clear text. Because of the risk of data being visible, there are several restrictions and controls in place:\nThe permission to run this tool (node-advanced::service:tg-capture) must be granted on a per-user basis. Not even administrators have this feature by default. Trustgrid employees are specifically denied the ability to run this tool. Trustgrid employees are not permitted to view data transferred through our devices, so please do not send us the resulting pcap files. Accessing \u0026 Using Sniff Interface Traffic Login to the Trustgrid portal and navigate to the Node from which you want to capture traffic.\nSelect Interfaces under the Network section.\nClick the Sniff Traffic button\nSet the appropriate parameters.\niface The interface name filter The tool utilizes TCPDump filtering syntax, which can help isolate interesting traffic. The below filter would show only ICMP and TCP traffic Click Execute to view the captured traffic\nTransfer PCAP Files Now that you have created the pcap files you will need to transfer them somewhere for analysis. The Trustgrid node has standard file transfer clients installed including scp, sftp, and ftp.\nOn a Local Network If the destination file server is on the local network of the node you will use the standard Terminal tool to run the file transfer commands.\nNavigate to the node Open a terminal from the toolbar at the top right You will need to ensure that:\nThe node has a valid route to the destination server’s network Any firewall between the node and destination server allows the traffic The destination server is configured to allow the node IP to connect Once you are in the terminal with the above configured an example scp command would look something like scp ~/captures/capture-2021-07-16_17-59-23.pcap0 username@172.16.100.10:/captures/capture-2021-07-16_17-59-23.pcap.\nAcross the Virtual Network If the destination file server is across a Trustgrid virtual network you will need to use the VPN Admin terminal to run the file transfer commands. This uses the nodes configured Virtual Management IP to communicate to remote resources.\nNavigate to the node\nSelect the VPN panel. You may need to select the virtual network to use, if your device is connected to multiple.\nSelect the Admin Terminal button from the tools dropdown.\nYou will need to ensure that:\nThe node has a virtual management IP assigned. The tool will not launch without this. A route for the virtual management IP exists in the virtual network route table. On the destination node, that a 1:1 NAT exists for the destination file server assigning it to a virtual IP. A route that includes the destination file server’s VIP exists in the network route table. A virtual network access policy exists that allows the source node’s virtual management IP to connect to the destination file server’s VIP on the required port for your protocol. The destination side node has a valid route to the destination server’s network. Any firewall between the node and destination server allows the traffic. The destination is configured to allow the node IP to connect. Once you are in the admin terminal with the above configured, an example SCP command would look like scp ~/captures/capture-2021-07-16_17-59-23.pcap0 username@10.200.100.10:/captures/capture-2021-07-16_17-59-23.pcap.\nUseful Filters The below filters can be combined using “and” \u0026 “or” without quotes\nYou can filter based on protocol such as “tcp”, “udp”, or “icmp” without quotes Best practice is to filter for what you want to see rather than filter out what you don’t want to see To see only traffic for a specific host use “host x.x.x.x” with the IP address in place of the x.x.x.x To see only traffic for a specific port use “port XXXX” replacing the XXXX with the desired port number If capturing traffic on a clustered node, you should filter out the cluster port traffic. Typically port 9000 or 1975. E.g., not port 9000 If capturing on the ETH0 - WAN Interface, you should filter out traffic to both Trustgrid’s network (35.171.100.16/28) and your data plane gateways’ network or public IP. You’ll need to identify the actual network or IPs. E.g., not net 35.171.100.16/28 and not net X.X.X.X/X or not net 35.171.100.16/28 and not host X.X.X.X. ","categories":"","description":"","excerpt":" The sniff interface traffic tool performs a traffic capture on the …","ref":"/tutorials/remote-tools/sniff-interface-traffic/","tags":"","title":"Sniff Interface Traffic"},{"body":"Static routing allows a node to route traffic to a remote network in addition to and virtual network define routes. At this level routes can be created for destination CIDRs outside the virtual network’s Network CIDR\nFind static route definitions and change them under the Static Routing section of the VPN configuration.\nAdd Route dialog Field Name Description Destination The node to route traffic to. Destination CIDR The network to route traffic to. Metric The route metric. Lower metrics are processed first. Gateway Path An optional gateway path to use for the route. Only visible if additional Gateway paths are defined on the node. ","categories":"","description":"","excerpt":"Static routing allows a node to route traffic to a remote network in …","ref":"/docs/nodes/vpn/static-routing/","tags":"","title":"Static Routing"},{"body":" The matrix below defines the primary responsible party for troubleshooting and resolving different types of issues. Trustgrid support can be engaged to assist in resolving issues not directly in scope of their responsibility.\nOrganization and Roles Trustgrid Trustgrid is a software and services provider that operates a multi-tenant cloud management system and assists customers and end-users with the deployment and management of a data transfer plane.\nCustomer Customers have a direct, contractual relationship with Trustgrid to utilize Trustgrid’s software and services. Depending on the contractual relationship with Trustgrid, Customers may also assume the role and responsibilities of End Users.\nEnd-User End Users own and operate a physical, virtual or cloud environment in which the Trustgrid software may be installed.\nTerminology Field Name Description Trustgrid Management Portal Cloud-based system used to remotely manage, monitor, and configure Trustgrid Nodes. Trustgrid Node Appliance running Trustgrid’s software to facilitate Trustgrid Connect, EdgeCompute, and RemoteAccess services. These appliances could be deployed on physical devices or as virtual machines. The appliance consists of the Trustgrid software and the underlying operating system (OS). Customer Site Site with Trustgrid node(s) deployed and managed by the Customer. End-User Site Site with Trustgrid node(s) deployed and managed by the End-User. Support Matrix Issue Type Trustgrid Customer End-User Trustgrid software or operating system issues Full None None Control Plane Connectivity Shared Shared - Customer Site Shared - End-User Site Data Plane Connectivity Limited1 Shared Shared Data Plane Performance Shared Shared Shared Power and physical network connectivity for Trustgrid Appliance None Full - Customer Site Full - End-User Site Internet Service None Full - Customer Site Full - End-User Site Internet Side Firewall None Full - Customer Site Full - End-User Site Local networking including switching and firewall None Full - Customer Site Full - End-User Site 1Trustgrid can work with the Customer and End-User to confirm that the Trustgrid system is working as expected and provide additional information to aid in troubleshooting.\nTier One Support The customer’s support team should be the end-user’s first point of contact. Trustgrid’s standard support contract makes the customer responsible for performing tier one support tasks prior to escalating Trustgrid Support. This includes contacting end-user technical resources as needed.\nExample tasks include:\nTroubleshooting offline Trustgrid nodes Changing Trustgrid node IP addresses Adding, modifying and testing NATs on Edge devices Modifying interface and domain routes, including facilitating failover between sites Disabling and removing nodes, clusters and related configuration (e.g. routes) when no longer needed Note: Some of the above services are managed by Trustgrid Professional Services during initial deployment ","categories":"","description":"","excerpt":" The matrix below defines the primary responsible party for …","ref":"/help-center/support-responsibility-matrix/","tags":"","title":"Support Responsibility Matrix"},{"body":" The TCP Port Test tool initiates a TCP session with a target IP address and port to confirm fully layer 4 connectivity. This would be similar to using netcat or telnet to test connectivity to a TCP port.\nUsage Login to the Trustgrid portal and navigate to the Node from which you want to test connectivity.\nSelect Interfaces under the Network section.\nClick the Interface TCP Port Test button\nUpdate the host with the target IP address and the port with the target TCP port. Click Execute to test connectivity.\nA new window will open with the results. If a new window does not open, check your browser’s pop-up blocker settings.\nA successful test will look like this:\nA failed connection will look like this:\n","categories":"","description":"","excerpt":" The TCP Port Test tool initiates a TCP session with a target IP …","ref":"/tutorials/remote-tools/tcp-port-test/","tags":"","title":"TCP Port Test"},{"body":" Thresholds provide a way to trigger events when different measurements exceed a given value. Thresholds configured at the domain level apply to all nodes in the domain, except when overridden. Events will be of type Metric Threshold Violation.\nTo view thresholds, a user will need domains::read permissions. To configure them, they will need domains::configure:threshold permissions.\nNavigate to your domain, and click Thresholds on the left.\nLoad Thresholds Load thresholds measure the health of the node itself.\nField Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Options are CPU usage (%), memory usage (%), disk usage (%), and embryonic flows (absolute count). Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Network Thresholds Network thresholds measure the health of the network from the node’s perspective.\nField Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Currently only latency (measured in milliseconds) is available. Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Target The target node to measure the latency to. Each node will measure the latency to the target node. ","categories":"","description":"","excerpt":" Thresholds provide a way to trigger events when different …","ref":"/docs/domain/thresholds/","tags":["domain","concepts"],"title":"Thresholds"},{"body":" The Trustgrid node console allows local console access to a Trustgrid Node whether a physical or esx node for the purposes of IP reconfiguration or network level troubleshooting and verification.\nAccessing the Trustgrid Console Utility Connecting to Trustgrid Local Console The following physical nodes can be connected via Keyboard and Monitor Netgate - HDMI Monitor output, USB Keyboard Protectli RM8B - VGA Monitor output, USB Keyboard Dell Precision 3240 compact - DisplayPort Monitor Output, USB Keyboard The following devices support connecting a serial cable connected to a laptop/desktop with the settings in the table below Device Serial Port Type Speed (bps) Data Bits Parity Stop Bits Flow Control Lanner NCA-1210 RJ45 115200 8 None 1 None Lanner NCA-1515 RJ45 115200 8 None 1 None VMware and Hyper-V based nodes can utilize the native console tools for each respective platform Node console is not supported on AWS nodes Logging In Login with username tgadmin and password of mac address of the wan nic of the device all lowercase including colons. Example 82:f5:48:a9:14:05\nThe mac address can be seen on the node page in the shadow. Depending on device type it will be enp2s0 for netgate / enp0s20f1 for lanner or ens160 for esx.\nTrustgrid Local Console Dashboard As seen below the console dashboard displays information on the current version of software the node is currently running as well as the connectivity/network status.\nThe first screenshot shows a healthy node that is able to successfully resolve public DNS names and connect to Trustgrid’s control plane. The second screenshot shows a node that is able to resolve DNS but unable to connect to the Trustgrid Control Plane.\nChanging a Trustgrid Node WAN IP via Trustgrid Console After the IP address is changed locally it must connect to the Trustgrid Cloud Controller and the new IP address must be saved in the portal to make the change permanent. If the device is rebooted prior to that it will revert to the previous configuration. To change the nodes WAN IP address select option 1.\nConfigure new static IP or select DHCP and select ok to save the changes. The IP should be updated in the Trustgrid Portal when the IP is changed. There will be a prompt in the portal to import the new IP settings.\nAfter the IP address has been changed and the device connects to the Trustgrid control plane the new IP configuration will need to be imported and saved. If you do not have portal access please work with Trustgrid Support\nChanging the Default Password The tgadmin user’s password can be changed by selecting option 3.\nYou will then need to enter the current password (mac address of wan nic all lowercase with colons) followed by the new password.\nAfter this password is changed it can only be reset if the device successfully connects to the Trustgrid control plane. Please ensure the password is appropriately documented for future use.\n","categories":"","description":"","excerpt":" The Trustgrid node console allows local console access to a Trustgrid …","ref":"/tutorials/local-console-utility/","tags":"","title":"Trustgrid Local Console Utility"},{"body":" The Trustgrid UI can be used to change the management IP or DNS servers configured on the Trustgrid node. It can also be used to confirm connectivity of the device to various Trustgrid services.\nRequirements: Physical access to the Trustgrid Node Laptop or Desktop with web browser (preferably Chrome) and network card (NIC) Ethernet Cable Steps to Access the Trustgrid UI to Update Management IP or DNS Servers: Local UI IP addresses\nInterface Label Local UI Website Attached Device IP Netgate - ETH1 Lanner 1210 - LAN2 Lanner 1515 Fiber WAN -SPF2 Lanner 1515 RJ45 WAN - SPF1 https://169.254.1.234 169.254.1.1/24 Lanner 1210 - LAN3 Lanner 1515 Fiber WAN - LAN3 Lanner 1515 RJ45 WAN - SFP2 https://169.254.2.234 169.254.2.1/24 Lanner 1210 - LAN4 Lanner 1515 Fiber WAN - LAN4 Lanner 1515 RJ45 WAN - LAN4 https://169.254.3.234 169.254.3.1/24 Lanner 1515 Fiber WAN - LAN5 Lanner 1515 RJ45 WAN - LAN5 https://169.254.4.234 169.254.4.1/24 Lanner 1515 Fiber WAN - LAN6 Lanner 1515 RJ45 WAN - LAN6 https://169.254.5.234 169.254.5.1/24 Disable the node in the Trustgrid Portal. This will disrupt and disable all data plane communication on the node.\nMake sure the ETH0/LAN1 interfaces is connected to a network device.\na. Ideally connected to the desired switch port so we can confirm status after changes, but at minimum it must have “link”\nReboot the Trustgrid Node by power cycling the device\nConnect your laptop/desktop NIC to one of the available interfaces (refer to the table above)\nConfigure a laptop/desktop NIC with the corresponding “Attached Device IP” from the table above\nIn a web browser (Chrome preferred) navigate to the corresponding Local UI Website from the table above. Note: you will get an SSL warning which is safe to accept the self-signed certificate\nOn a successful connection, you will be at the Trustgrid UI Login Screen. The username is “admin” and the password is the mac address (lowercase) listed on the sticker on the bottom of the node as seen below. This must include colons between every two characters. For example the password for the device pictured below would be 00:08:a2:0b:cd:30 all lowercase.\nUpon successful login you will see the Network Status page shown below. This shows the current connectivity status of various Trustgrid services. Green means connectivity is established and red means it is not. Select Management Interface (shown below) on the left hand side of page. You can then edit the IP Address/Netmask/Gateway and DNS Servers configured. Once the relevant changes have been made click on Apply and then click Save. Check the network status page to see if the Trustgrid services turn green. If they do then cable the node back as expected.\nContact Trustgrid support and communicate the IP information configured above so they can update the configuration in the portal and enable the node.\nIf the old IP information remains in the portal the device may revert the local configuration requiring a repeat of the above process. ","categories":"","description":"","excerpt":" The Trustgrid UI can be used to change the management IP or DNS …","ref":"/tutorials/local-node-ip/","tags":"","title":"Trustgrid Local UI for Node IP Reconfiguration"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/tunnels/","tags":"","title":"tunnels"},{"body":"\nThe Users panel is the primary panel for managing user identities and the policies attached to them. All changes in this panel require either the [builtin-tg-acess-admin] policy or similar permissions.\nAdding or Inviting Users Users can either be invited to the Trustgrid portal and utilize Trustgrid’s native authentication system, or be added and be authenticated by a customer configured Identity Provider (IdP).\nInviting Users For users that will utilize Trustgrid’s native authentication system, you will need to invite them with a valid email address.\nNavigate to User Management → Users\nUnder Actions select Invite User\na. Enter the user’s valid email address and select the desired base policy (more can be attached later). Click Send Invite.\ni. You should see a confirmation that the invite was sent like the one below. The user will receive an email with a link to the Trustgrid Portal or similar. They will need to click said link. Once at the Portal, the user will need to click the Sign Up option. The user must use the same email address that was invited to get access to your account. After filling out the required information and clicking Sign Up they will be prompted to configure Multi-Factor Authentication (MFA). Trustgrid recommends using a one-time password MFA such as Authy or Google Authenticator. a. Scan the QR code with your app\nb. Enter the passcode and click the \u003e\nc. You’ll be provided with a recovery code. Save this in a secure place, confirm it is safely recorded and click the \u003e\nAdding Users (with Identity Providers) If your account has an Identity Provider configured as a Portal Auth Provider, you use the Add User button to create an identity for them within Trustgrid.\nSome IdP’s allow for users to be synchronized automatically making this step unnecessary Navigate to User Management → Users\nClick the Add User button\na. Enter in the user’s email address. This must be the same email address the IdP sends back to Trustgrid, if unsure consult with your IdP Admin.\nb. Select your Identity Provider (if more than one)\nc. Select the desired base policy. More can be attached later.\nd. Click Save\nThe user can then navigate to the portal authentication domain associated with the IdP. They will be redirected to the IdP page and required to enter their username, password and MFA (if configured), then automatically sent back to the Trustgrid portal. Configuring Users After a user is added you can drill down into a specific account to:\nManage attached Policies View Effective Permission Change a User Landing Page View a User’s Group Membership View a User’s Associated IdP Manage Policies Attached to a User To attach/detach policies attached to a user:\nUnder User Management → User search for the target user and click their name.\nTo add a new policy: a. Click Attach Policy\nb. Search for the desired policy then select it.\nc. Click Attach\nTo remove a policy from a user: a. Click Detach (located to the right of target policy)\nView Effective Permissions To see what permissions a user currently has and what policy is providing that permission:\nUnder User Management → User search for the target user and click their name.\nIn the right Effective Permissions pane, find the permission in question. These permissions are grouped by category. Each entry will show:\na. If the permission is allowed :check_mark:, explicitly denied :x: or not defined (both icons gray) b. The action name c. A short description of what the permission allows d. what policy grants/denies the user the permission\nChange a User Landing Page The Landing Page allows you to designate where a user is directed within the portal on initial login. This is most useful for users that only need access to ZTNA Remote Access application at the /apps page.\nUnder User Management → User search for the target user and click their name. Enter in the desired landing page path (e.g. /apps) and click Save View a User’s Group Membership You can view all the Groups a user is a member of from the Groups panel. To change memberships you will need to use the User Management → Groups page. To view:\nUnder User Management → User search for the target user and click their name. Select the Groups panel on the left. Groups will be listed in a table in the main panel. View a User’s Associated Identity Provider (IdP) If an Identity Provider is configured a user maybe associated with one or more IdP.\nTo view:\nUnder User Management → User search for the target user and click their name. Select the Identity Provider panel on the left. The identity Providers will be listed in a table in the main panel. If no IdP is listed this indicates the user is using the Trustgrid native authentication system. ","categories":"","description":"","excerpt":"\nThe Users panel is the primary panel for managing user identities and …","ref":"/docs/user-management/users/","tags":"","title":"Users"},{"body":"Usage Login to the Trustgrid portal and navigate to the Node from which you want to test connectivity.\nSelect VPN under the Network section.\nClick the Tools button and click the View Virtual Routes button\nA table will appear with routing information for the node.\nAnalyzing the Route Table Route Availability If a route is available, its Active column will show a green up arrow (). If a route is not available, its Active column will show a red down arrow ().\nRoute Preference Routes will be selected based on the following order:\nIn overlapping routes, the most specific route wins. For example, 10.20.0.51/32 takes precedence over 10.20.0.0/24. If multiple matching routes exist, the route with the lowest metric wins. For example, a metric of 1 takes precedence over a metric of 50. ","categories":"","description":"View the routing table on a node","excerpt":"View the routing table on a node","ref":"/tutorials/remote-tools/view-virtual-route-table/","tags":"","title":"View Virtual Route Table"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/virtual-machines/","tags":"","title":"virtual machines"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/virtual-machines/","tags":"","title":"virtual machines"},{"body":" A virtual network tunnel interface can be configured on a Trustgrid node or cluster to allow forwarding of traffic to a remote Trustgrid Node or Cluster that is attached to the same virtual network. The tunnel interface is associated to a vrf which is used to define and control what traffic is allowed to pass and how it should appear on the network. There is no attachment of the vnet interface to a node interface required but the virtual network does need to be attached to the node or cluster before the tunnel interface is created.\nConfigure Vnet Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select VNET\nConfiguration Parameters Name - the name of the tunnel interface created on the Trustgrid Node or Cluster Description - optional descriptive parameters related to the tunnel Virtual Network - the Trustgrid virtual network the tunnel is being associated to. The virtual network should already be attached to the node or cluster to be selectable. VRF - The vrf the tunnel is being associated to. Only vrf’s which exist on the Trustgrid Node or Cluster can be selected MTU - the mtu size of the tunnel interface. Typically the default of 1430 should be used ","categories":["node"],"description":"","excerpt":" A virtual network tunnel interface can be configured on a Trustgrid …","ref":"/docs/nodes/tunnels/vnet/","tags":["tunnels","networking"],"title":"VNET"},{"body":"Volumes allow containers to persist data between executions.\nCreate a Volume Volumes have the following fields:\nField Name Description Name The name of the volume. Encrypted Whether or not to encrypt the volume. Encrypted volumes The type of volume. Location Optionally, specify a location in the node data store. ","categories":"","description":"","excerpt":"Volumes allow containers to persist data between executions.\nCreate a …","ref":"/docs/nodes/containers/volumes/","tags":"","title":"Volumes"},{"body":"Volumes are used to allocate disks or to attach CD-ROMs to virtual machines.\nField Name Description Name Name for the volume. Device Type Virtual machine type.\nDisk CD-ROM Device Bus Bus for the device.\nIDE VirtIO SCSI SATA Size (Only for Disk) Size in GB, MB, KB, or Bytes for the disk. Disk Provisioning (Only for Disk) Allocation method used for provisioning a disk.\nThin Provision - Disk starts small and expands as more disk space is required up to the size specified. Use this format to save storage space. Thick Provision Lazy Zeroed - Space required for the virtual disk is allocated when the virtual disk is created. Data that remains on the physical device is not erased during creation, but is zeroed out on demand at a later time on first write from the virtual machine. Thick Provision Eager Zeroed - Space required for the virtual disk is allocated at creation time. The data remaining on the physical device is zeroed out when the virtual disk is created. It might take much longer to create disks in this format than to create other types of disks. Encrypted (Only for Disk) True if disk should be encrypted, false otherwise. ISO File (Only for CD-ROM) ISO file selected from the node data store. Windows virtual machines do not support thin provisioned disks. ","categories":["virtual machines"],"description":"","excerpt":"Volumes are used to allocate disks or to attach CD-ROMs to virtual …","ref":"/docs/nodes/kvm/volumes/","tags":"","title":"Volumes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/vrfs/","tags":"","title":"vrfs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/wireguard/","tags":"","title":"wireguard"},{"body":" A WireGuard tunnel interface can be configured to allow a WireGuard client to connect to a Trustgrid Node running as a WireGuard server. The tunnel interface is associated to a vrf which is used to define and control what traffic is allowed to pass and how it should appear on the network.\nConfigure WireGuard Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select WireGuard\nWireGuard Configuration Parameters Field Name Description Name The name of the WireGuard tunnel interface created on the Trustgrid node or cluster. Description Optional field used to document what clients are utilizing the tunnel. Interface IP The IP address in CIDR notation that will be assigned to the node’s WireGuard tunnel interface. Public Key The public key of the remote WireGuard client. Pre-shared Key Optional 256 bit to provide an additonal level of security. VRF The Virtual Routing and Fowarding (VRF) table the WireGuard tunnel will be attached to MTU The maximum transmission unit (MTU) of the WireGuard tunnel interface. Defaults of 1430 or lower recommended. Example Client Config As you configure a WireGuard tunnel interface the portal UI will automatically generate an example WireGuard configuration for the peer/client based on the information provided.\nExample WireGuard client config Note: this is only a partial config. You will likely need to adjust to the AllowedIps and other fields to meet the needs of the configured tunnel. ","categories":["node"],"description":"","excerpt":" A WireGuard tunnel interface can be configured to allow a WireGuard …","ref":"/docs/nodes/tunnels/wireguard/","tags":["tunnels","networking"],"title":"WireGuard"},{"body":"Nodes may enable a WireGuard server to expose the virtual network to WireGuard clients.\nConfiguration Enabled When enabled, this node will accept WireGuard client connections Port The port clients should connect to Remote Traffic Forwarding Whether the node should forward traffic to the virtual network Key Management Clients will need the server’s public key to connect. This can be generated (using the Regenerate action) or can be derived from the private key (imported using the Import action).\nChanging the server’s private key will disconnect existing clients and require their reconfiguration. Clients Clients must be added before they can connect.\nEach client will need to generate their own private and public key. Most WireGuard clients provide tools to do this.\nName The name of the client Pre-shared Key (Optional) The client’s pre-shared key Public Key The client’s public key Allow Internet Whether this client should be allowed to access the public network through this server An inside NAT should be created to map the client’s local IP to an IP on the virtual network. The virtual network CIDR should not be a part of any existing routes in the domain. The IP should be included in an outside NAT network group, so that an ACL can allow the traffic.\nAn outside NAT should be created that includes the virtual network used on the gateway side.\n“WireGuard” is a registered trademark of Jason A. Donenfeld.\n","categories":"","description":"","excerpt":"Nodes may enable a WireGuard server to expose the virtual network to …","ref":"/docs/nodes/vpn/wireguard/","tags":"","title":"WireGuard ®"}]