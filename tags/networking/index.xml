<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ networking</title><link>https://docs.trustgrid.io/tags/networking/</link><description>Recent content in networking on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.trustgrid.io/tags/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Connectors</title><link>https://docs.trustgrid.io/docs/nodes/connectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/connectors/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Connectors are configured in conjunction with &lt;a href="https://docs.trustgrid.io/docs/nodes/services/">services&lt;/a> to define a local listening port for layer 4 (L4) connectivity.&lt;/p>
&lt;/div>
&lt;h4 id="configuration">Configuration&lt;/h4>
&lt;p>Connectors are configured under the Networking &amp;gt; Connectors tab of the node or cluster configuration section in the Trustgrid Portal.&lt;/p>
&lt;figure class="centered-image">
&lt;img src="add-connector.png" alt="" style="display: block; margin-left: auto; margin-right: auto; width: 45%;">
&lt;figcaption style="text-align: center; margin-top: 0.5rem;font-weight:lighter;">
Add Connector dialogue
&lt;/figcaption>
&lt;/figure>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr id="protocol">
&lt;th>Protocol&lt;/th>
&lt;td>&lt;p>The protocol that the listener for the connector will use. Options are TCP, UDP, FTP, and TFTP.&lt;/p>
&lt;blockquote>
&lt;p>FTP must operate in passive mode when using L4 services and connectors.&lt;/p>
&lt;/blockquote>
&lt;/td>
&lt;/tr>
&lt;tr id="listen-interface">
&lt;th>Listen Interface&lt;/th>
&lt;td>The interface that you want the connector to listen on. If set to &amp;ldquo;All&amp;rdquo;, the connector will listen on 0.0.0.0.&lt;/td>
&lt;/tr>
&lt;tr id="listen-port">
&lt;th>Listen Port&lt;/th>
&lt;td>The port that you want the connector to listen on.&lt;/td>
&lt;/tr>
&lt;tr id="remote-node">
&lt;th>Remote Node&lt;/th>
&lt;td>The remote node or cluster that traffic will be proxied to.&lt;/td>
&lt;/tr>
&lt;tr id="remote-service">
&lt;th>Remote Service&lt;/th>
&lt;td>Either the friendly name of &lt;a href="https://docs.trustgrid.io/docs/nodes/services/">service&lt;/a> that is defined on the remote node, or the IP:Port of the remote service to connect to.&lt;/td>
&lt;/tr>
&lt;tr id="rate-limit-mb/s">
&lt;th>Rate Limit (Mb/s)&lt;/th>
&lt;td>The maximum amount of throughput that will be allowed to traverse the tunnel when connecting to the connector. This can be used to prevent saturating the connection at either the local or remote sites.&lt;/td>
&lt;/tr>
&lt;tr id="sniff-traffic">
&lt;th>Sniff Traffic&lt;/th>
&lt;td>&lt;p>Listed only on the Connectors table, this will automatically launch a Sniff Traffic tool for the &lt;a href="#listen-port">listening port&lt;/a>.&lt;/p>
&lt;figure class="centered-image">
&lt;img src="connector-sniff-traffic.png" alt="" style="display: block; margin-left: auto; margin-right: auto; width: 60%;">
&lt;/figure>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Services</title><link>https://docs.trustgrid.io/docs/nodes/services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/services/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Services are configured in conjunction with &lt;a href="https://docs.trustgrid.io/docs/nodes/connectors/">connectors&lt;/a> or &lt;a href="https://docs.trustgrid.io/docs/nodes/vpn/port-forwarding/">port forwards&lt;/a> to define a host (IP or DNS) and port to connect to for layer 4 (L4) connectivity.&lt;/p>
&lt;/div>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Services define the host name or IP and port of a server that can be accessed by the Trustgrid node (or members of the cluster) where it is defined. Remote clients can then access the service via peer nodes using &lt;a href="https://docs.trustgrid.io/docs/nodes/connectors/">connectors&lt;/a> or &lt;a href="https://docs.trustgrid.io/docs/nodes/vpn/port-forwarding/">VPN port forwards&lt;/a>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;p>On the local network the &lt;strong>source IP&lt;/strong> will the node&amp;rsquo;s interface IP.&lt;/p>
&lt;ul>
&lt;li>If the service is defined on a cluster, the active cluster members IP will be used.&lt;/li>
&lt;li>If the node has multiple interfaces, the source will be the interface that has a matching &lt;a href="https://docs.trustgrid.io/docs/nodes/interfaces/#interface-routes">interface route&lt;/a> for the target IP.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Services are configured under the Networking &amp;gt; Services panel of the node or cluster configuration section in the Trustgrid Portal.&lt;/p>
&lt;figure class="centered-image">
&lt;img src="service.png" alt="Dialogue to add a service with fields for enabled" style="display: block; margin-left: auto; margin-right: auto; width: 40%;">
&lt;figcaption style="text-align: center; margin-top: 0.5rem;font-weight:lighter;">
Add Service dialogue
&lt;/figcaption>
&lt;/figure>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr id="enabled">
&lt;th>Enabled&lt;/th>
&lt;td>Values: Yes or No. Allows each service to be individually disabled if desired&amp;quot;&lt;/td>
&lt;/tr>
&lt;tr id="protocol">
&lt;th>Protocol&lt;/th>
&lt;td>&lt;p>The protocol of the service to connect to. Options are TCP, UDP, FTP, and TFTP, along with pre-defined default ports for RDP, SSH, and VNC.&lt;/p>
&lt;blockquote>
&lt;p>FTP must operate in passive mode when using L4 services and connectors.&lt;/p>
&lt;/blockquote>
&lt;/td>
&lt;/tr>
&lt;tr id="service-name">
&lt;th>Service Name&lt;/th>
&lt;td>A friendly name for the service that will be used in the Remote Service field of a &lt;a href="https://docs.trustgrid.io/docs/nodes/connectors/">connector&lt;/a>. Can only contain letters, numbers, and the &lt;code>-&lt;/code> character.&lt;/td>
&lt;/tr>
&lt;tr id="host">
&lt;th>Host&lt;/th>
&lt;td>The IP of the host to connect to.&lt;/td>
&lt;/tr>
&lt;tr id="port">
&lt;th>Port&lt;/th>
&lt;td>The port to connect to on the host.&lt;/td>
&lt;/tr>
&lt;tr id="description">
&lt;th>Description&lt;/th>
&lt;td>(Optional) User friendly description of the service.&lt;/td>
&lt;/tr>
&lt;tr id="test-connectivity">
&lt;th>Test Connectivity&lt;/th>
&lt;td>&lt;p>Show only on the Services table for TCP Protocol services. When clicked, the client node will attempt a TCP port connection to the configured host and port and display success or failure.&lt;/p>
&lt;figure class="centered-image">
&lt;img src="service-test-connectivity.png" alt="" style="display: block; margin-left: auto; margin-right: auto; width: 80%;">
&lt;/figure>
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Tunnels</title><link>https://docs.trustgrid.io/docs/nodes/tunnels/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/tunnels/</guid><description>
&lt;h3 id="tunnels-overview">Tunnels Overview&lt;/h3>
&lt;p>Trustgrid Supports configuring various tunneling protocols in order to establish secure connectivity between any appliance that supports the underlying protocol.
The supported tunnels are listed below.&lt;/p>
&lt;ul>
&lt;li>IPsec - Internet Protocol Security supporting ikev1 and ikev2 tunnels&lt;/li>
&lt;li>GRE - Generic Routing Encapsulation used for setting up a direct point to point network connection&lt;/li>
&lt;li>Vnet - The virtual network tunnel is the Trustgrid Proprietary VPN tunneling protocol and therefore can only be used to establish connectivity to other Trustgrid nodes in the organization&lt;/li>
&lt;li>Wireguard - The latest open source tunneling protocol aiming to provide better performance than the traditional ipsec or openvpn protocols&lt;/li>
&lt;/ul>
&lt;p>&amp;ldquo;Wireguard&amp;rdquo; is a registered trademark of Jason A. Donenfeld&lt;/p></description></item><item><title>Docs: VRFs</title><link>https://docs.trustgrid.io/docs/nodes/vrfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/vrfs/</guid><description>
&lt;h3 id="overview">Overview&lt;/h3>
&lt;p>VRFs can be used route / nat and filter what traffic is allowed to pass and how it should appear on the network. VRFs can be associated to an interface whether it be a physical interface / virtual network interface or other tunnel interfaces such as ipsec or gre. VRFs are segmented on a layer 3 level from all other traffic traversing the Trustgrid node.&lt;/p>
&lt;p>For standard use cases of source nat and/or destination nat creating a route and a NAT is sufficient. Traffic rules can be used for more advanced controls. An applicable ACL is required for any traffic to pass as a zero trust methodology is applied.&lt;/p>
&lt;h3 id="address-translation">Address Translation&lt;/h3>
&lt;p>This is where NATs are created in order to translate the traffic to appear as desired on the network.
NATs support translating both source and destination CIDRs as well as masquerading as the egress interface address.&lt;/p>
&lt;h6 id="snat--dnat-example">SNAT / DNAT Example&lt;/h6>
&lt;p>Using the example NAT below if a source packet was initiated from 10.10.10.100 destined for 10.10.20.100 the source address would be translated to 192.168.10.100 and the destination address would be translated to 192.168.20.100.
It is important to note that nat translations occur before routing decisions are made.&lt;/p>
&lt;p>&lt;img src="nat1.png" alt="img">&lt;/p>
&lt;h6 id="maquerade-example">Maquerade Example&lt;/h6>
&lt;p>Using the example below if a source packet is initiated from within 10.10.10.0/24 destined for anything in 192.168.10.0/24 the source would be translated to the interface address the packet is egressing on. If it was a single interface Trustgrid node it would be sourced as the wan facing interface address.&lt;/p>
&lt;p>&lt;img src="masquerade1.png" alt="img">&lt;/p>
&lt;h3 id="routes">Routes&lt;/h3>
&lt;p>Note that NAT translations happen before routing so routes should be created for the destination NAT CIDR if applicable.
Routes require a destination CIDR, interface and metric.
A next hop is optional and only applicable for non-tunnel interfaces such as physical interfaces or vlan subinterfaces.
The gateway of the applicable interface will be used if no next hop is defined.&lt;/p>
&lt;p>The example below would be used for example to offload all internet bound traffic directly out the WAN facing interface&lt;/p>
&lt;p>&lt;img src="offload.png" alt="img">&lt;/p>
&lt;h3 id="traffic-rules">Traffic Rules&lt;/h3>
&lt;p>Traffic rules can be used for more advanced granular traffic manipulation beyond standard source and destination nat.
There are many more parameters that can be applied to the traffic depending on the specific use case.
When creating a traffic rule an ACL is required for traffic to pass. The available parameters are defined below.
Rules are evaluated based on the line number. The first matching rule is the one that will be applied to the packet.
More specific rules should always be implemented above less specific rules. Eg a rule for a /24 network should be above a /16 network the /24 is included in.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr id="number">
&lt;th>Number&lt;/th>
&lt;td>The line number the rule is applied to. Rules are matched in numerical order.&lt;/td>
&lt;/tr>
&lt;tr id="action">
&lt;th>Action&lt;/th>
&lt;td>&lt;p>All traffic rules have an action that is applied to the associated packet.&lt;/p>
&lt;ul>
&lt;li>Accept - The packet is allowed to be processed locally.&lt;/li>
&lt;li>Drop - The packet is dropped and not responded to&lt;/li>
&lt;li>Reject - A TCP Reset is sent in response&lt;/li>
&lt;li>Forward - The packet is forwarded to its defined destination such as an interface or another VRF&lt;/li>
&lt;li>Mirror - Packets are not manipulated but can be mirrored for inspection purposes.
For example passing through an IDS container such as Snort.&lt;/li>
&lt;li>Log - The packet is not manipulated but is marked for logging&lt;/li>
&lt;/ul>
&lt;/td>
&lt;/tr>
&lt;tr id="ingress-interface">
&lt;th>Ingress Interface&lt;/th>
&lt;td>The traffic rule is applied to packets that ingress on this interface&lt;/td>
&lt;/tr>
&lt;tr id="forward-interface">
&lt;th>Forward Interface&lt;/th>
&lt;td>Packets are forwarded out this interface once the rule is applied&lt;/td>
&lt;/tr>
&lt;tr id="protcol">
&lt;th>Protcol&lt;/th>
&lt;td>The protocol that the rule should apply to. All, ICMP, TCP or UDP&lt;/td>
&lt;/tr>
&lt;tr id="forward-vrf">
&lt;th>Forward VRF&lt;/th>
&lt;td>Packets are forwarded into another VRF that is associated on the node. Only configureable when a forward action is selected.&lt;/td>
&lt;/tr>
&lt;tr id="source-cidr">
&lt;th>Source CIDR&lt;/th>
&lt;td>The source network the rule should apply to&lt;/td>
&lt;/tr>
&lt;tr id="destination-cidr">
&lt;th>Destination CIDR&lt;/th>
&lt;td>The destination network the rule should apply to&lt;/td>
&lt;/tr>
&lt;tr id="masquerade">
&lt;th>Masquerade&lt;/th>
&lt;td>Translate and source all packets from the nodes interface address when enabled&lt;/td>
&lt;/tr>
&lt;tr id="dnat-destination">
&lt;th>DNAT Destination&lt;/th>
&lt;td>Forward all traffic to the DNAT destination IP/Port. For example in order to forward all http traffic through a proxy&lt;/td>
&lt;/tr>
&lt;tr id="destination-mac">
&lt;th>Destination Mac&lt;/th>
&lt;td>The destination mac address defined overwrites the source mac address of the packet. Necessary only for some container deployments such as Snort inpsecting traffic.&lt;/td>
&lt;/tr>
&lt;tr id="ports">
&lt;th>Ports&lt;/th>
&lt;td>Used to define a port range when creating a traffic rule&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h6 id="traffic-rule-example">Traffic Rule Example&lt;/h6>
&lt;p>In the below example the first rule on line number 1 is forwarding all traffic destined to 10.0.20.0/24 to a virtual network tunnel interface. Any NATs configured under Address Translation will be applied before the packet is forwarded to its destination. The rule on line number 10 will forward all traffic that does not match the first rule out to the internet masquerading as the WAN interfaces address.
If the line numbers were reversed the virtual network rule would never be matched as all traffic would match the internet offload rule which is configured for all source and destination traffic.&lt;/p>
&lt;p>&lt;img src="trafficrule1.png" alt="img">&lt;/p></description></item><item><title>Docs: GRE</title><link>https://docs.trustgrid.io/docs/nodes/tunnels/gre/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/tunnels/gre/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Trustgrid supports configuring GRE tunnels that can be used to establish connectivity to any appliance that supports the GRE protocol.
A GRE tunnel interface is created which can then be attached to an interface on a node. VRFs can then be used to control the flow of traffic and how it should appear on the network.&lt;/p>
&lt;/div>
&lt;h2 id="configure-gre-tunnel">Configure GRE Tunnel&lt;/h2>
&lt;p>On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select GRE&lt;/p>
&lt;p>&lt;img src="add_tunnel.png" alt="img">&lt;/p>
&lt;p>&lt;img src="add_gre.png" alt="img">&lt;/p>
&lt;p>&lt;img src="gre.png" alt="img">&lt;/p>
&lt;h3 id="gre-tunnel-configuration-parameters">GRE Tunnel Configuration Parameters&lt;/h3>
&lt;ul>
&lt;li>Name - the name of the GRE tunnel interface that will be created on the Trustgrid node&lt;/li>
&lt;li>Description - optional field to used to document the purpose of the tunnel&lt;/li>
&lt;li>IP - the ip address the tunnel is created with in CIDR&lt;/li>
&lt;li>Peer - the remote IP address of the appliance the tunnel is being established with&lt;/li>
&lt;li>VRF - existing VRF on the node the tunnel is being associated to&lt;/li>
&lt;li>MTU - the MTU of the tunnel interface. Typically can be set to 1476.&lt;/li>
&lt;/ul></description></item><item><title>Docs: IPSec</title><link>https://docs.trustgrid.io/docs/nodes/tunnels/ipsec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/tunnels/ipsec/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Trustgrid supports configuring traditional IPSec tunnels that can be used to establish connectivity to any appliance that supports the IPSec protocol.
Once an IPSec tunnel is configured an IPSec virtual interface is created that can be attached to a node interface. VRFs can be used in conjunction to explicitly control what traffic is allowed (VRF ACLs) to pass and how it should look on the network (VRF NATs or Traffic Rules).&lt;/p>
&lt;/div>
&lt;h2 id="configure-ipsec-tunnel">Configure IPSec Tunnel&lt;/h2>
&lt;p>On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select IPSEC&lt;/p>
&lt;p>&lt;img src="add_tunnel.png" alt="img">&lt;/p>
&lt;p>&lt;img src="add_ipsec.png" alt="img">&lt;/p>
&lt;p>&lt;img src="ipsec_config.png" alt="img">&lt;/p>
&lt;h3 id="ipsec-tunnel-configuration-parameters">IPsec Tunnel Configuration Parameters&lt;/h3>
&lt;h4 id="required-parameters">Required Parameters&lt;/h4>
&lt;ul>
&lt;li>Name - the name of the IPSec tunnel interface that will be created on the node and displayed in the Trustgrid Portal&lt;/li>
&lt;li>Description - used to document the purpose of the tunnel&lt;/li>
&lt;li>Interface - the network interface the tunnel will be listening on. Typically this will be network adapter 1 which is the WAN interface&lt;/li>
&lt;li>Interface IP - the ip address the tunnel will be created to use in CIDR. Typically this would be a /30.&lt;/li>
&lt;li>Interface VRF - the VRF the tunnel will be associated with in order to apply ACLs / NATs / Routes or Traffic Rules&lt;/li>
&lt;li>Interface MTU - the specified MTU of the tunnel interface. Typically this can be left to the default of 1436&lt;/li>
&lt;li>IKE Version - select version 1 or version 2&lt;/li>
&lt;li>Peer IP - The remote ip address of the appliance the tunnel is being established with&lt;/li>
&lt;li>IKE Cipher - The cipher used for phase 1&lt;/li>
&lt;li>IKE DH Group - The Diffie-Hellman Group used for phase 1&lt;/li>
&lt;li>IPSEC Cipher - the cipher used for phase 2&lt;/li>
&lt;li>PFS - The Diffie-Hellman Group used for phase 2 perfect forward secrecy&lt;/li>
&lt;li>DPD Interval - seconds for dead peer detection&lt;/li>
&lt;li>DPD Retries - number of dead peer detection retries before the tunnel is re-keyed / torn down&lt;/li>
&lt;li>Rekey Interval - time in seconds before a re-key of the tunnel is initiated&lt;/li>
&lt;li>Replay Window - size of the replay window which is used to prevent replay attacks. Typically set between 64 and 128&lt;/li>
&lt;li>Local Subnet - the local subnet in CIDR that will be considered interesting traffic and be allowed to forward over the tunnel&lt;/li>
&lt;li>Remote Subnet - the remote subnet in CIDR will be considered interesting traffic and be received on the tunnel&lt;/li>
&lt;li>Auto Add - the connection is added and then waits for the remote peer to initiate the tunnel establishment&lt;/li>
&lt;li>Auto Start - the connection is added and then attempts to initiate the tunnel to the remote peer&lt;/li>
&lt;li>PSK - the pre-shared key used by both peers to establish the tunnel&lt;/li>
&lt;/ul>
&lt;h4 id="optional-parameters">Optional Parameters&lt;/h4>
&lt;ul>
&lt;li>Virtual Network - associate the tunnel to a Trustgrid Virtual Network&lt;/li>
&lt;li>IKE Local ID - The IP address that will be seen by the remote peer to establish the tunnel. Typically this would be the public facing WAN IP of the Trustgrid Node.&lt;/li>
&lt;li>IKE Remote ID - Used for identity validation. Typically this is the same address as the Peer IP&lt;/li>
&lt;/ul></description></item><item><title>Docs: VNET</title><link>https://docs.trustgrid.io/docs/nodes/tunnels/vnet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/tunnels/vnet/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>A virtual network tunnel interface can be configured on a Trustgrid node or cluster to allow forwarding of traffic to a remote Trustgrid Node or Cluster that is attached to the same virtual network. The tunnel interface is associated to a vrf which is used to define and control what traffic is allowed to pass and how it should appear on the network. There is no attachment of the vnet interface to a node interface required but the virtual network does need to be attached to the node or cluster before the tunnel interface is created.&lt;/p>
&lt;/div>
&lt;h2 id="configure-vnet-tunnel">Configure Vnet Tunnel&lt;/h2>
&lt;p>On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select VNET&lt;/p>
&lt;p>&lt;img src="add_tunnel.png" alt="img">&lt;/p>
&lt;p>&lt;img src="add_vnet.png" alt="img">&lt;/p>
&lt;p>&lt;img src="vnet.png" alt="img">&lt;/p>
&lt;h4 id="configuration-parameters">Configuration Parameters&lt;/h4>
&lt;ul>
&lt;li>Name - the name of the tunnel interface created on the Trustgrid Node or Cluster&lt;/li>
&lt;li>Description - optional descriptive parameters related to the tunnel&lt;/li>
&lt;li>Virtual Network - the Trustgrid virtual network the tunnel is being associated to. The virtual network should already be attached to the node or cluster to be selectable.&lt;/li>
&lt;li>VRF - The vrf the tunnel is being associated to. Only vrf&amp;rsquo;s which exist on the Trustgrid Node or Cluster can be selected&lt;/li>
&lt;li>MTU - the mtu size of the tunnel interface. Typically the default of 1430 should be used&lt;/li>
&lt;/ul></description></item><item><title>Docs: WireGuard</title><link>https://docs.trustgrid.io/docs/nodes/tunnels/wireguard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.trustgrid.io/docs/nodes/tunnels/wireguard/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>A WireGuard tunnel interface can be configured to allow a WireGuard client to connect to a Trustgrid Node running as a WireGuard server.
The tunnel interface is associated to a vrf which is used to define and control what traffic is allowed to pass and how it should appear on the network.&lt;/p>
&lt;/div>
&lt;h2 id="configure-wireguard-tunnel">Configure WireGuard Tunnel&lt;/h2>
&lt;p>On a Trustgrid Node navigate to Tunnels under the Network Menu and select Add Tunnel and then select WireGuard&lt;/p>
&lt;p>&lt;img src="add_tunnel.png" alt="img">&lt;/p>
&lt;p>&lt;img src="add_WireGuard.png" alt="img">&lt;/p>
&lt;p>&lt;img src="WireGuard.png" alt="img">&lt;/p>
&lt;h3 id="wireguard-configuration-parameters">WireGuard Configuration Parameters&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr id="name">
&lt;th>Name&lt;/th>
&lt;td>The name of the WireGuard tunnel interface created on the Trustgrid node or cluster.&lt;/td>
&lt;/tr>
&lt;tr id="description">
&lt;th>Description&lt;/th>
&lt;td>Optional field used to document what clients are utilizing the tunnel.&lt;/td>
&lt;/tr>
&lt;tr id="interface-ip">
&lt;th>Interface IP&lt;/th>
&lt;td>The IP address in CIDR notation that will be assigned to the node&amp;rsquo;s WireGuard tunnel interface.&lt;/td>
&lt;/tr>
&lt;tr id="public-key">
&lt;th>Public Key&lt;/th>
&lt;td>The public key of the remote WireGuard client.&lt;/td>
&lt;/tr>
&lt;tr id="pre-shared-key">
&lt;th>Pre-shared Key&lt;/th>
&lt;td>Optional 256 bit to provide an additonal level of security.&lt;/td>
&lt;/tr>
&lt;tr id="vrf">
&lt;th>VRF&lt;/th>
&lt;td>The Virtual Routing and Fowarding (VRF) table the WireGuard tunnel will be attached to&lt;/td>
&lt;/tr>
&lt;tr id="mtu">
&lt;th>MTU&lt;/th>
&lt;td>The maximum transmission unit (MTU) of the WireGuard tunnel interface. Defaults of 1430 or lower recommended.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="example-client-config">Example Client Config&lt;/h2>
&lt;p>As you configure a WireGuard tunnel interface the portal UI will automatically generate an example WireGuard configuration for the peer/client based on the information provided.&lt;/p>
&lt;figure class="centered-image">
&lt;img src="WireGuard-tunnel-example-config.png" alt="" style="display: block; margin-left: auto; margin-right: auto; width: 90%;">
&lt;figcaption style="text-align: center; margin-top: 0.5rem;font-weight:lighter;">
Example WireGuard client config
&lt;/figcaption>
&lt;/figure>
&lt;div class="alert alert-info" role="alert">
Note: this is only a partial config. You will likely need to adjust to the &lt;code>AllowedIps&lt;/code> and other fields to meet the needs of the configured tunnel.
&lt;/div></description></item></channel></rss>