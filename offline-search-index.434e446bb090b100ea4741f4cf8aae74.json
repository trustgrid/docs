[{"body":"ZTNA Applications are managed by clicking the Applications link on the left nav bar.\nTrustgrid provides several ZTNA application types that allow remote access to internal resources through a continuously validated connection.\nEach application has an Access Policy and a Visibility list. For a user to connect to a ZTNA application, they must (1) be permitted access by the application’s Access Policy and (2) be able to see the application.\nAccess to an application is authenticated through an Identity Provider (IdP).\n","categories":"","description":"","excerpt":"ZTNA Applications are managed by clicking the Applications link on the …","ref":"/docs/applications/","tags":["applications","ztna"],"title":"Applications"},{"body":" Trustgrid and our customers share the responsibilities of securing the Trustgrid network. Trustgrid assumes and automates a significant part of the overall security challenges. These challenges range from the cloud to the firmware on hardware appliances. Our customers are responsible for securing physical environments, identity and access management, and all security aspects of the environments where Trustgrid is installed.\nTrustgrid Secures the Cloud All cloud management components are secured and monitored by Trustgrid. This includes the hardware, software, and network for all cloud components including the Portal/Management API and other management tools. Customers are responsible for issuing credentials to the Portal for each authorized user and maintaining the security of those accounts.\nNetwork Security is a Shared Responsibility Trustgrid is responsible for the security of all data plane traffic from the time it enters a Trustgrid node until the time it exits a Trustgrid node. Customers are responsible for the security of all network traffic eggressing from any Trustgrid node.\nTrustgrid Teams with Customers for Edge Security All virtual or hardware appliances are secured by Trustgrid. Trustgrid’s ability to secure hardware is restricted to supported hardware appliances with specific exceptions. Customers are responsible for the security of the physical and logical environments into which Trustgrid is integrated.\nSecure Gateway Nodes Trustgrid customer’s should apply access controls to ingress traffic for gateway nodes. By restricting ingress access to edge nodes IP ranges the system security is improved and many common attacks easily avoided.\nEncrypt Traffic with Customer Certificates By default, Trustgrid encrypts all traffic on the data and control planes with privately issued certificates from our PKI. Customers may elect to provide their own certificates for data plane encryption ensuring Trustgrid maintains a zero-knowledge security posture of all data plane traffic.\n","categories":"","description":"","excerpt":" Trustgrid and our customers share the responsibilities of securing …","ref":"/getting-started/security/customer-responsibilities/","tags":["security","overview"],"title":"Customer Responsibilities"},{"body":"The Advance section provides additional configuration options for customizing the node behavior from the default settings. Default settings work in most environments and should only be changed if needed based on your specific requirements. Config Options Advanced Config Options The Config Options panel allows customizing various advanced settings for the node such as network flow defaults. Each setting provides a description of what it controls and the value field. Additionally, the button on the far right allows resetting a setting back to the default value.\nAfter changing a setting click the Save button. Some changes may require a node restart to take effect.\nJVM Memory Java Virtual Machine (JVM) memory settings Execute Garbage Collection This button forces the Java process to clean up memory and execute garbage collection. This is useful if you are seeing memory issues and want to force the JVM to clean up memory.\nGarbage Collection button JVM Memory Settings The JVM Memory panel allows changing the default JVM settings for the node process.\nThe node must be restarted for any change to be effective.\n","categories":"","description":"Configure advanced settings on appliance-based nodes","excerpt":"Configure advanced settings on appliance-based nodes","ref":"/docs/nodes/appliances/advanced/","tags":"","title":"Advanced Options"},{"body":"","categories":"","description":"Runbook procedures for managing agent-based nodes","excerpt":"Runbook procedures for managing agent-based nodes","ref":"/tutorials/management-tasks/agent-mgmt/","tags":"","title":"Agent Node Management"},{"body":"This section documents the configuration and functionality specific to agent-based nodes in the Trustgrid system.\n","categories":"","description":"Documentation of Trustgrid agent-based node configuration and functionality","excerpt":"Documentation of Trustgrid agent-based node configuration and …","ref":"/docs/nodes/agents/","tags":"","title":"Agent Nodes"},{"body":"The Alert Center provides a centralized view of open alerts for a node. Alerts can be resolved from this screen individually, or all can be resolved using the “Mark all as resolved” button. Example alert center with 3 open alerts ","categories":"","description":"View open alerts for a node","excerpt":"View open alerts for a node","ref":"/docs/nodes/shared/alert-center/","tags":"","title":"Alert Center"},{"body":" Node audits provide records when services on a node are invoked, or when upgrades are applied. This can be helpful to see the historical maintenance of a node.\nNode audits can be viewed for a specific node by navigating to Audits under the History section on the node view.\nUsers will need audits::read:node permissions to view node audits.\nNode audits can also be found for the entire organization by navigating to Operations-\u003eNode Audits.\n","categories":"","description":"View audit logs of actions taken on a node","excerpt":"View audit logs of actions taken on a node","ref":"/docs/nodes/shared/audits/","tags":["node"],"title":"Audits"},{"body":"Summary Trustgrid nodes can be configured to connect to an external BGP router to advertise and receive routes. This allows Trustgrid networks to be integrated into an existing routing fabric.\nThe BGP panel is listed under the Network panel group.\nConfiguration Router Configuration These are the settings used by the local BGP router.\nField Name Description Status Enabled/Disabled - Whether the BGP server is running on the node. ID The IP addressed used to identify the BGP router. This is usually the IP on the interface used for BGP communication. ASN The Autonomous System Number that identifies the router. Client Determines if the BGP router is in client mode BGP router settings Peer Group Configuration This page is used to configure BGP peers that this router will establish connections with. All peers associated with the group share the same Export and Import settings.\nTo add a new group:\nClick +Add Peer Group and provide a name. Click Add. Add Peer Group button After your group is created you will need to:\nAdd peers - these are the other BGP routers your node will connect to Define import policies - these limit what routes are accepted from peers Define export policies - these limit what routes are advertised to peers Add Peers Use the +Add Peer button to add a BGP peer to the group. Provide:\nField Name Description Name User friendly name for the peer ASN The Autonomous System Number that identifies the peer identifies itself with Secret (Optional) Secret passphrase used to authenticate with the peer IP IP address that the peer can be reached at Example Add Peer Dialog Define Import Policies The BGP server on the node will only accept routes advertised by peers if they match an import policy prefix.\nOn the Imports panel use the +Add Import Policy button to add a new policy.\nField Name Description Name The user friendly name of the policy Action Allow - advertised routes matching the defined prefixes will be added to the local routing table Deny - advertised routes matching the defined prefixes prefixes will be rejected Description (optional) Additional information describing the policy Click on the newly created policy to +Add Prefix\nField Name Description Prefix CIDR notation of a network used to match with advertised routes Exact Yes - Requires the advertised route to match the subnet length of the prefix defined above No - Allows routes with the same network but have different prefix lengths to match Description (optional) Additional information describing the prefix Define Export Policies A BGP export policy controls which routes are advertised and sent to external BGP peers.\nOne the Exports panel use the +Add Export Policy to create a new policy\nField Name Description Name The user friendly name of the policy Cluster (Yes/No) If the node is a member of a cluster this setting will determine if it should only advertise the configured prefixes when it is the active member of the cluster. Action Determines if matching route prefixes will be advertised or not:\nAllow - Configured prefixes will be advertised to the peer group members Deny - Explicitly prevent prefixes from being advertised Click the newly created policy and then click +Add Prefix\nField Name Description Prefix CIDR notation of a network to be advertised Description (optional) Additional information describing the prefix Management Tools Restart BGP Server Restart BGP button It is sometimes necessary to completely restart the BGP server to clear any issues or force new settings to go into effect immediately. The Restart BGP button is available in the tools section of the BGP panel.\nOnce issued you should see the confirmation message: Restart request sent. BGP Restart Confirmation BGP Status BGP Status button The BGP Status tool allows you to see information about the state of BGP peering.\nBGP Status Output Field Name Description Status Shows if the peer is actively connected or not Connected If connected, shows how long the peering has been established ASN The Autonomous System Number that identifies the router Peer IP The IP address of the peer router Advertised Routes Hovering over the view button displays the routes received from the peer that matched an import policyand their associated metrics\nReceived Routes Hovering over the view button displays the routes received from the peer that did not match an import policy or was rejected for other reasons\n","categories":"","description":"BPG Server running on Trustgrid Nodes","excerpt":"BPG Server running on Trustgrid Nodes","ref":"/docs/nodes/appliances/bgp/","tags":"","title":"BGP"},{"body":"This section documents the configuration and functionality specific to appliance-based nodes in the Trustgrid system.\n","categories":"","description":"Documentation of Trustgrid appliance-based node configuration and functionality","excerpt":"Documentation of Trustgrid appliance-based node configuration and …","ref":"/docs/nodes/appliances/","tags":"","title":"Appliance Nodes"},{"body":"By default, Trustgrid support has access to all nodes via the Control Plane, subject to Trustgrid policies and procedures. Trustgrid customers may opt to disallow Trustgrid support access to their nodes by disabling remote support. Disabling support access does not interfere with automated management features such as patching, updating, logging, or authentication.\nChanges to the support flag are audited.\n","categories":"","description":"","excerpt":"By default, Trustgrid support has access to all nodes via the Control …","ref":"/getting-started/security/trustgrid-node-access/","tags":"","title":"Trustgrid's Access to Nodes"},{"body":" Trustgrid’s Alarms system notifies users of events both within our portal and via notification integrations such as email, PagerDuty, OpsGenie, Slack, and Teams.\nChanges in status (such as a node disconnecting or reconnecting) create events within the Trustgrid portal.\nThese events are evaluated against alarm filters, which define criteria to match events, like the node name or event severity.\nIf an event matches the criteria of an alarm filter, then an alert is generated and notifications are broadcast to the configured channels.\n","categories":"","description":"","excerpt":" Trustgrid’s Alarms system notifies users of events both within our …","ref":"/docs/alarms/","tags":["alarms"],"title":"Alarms"},{"body":"Data Plane Status Panel The previous release added a pop-up table that displayed statistics about a node’s connections to other node such as gateways. We’ve now moved most of this information to a new panel dedicated for this purpose.\nHovering over the Data Plane status indicator next to the node name still includes basic details about the number of gateways known and connected. And it includes a link to the new panel for more detail:\nClicking that link or just selecting the Data Plane panel from the left navigation bar will bring you to a new page showing much of the same detail as the previous pop-up table.\nData Plane Historical Stats You can now load historical latency data about a connection between this node and a connected gateway. Simply select the gateway from the table by clicking it, choose a start and end time and click Load.\nPortal Tool Improvements Tool Setting History A common pain point when using the tools within the Trustgrid Portal was that if you had to rerun a tool you had to reenter the values into the prompt. With this release Trustgrid is introducing an execution history that will make rerunning a tool much simpler for users.\nAs an example, if I run the Interface TCP Port Test tool for the first time, the target IP and port will be the defaults 192.168.1.1 and port 80\nIf I change these to a new IP and port and run (e.g. 172.16.22.199 and port 22) and run the tool. The next time I run the tool these settings will be populated automatically.\nAdditionally, I can click the History tab on the right to see the last few execution settings. I simply need to click apply to rerun one of the configurations listed.\nMTR Tool MTR (or my trace route) is an alternative to the traditional traceroute tool that expands on the data gathered and reported in a number of ways. It can be run interactively to run continuously until stopped, gather additional statistics, report multiple paths more clearly and more. While this tool has been available from within the Terminal for some time, Trustgrid has now made this accessible directly from the portal user interface.\nTo use this new feature, the node must be running the latest Trustgrid package version (1.5.20220215-1159) or newer\nTo run the tool, navigate to the Network → Interfaces section of a node and select the desired interface. Then click the MTR button.\nThe default settings are to target the local loopback interface IP (127.0.0.1) and run 10 times (-c 10).\nChange the target to the desired IP or host name and update the options. Some useful options include:\n-T to use TCP instead of ICMP and can be combined with -P XXXX to target a specific known listening port. This can be useful when targeting a Trustgrid gateway from and edge node. (e.g. -T -P 8443)\n-w runs MTR in wide screen reporting mode. You will not see output on the screen until the -c count has completed but the output will persist, unlike when run interactively where it is cleared from the screen at completion.\nSee the mtr man page for additional options.\nInterface Flows Tool Under the Network → Interface section you will see a new “Flows” tool listed\nTo use this new feature, the node must be running the latest Trustgrid package version (1.5.20220215-1159) or newer\nThis tool provides information about flows traversing an interface, similar to who the VPN “View Virtual Translations Table” tool shows flows traversing the VPN.\nLaunching the tool you have a number of options to filter the results. Or you can run without filters to return all flows.\nThe resulting table lists the flow found on the interface. This can be sorted by column.\nAdditionally, any active flow can be Terminated (disconnected) from within the tool. You will be prompted to confirm.\nNetwork Interface Improvements Interface Speed and Duplex The Trustgrid portal now displays the negotiated speed and duplex values:\nAnd it now allows you to change from the default Auto negotiation setting to a manual setting. This is frequently necessary when the connected port is hard set to a speed and duplex value, which breaks auto negotiation.\nAlert Improvements Alert Suppression Window Events An Alert Suppression Window prevents the Trustgrid system from sending notification to alarm channels for a scheduled period of time. This is useful for preventing noisy alerts during planned maintenance. Historically, correlating events to this time period required remembering when the maintenance occurred.\nAfter the suppression window is closed, either by cancelling or allowing it to expire, two events are created. One for the scheduled start:\nAnd another for the actual end time:\nThese events are viewable at both the node and organization level to make it easy to correlate events to the maintenance window.\nOverride Domain Level Threshold Alerts Threshold alerts, such as CPU % or latency, can be configured to apply to all nodes within a domain. But sometimes it is necessary for a specific node to have different thresholds defined. With this release, the domain thresholds can be overridden.\nIf you navigate to the Alerts panel of a node, you will see a section at the bottom titled Global Alerts. It will list all threshold alerts defined at the higher, domain level. Click the Override button to set a node specific value.\nDefine a new threshold value or duration\nAfter you click Save, the value will have a yellow square to indicate it is an override.\nThreshold Alerts Included Data Points Previously it wasn’t always clear why a threshold alert, such as an alarm regarding latency, exceeded the configured threshold. Even if you connected immediate to the device and checked the latency might have returned to normal.\nNow the JSON payload sent to alarm channels (email, Slack, PagerDuty, etc.) can include the data points used to calculate the average that exceeded the threshold. This is in a new section called details and the values are in pairs of the timestamp t (unix time) and value v (in milliseconds in the example below).\nAlert Payload ... \"details\":\t{ \"values\":\t[ {\"t\":1645664460,\"v\":1310}, {\"t\":1645664520,\"v\":1310}, {\"t\":1645664580,\"v\":31}, {\"t\":1645664640,\"v\":31}, {\"t\":1645664700,\"v\":890} ], } ... ","categories":"","description":"","excerpt":"Data Plane Status Panel The previous release added a pop-up table that …","ref":"/release-notes/cloud/archive/2022/february/","tags":"","title":"February"},{"body":" Trustgrid allows importing of self-managed certificates that can encrypt traffic for both the Trustgrid mesh network (via the Gateway) and ZTNA applications.\nAdding a Certificate Field Name Description Certificate body The certificate body, in PEM format. Certificate chain The certificate authority’s chain, in PEM format. Private key The certificate’s private key, in PEM format. Once uploaded, the sensitive certificate details will not be available via the API, but the parsed information from the certificate, such as FQDN, the expiry date, and any warnings about the certificate, will be available in the table.\n","categories":"","description":"","excerpt":" Trustgrid allows importing of self-managed certificates that can …","ref":"/docs/certificates/","tags":"","title":"Certificates"},{"body":" A cluster is a pair of nodes that share configuration and an active/standby relationship, providing automated high-availability (HA) connectivity.\nA cluster is a pair of nodes at a single site that share some configurations and provide automatic failover. An additional IP address is assigned as a Cluster Virtual IP address that can move between the nodes if failover occurs.\nCertain settings such as network services and VPN settings can be configured for the cluster and these settings will override the individual node’s configuration.\nRequirements Nodes in the cluster must be using the same model of appliances Nodes must be able to create direct TCP connections with each other Nodes should be at the same site or have high-bandwidth, high-reliability, low-latency connections between the devices Active Member Determination The active member of a cluster is determined by the following factors:\nCluster heartbeat communication Cluster mode Configured active member Cluster member health Cluster Heartbeat Communication Cluster members utilize a direct TCP connection to each other to determine if their partner is online and share their health status. Each node will listen on a configured heartbeat IP and port, while at the same time connecting to their partner’s configured heartbeat IP and port.\nLocal ACLs allow only the partner cluster member to connect to the listening port. Heartbeat communication is configured on each node’s cluster page.\nCluster Mode A cluster can be configured in two different modes to determine what happens when a failed member returns to healthy status:\nAutomatic Failback (Default) - In this mode the member set as the Configured Active (see below) will maintain the active role as long as it is online and healthy. Manual Failback - In this mode, the active role only moves if either the current holder fails or the configured active is changed Consider a cluster with members named Node1, the configured active, and Node2.\nEvent Automatic Failback - Active Member Manual Failback - Active Member Initial State Node1 Node1 Node1 unhealthy/offline Node2 Node2 Node1 returns to healthy/online Node1 Node2 Cluster Timeout The cluster will wait a configurable amount of time before considering a failed member as lost. This timeout is configurable on the cluster page.\nConfigured Active Each cluster will have one configured or preferred active member. This is reflected in the overview section.\nCluster Members list showing configured and current active member Change Configured Active To change the configured active member:\nClick the make active button in the row for the desired node. Make Active Button A prompt will appear asking for confirmation. Click the “Confirm” button. Confirm the change in the configured active member This change will be pushed to each member. They will then attempt to transfer the active role to the new configured active member assuming it is online and healthy. After this change the “Current Active” will be updated to reflect the new active member. Cluster Member Health There may be situations where both cluster members are online and can communicate with each other, but external conditions exist that make a node unsuitable to hold the active role. The Trustgrid node service monitors for such conditions and will make a node as unhealthy if one occurs. The node will release the active role and its standby member will take over if it is online and healthy.\nWhen the condition clears the node will declare itself healthy and inform its partner member. Depending on the cluster mode it may reclaim the active role.\nCluster Member Health Conditions Loss of cluster heartbeat communication - If a node cannot communicate with its partner nodes on the configured IP and port it will declare that partner node unhealthy and claim the active role if it has not already.\nInterface Link (Up/Down) State - Any interface configured with an IP address in the Trustgrid is monitored for a successful connection to another network device\nExample: In a two-interface setup it would be possible for the LAN interface to become unplugged but the node to remain online from the cloud and data plane perspective. However, the lack of LAN connectivity would prevent the node from delivering any Trustgrid services to that network Note: If only a single node has an interface configured, such as an alternate MPLS path, Trustgrid support can configure it to be ignored for triggering. Upstream Internet Issues - If a Trustgrid node is unable to build connections to both the Trustgrid control plane AND data plane connections to its gateways the node will be marked as unhealthy. This does require all the connections to be failing before it is triggered\nExample: If an upstream internet provider or device experiences failure the node will not be able to provide any services. WAN Interface DHCP failure - If the WAN interface is configured to use DHCP and it does not receive a DHCP lease it will mark itself unhealthy.\nLayer 4 (L4 Proxy) Service Health Check - TCP L4 Proxy Services can be configured to regularly perform health checks to confirm a successful connection can be made. If these checks fail 5 times in a row the service will mark the cluster member as unhealthy.\nExample: If each cluster member’s LAN interface is connected to a different switch and one switch fails that member will be unable to connect to any IP:ports dependent on that path.\nUse caution before configuring multiple services with health checks. This could create a situation where both nodes declare themselves unhealthy because a single service is failing if the server providing the service goes offline. Cluster Member Shared Configuration Cluster members can share the configuration for the following services:\nNetworking Interfaces Interface routes Cluster VIP (supported in on-premise, traditional network environment) AWS/Azure/GCP route table entries VPN Tunnels VRFs ZTNA gateway endpoints Layer 4 services and connectors Compute Container and command definitions Resource limits Tags Tags are visible at the bottom of the overview page for the resource.\nModifying Tags To add a tag:\nClick Add Tag.\nA new row will appear at the bottom of the tags table. There will be a list of existing tag names for your organization. You can filter the list by typing in the field. You can either select an existing tag name, or create a new one by typing it out in full and then selecting New selection: tagName.\nNext move to the values field. As with the name, existing values will be listed. To enter a new value type it in completely.\nClick Save\nTag rows can be edited in-place. Change the name or value, then click Save.\nTo remove a tag, click the red X next to the tag name, then click Save.\nApplying a Tag Filter to the Clusters Table The clusters table can also be filtered to only show clusters with a specific tag name:value.\nOn the clusters table click Actions and select Add Tag Filter from the drop-down menu. After clicking Add Tag Filter, select the tag-name field and you will see a list of tag-names available. Select the desired tag. You can also start typing to filter what tag names are shown.\nSelect the tag value field and you will see a list of available values. Select the desired value.\n(Optional) Click Add Tag Filter to include an additional filter. Note that the two filters will be applied using AND only clusters with both tag name:value combinations matching will be shown.\nClick Apply Tag Filter and the table will only show matching clusters.\n","categories":"","description":"","excerpt":" A cluster is a pair of nodes that share configuration and an …","ref":"/docs/clusters/","tags":["cluster"],"title":"Clusters"},{"body":"","categories":"","description":"Shared configuration options and functionality available on both agent and appliance nodes","excerpt":"Shared configuration options and functionality available on both agent …","ref":"/docs/nodes/shared/","tags":"","title":"Agent and Appliance Shared Configuration"},{"body":"Data Plane Panel Improvements In the February 2022 release we introduced the Data Plane status panel for investigating connections between edge and gateway nodes. With this release we’ve added some tools to this panel. The new Ping and Test Performance tools are linked in the far right column of each gateway’s row.\nGateway Ping The gateway ping tool will launch a ping inside the data plane tunnel between the node and the gateway, similar to ICMP ping. This can provide a more realtime view of latency between node and gateway compared to the RTT column (only loaded on refresh) and the historical data which provides a minute by minute view.\nGateway Performance Tool The gateway performance tool attempts to estimate the available upload bandwidth between a node and gateway.\nBy default this tool will attempt to send 10MB of data to the destination device. This then used to calculate the available bandwidth. Sending more data provides a more accurate estimate but be aware that other devices using the same internet circuit may experience degraded performance while the test is running.\nThe periods are posted for about every 1MB of data sent. If you see exclamation marks this can indicate lost packets.\nTool Improvements MTR Improvements MTR, which was recently added to the portal, can be powerful troubleshooting tool, but it has many options which can be tricky for newer users. To simplify the use we’ve added a new user interface that provides graphical options for selecting common parameters.\nAWS Instances Metadata When the Trustgrid software is deployed in AWS we can gather additional metadata about the underlying instance. With this release we have added the availability zone, instances type and instance ID to the Info panel available on every node.\nTimestamps for Virtual Network Changes Before changes are committed to a virtual network setting, such as the virtual network route table, they are listed in the Changes panel for approval. This made it easier to see if other users had outstanding changes that might be in conflict. However, it wasn’t clear if the other user just made that change or if it had been left accidentally. With this release we’ve added a timestamp that shows when the user saved the change.\n","categories":"","description":"","excerpt":"Data Plane Panel Improvements In the February 2022 release we …","ref":"/release-notes/cloud/archive/2022/march/","tags":"","title":"March"},{"body":"Improved Identity Provider Integration Trustgrid has supported SAML integration to manage portal access for some time. As we began supporting additional services, such as Remote Access applications, more flexibility was needed.\nOpenID Support OpenID is a newer standard for managing communication between an application and an Identity Provider (IdP). It offers additional functionality compared to SAML including the ability to simplify integration.\nAt this point, Trustgrid supports simplified integration with Google G Suite and Microsoft AzureAD which includes the ability to synchronize groups and group members. Trustgrid will expand this functionality to other IdPs in the future but for now, other OpenID compatible IdPs can be integrated using a more generic OpenID setup process.\nSAML Self-Service Trustgrid will continue to support SAML integration. Previously the setup process required the Trustgrid Support Team to complete the configuration, but now this is available to Administrators.\nAdd Users Instead of Inviting Them Previously, adding new users to the Trustgrid portal was a bit clunky when using the SAML integration. To add a user you would:\nInvite the user. This would generate an email which the user didn’t really need.\nThe user would then need to successfully authenticate via the configured IdP.\nYou could then adjust the user’s role to reflect the appropriate permissions.\nNow, when an IdP is configured there is a simplified process:\nFrom the User Management panel click “Add User”\nFrom a single prompt, you can enter the user’s email address (matching what is configured in the Identify Provider), set their Role, and select the correct Identity Provider (if there is more than one).\nThe option to Invite Users is still available under Actions if you need to create users in the Trustgrid native IdP.\nDomain Improvements In addition to the changes outlined below, it is worth noting that Domains have been moved under the Management section of the navigation bar.\nReview Changes Trustgrid Domains encompass configuration settings that impact many nodes and clusters, such as Virtual Network Routes. The impacts of changes here can have a wide effect and it is not uncommon for multiple members of a team to be working in this context at the same time without knowing it.\nTo address this Trustgrid has updated the user interface to reduce the risk of improper or conflicting changes. After a change is made within a domain it is not immediately applied.\nInstead, a warning icon will be added to the Review Changes panel. Navigating to this panel will display all changes that are waiting to be applied.\nThe changes will include the user making the change. If more than one user has made changes they can confirm with that user if they are ready for that change to go into effect.\nOptionally, if they determine one of the changes should not be applied it can be removed by clicking the red X. Be aware that if this is done the change would have to be recreated and reviewed to add later.\nOnce the user has confirmed the changes look correct they can click Apply Changes. You will be prompted to confirm and then the changes will be pushed out to nodes in the domain.\nImproved Virtual Network Routes Table The Virtual Network Routes table has been significantly reworked in this release.\nThe biggest improvement is in the Destination selection method. The old interface required selecting from a long list of all nodes and clusters in the domains which became unmanageable as the number of these increased. Additionally, there was no distinguishing between nodes and clusters beyond the name.\nNow when the Destination field is selected you are given a list (typeahead filtered) that now has a prefix of Cluster or Node to clearly identify the destination type.\nAdditionally, the Save and Add Routes buttons have been moved to the top of the table to reduce the need to scroll down as you work.\nNo-NAT Virtual Networks Making Network Address Translation (NAT) easier to manage and scale has been a primary use case for Trustgrid. However, there are some situations where altering the IP addresses is unnecessary and even undesirable.\nTo address this we have added the ability to create a Virtual Network that will perform no address translation by default. This should greatly increase the ease of configuring such networks.\nWhen adding a new Virtual Network set the “No NAT Mode” to Yes. For a Network CIDR just enter 0.0.0.0/0, this field will be made optional in a later release.\nAfter creation, you will see that NO-NAT Mode is enabled in the table.\nWhenever this network is attached to a Node or Cluster interface you will see a notice like the below.\nVPN Improvements The VPN interface in the portal has been reworked in ways we hope will simplify the experience when configuring and managing.\nFeature Navigation Panels The legacy VPN page frequently required significant scrolling to get to the most relevant section. The new interface breaks these sections into multiple panels.\nSince Address Translation is the most commonly used section it is automatically selected when you navigate into the VPN context.\nImproved Multiple Virtual Network Support Trustgrid has supported Nodes and Clusters being attached to multiple Virtual Networks but the user experience interacting with them was cumbersome. For example, in a number of places, you had to select from a list of all the available virtual networks, even if they weren’t attached. This experience has been greatly improved.\nVPN Virtual Networks Table If the Node or Cluster is already attached to a single Virtual Network this will be selected automatically when you select the VPN navigation link. However, if you have multiple networks you will be presented with a table of only the attached Virtual Networks.\nThe Actions dropdown of this table will enable you to Attach additional Virtual Networks or Detach the current Virtual Networks.\nOverview Virtual Network Graph Previously the Overview Virtual Network graph listed all Virtual Networks within a domain. Now it will only show attached networks.\nVPN Toolbar Once you have navigated to the VPN context of a node and selected a Virtual Network you will see a bar like the below at the top of the page. The bar provides important data about the Virtual Network including the node’s Virtual Management IP (and the ability to edit it).\nClicking the Tools button on the right of the bar brings up a menu of both Virtual Network and Interface tools. Users no longer have to switch between tabs to access these different toolsets.\nNew Virtual Translation Table Interface The View Virtual Translation Table shows active NATs similar to a show connections command from legacy solutions. Previously running this tool produced raw console output that could be challenging to work with when there were large numbers of active connections.\nThe new version of the tools creates a paginated table that is easily searchable and can be refreshed without needing to return to the Tools section.\nProxyARP Option for Outside NATs Previously the Trustgrid node would ARP on the local network for any IP contained in the Local CIDR of an outside NAT. For example, if your Outside NAT Local CIDR was for 192.168.1.0/24, the node would respond to ARP requests for any IP in that network (192.168.1.1 - .254).\nThis is still the default behavior, but there is now an option to disable this functionality when configuring Outside NATs.\n","categories":"","description":"","excerpt":"Improved Identity Provider Integration Trustgrid has supported SAML …","ref":"/release-notes/cloud/archive/2021/march/","tags":"","title":"March"},{"body":" Cluster configuration is only available for nodes that are members of a cluster. Heartbeat The cluster heartbeat defines a persistent connection between cluster members. The heartbeat is used to determine the health of the cluster and to determine which member is the active member. This configuration is required on cluster members.\nField Name Description Heartbeat Host The IP (bound to an interface) on which heartbeat communication will occur Heartbeat Port The port on which heartbeat communication will occur The same interface should be selected for all cluster members Status Endpoint (Optional) The Status Endpoint allows you to start an HTTP REST endpoint on a port on the WAN interface IP that will return a 200 response if the member is healthy and the active cluster member. This is commonly needed if a load balancer is being placed in front a cluster to provide high-availability for ZTNA or Wireguard gateway traffic.\nField Name Description Endpoint IP Can be set to the WAN or LAN interface IP address Endpoint Port Defines the port that the HTTP server will listen on.\nIf blank the HTTP server will be disabled.\n","categories":"","description":"Configure heartbeat communication between cluster members","excerpt":"Configure heartbeat communication between cluster members","ref":"/docs/nodes/appliances/cluster/","tags":"","title":"Cluster Heartbeat Configuration"},{"body":" Connectors are configured in conjunction with services to define a local listening port for layer 4 (L4) connectivity.\nConfiguration Connectors are configured under the Networking \u003e Connectors tab of the node or cluster configuration section in the Trustgrid Portal.\nAdd Connector dialogue Field Name Description Protocol The protocol that the listener for the connector will use. Options are TCP, UDP, FTP, and TFTP.\nFTP must operate in passive mode when using L4 services and connectors.\nListen Interface The interface that you want the connector to listen on.\nAll - listens on all interfaces (0.0.0.0/0). This can be a security risk if any of the interfaces are connected to an untrusted network, like a public internet connection. Interface # - This will only listen on the IP of the selected interface. Bridge Interface - The bridge interface sits between the container and the host. This is useful if you want a container to be able to access a remote service via local port. Listen Port The port that you want the connector to listen on. Remote Node The remote node or cluster that traffic will be proxied to. Remote Service Either the friendly name of service that is defined on the remote node, or the IP:Port of the remote service to connect to. Rate Limit (Mb/s) The maximum amount of throughput that will be allowed to traverse the tunnel when connecting to the connector. This can be used to prevent saturating the connection at either the local or remote sites. Source Block (Optional, Appliances Only) This comma separated list of Network CIDRs will restict what IPs can connect to the connector. Sniff Traffic Listed only on the Connectors table, this will automatically launch a Sniff Traffic tool for the listening port.\n","categories":["node"],"description":"Configure connectors to listen on ports and forward traffic to services running on remote nodes","excerpt":"Configure connectors to listen on ports and forward traffic to …","ref":"/docs/nodes/shared/connectors/","tags":["layer 4","networking"],"title":"Connectors"},{"body":"Trustgrid nodes support running Docker containers which allows for ease of deployment across an organization. Any Docker container is supported with the exception of containers that require root level access.\nThe container can be attached to both the local and virtual network space which allows both local and remote resources to communicate with the container. For example an API could be deployed on a Trustgrid Gateway which sends API Calls via the virtual network space to a container running on a Trustgrid Edge Node. The API call could then be translated to make a call to a database running on the local network and passed back up to the gateway host.\nBefore adding a container to a node, push an image to your repository.\nReading and managing containers requires node-exec::read and node-exec::modify permissions, respectively. Executing a container requires node-exec::compute permission.\nManagement Navigate to Container Management under Compute on a node or cluster.\nHere you can add, enable, disable, delete, and import a container.\nField Name Description Name The name of the container. Execution Type A container can be deployed as one of three types.\nService - the container is created and will run as a daemon. If the node reboots, the container will start up automatically.\nRecurring - the container will run on a defined schedule. A schedule parameter is defined for the frequency, either as a rate or a cron expression.\nRate Description rate(30 minutes) Run every 30 minutes rate(1 hour) Run every hour rate(1 day) Run every day On Demand - typically used for testing. The container is executed for a single session, but will not restart on its own.\nStatus Only enabled containers will run. Image Name The name of the image to execute. Image Tag The image tag to execute. Overview Navigating into a container, the overview section allows editing basic information about the container’s execution environment.\nContainer Overview In addition to the fields above, you can modify the below optional fields after saving the new container configuration.\nField Name Description Save Output Persist standard output/standard error to the Trustgrid cloud for analysis.\nIt is the customer’s responsibility to ensure no privileged information is included in the output. If in doubt, do not utilize this feature.\nCommand The command to execute inside the container. This overrides the start command configured by the dockerfile used to build the image and can be useful for troubleshooting. Hostname The hostname set inside the container.\nDefaults to the the node name.\nStop Time The grace period (in seconds) to allow a container to stop before killing it. Defaults to 30 seconds. User Sets the username or group or uid or gid in the container. DNS Configures the container to utilize the specified DNS server for resolution.\nBy default the container uses a local resolver managed by the node software that can resolve other containers by name and will forward to the node’s configured DNS servers for external resolution.\nIP Configures the container to use the specified IP address. The IP address needs to be in the 172.18.0.0/16 network and cannot be 172.18.1.2.\nBy default this is assigned dynamically in that network.\nPrivileged Grant the container extended privileges. Best practice would be to utilize linux capabilities to grant the least privileges needed to run the container. Use Init Use an init process inside the container as PID 1. This ensures responsibilities of an init system are performed inside the container (e.g., handling exit signals). Require Connectivity Ensures that the container will not start if it has encrypted volumes and is unable to reach the control plane. Environment Variables Environment variables can be added to a container to provide configuration information to the container at runtime.\nNetwork The networking section allows you to configure the container’s VRF, its port mappings, and its virtual networks and interfaces.\nHost Port Mappings Host port mappings allow you to expose a port on the host to the container. This is useful for exposing a service running in the container to the local network.\nField Name Description Protocol The protocol to listen for. If not specified, all traffic is forwarded to the container. Host Interface The host interface to listen on. Host Port The host port to listen on. Container Port The container port that will receive the mapped traffic. Virtual Networks Attaching a virtual network to a container allows virtual network traffic to reach it.\nField Name Description Virtual Network The virtual network to attach. Virtual IP The virtual IP to assign to the container. Allow Outbound Whether the container should be allowed to make outbound connections into the virtual network. Virtual Interfaces A virtual interface can be mapped to a container to forward all traffic.\nField Name Description Name The virtual interface name. Destination The interface destination inside the container. Mounts Mounts allow a container to persist data either as an externally defined volume, or a bind mount of the node’s filesystem.\nField Name Description Type Either BIND or VOLUME. For type VOLUME, the mount must reference an existing volume. Source For volumes, the name of the volume. For bind mounts, the path on the node’s filesystem. Destination The mount location inside the container. Resource Limits Containers can be restricted to limit the amount of resources they can consume from the host.\nField Name Description CPU Max % Maximum CPU allocation. Default is 50%. Memory Max (MB) Hard limit for RAM allocation. Default is 50% of the host’s memory. Memory High (MB) Soft limit for RAM allocation. Cannot exceed hard limit. Default is 45% of the host’s memory. IO Max Read (B/s) Max allowed bytes per second of IO reads. Disabled by default. IO Max Write (B/s) Max allowed bytes per second of IO writes. Disabled by default. IO Max Read Operations (ops/s) Max allowed IO read operations per second. Disabled by default. IO Max Write Operations (ops/s) Max allowed IO write operations per second. Disabled by default. Linux ulimits can be set for each container. Supported ulimits are:\nCORE DATA FSIZE LOCKS MEMLOCK MSGQUE NICE NOFILE NPROC RSS RTPRIO RTTIME SIGPENDING STACK Health Check A health check can be configured to monitor the container’s health. If the health check fails, the container will be restarted.\nField Name Description Command The command to run. A non-zero return code indicates a health check failure. Interval The frequency (in seconds) to run the health check. Timeout How long (in seconds) to wait for the health check to complete. A timeout is considered a failure. Start Period Grace period (in seconds) during container startup before health checks should start. Retries Number of allowed health check failures before marking the container unhealthy. Linux Capabilities Linux capabilities can be added to or removed from a container, allowing fine-grained control over kernel-level features and device access.\nLogging Configuration Log files (when persisting container output) are rotated based on a size threshold.\nField Name Description Max File Size (MB) The maximum size (in MB) of a log file before it is rotated. Max Files The maximum number of log files to keep. ","categories":"","description":"Configure containers to run on appliance-based nodes","excerpt":"Configure containers to run on appliance-based nodes","ref":"/docs/nodes/appliances/containers/","tags":"","title":"Containers"},{"body":" Observability enables exporters for Metrics (stats such as CPU, Memory, Disk, bytes sent/rcv’d, ..etc), Events, Node Audits, and Configuration Changes\nEarly Access Notice The Observability feature is currently in early access. We are actively gathering feedback and usage data to help determine if additional charges will apply in the future. Functionality and pricing are subject to change.\nTo enable this feature for your account, please contact Trustgrid Support. Exporters Trustgrid currently supports an OpenTelemetry exporter for Splunk, as well as a generic HTTP exporter for platforms that accept either JSON or OTLP-encoded data, such as Logstash.\nAdding an Exporter Field Name Description Type Splunk \u0026 HTTP are currently supported Name Your desired exporter name Description A brief description for your exporter Instrumentation Types Categories of data exported by Trustgrid. The Exporter type cannot be changed after adding an exporter Splunk Exporter Settings Field Name Description Status Current exporter status. Name Current exporter name. Exporter Type Configured exporter type. Instrumentation Types Current categories of data exported by Trustgrid (e.g. Metrics). Endpoint The destination URL for the Splunk endpoint. Token The authentication token used to send data to the Splunk endpoint. Source Optional: A custom source label for events sent to Splunk. Source Type Optional: A Splunk sourcetype value to help categorize data. Index Optional: The name of the Splunk index to send data to. Enable Data Logging Enable sending logs (e.g. instrumentation other than metrics) to Splunk. Skip TLS Verification Disable TLS certificate validation for the Splunk endpoint. TLS Custom CA Optional: Provide a custom CA certificate (in PEM format) for TLS validation. HTTP Exporter Settings Field Name Description Status Current exporter status. Name Current exporter name. Exporter Type Configured exporter type. Instrumentation Types Current categories of data exported by Trustgrid (e.g. Metrics). Endpoint Base URL for sending telemetry data via HTTP. Metrics Endpoint Optional override for the metrics-specific HTTP endpoint (e.g. https://hrl/v2/metrics). Logs Endpoint Optional override for the logs-specific HTTP endpoint (e.g. https://hrl/v2/logs). HTTP Timeout Maximum time to wait for an HTTP response (in seconds - Default: 30 seconds). Read Buffer Size Size of the read buffer used when receiving HTTP responses (Default: 0). Write Buffer Size Size of the write buffer used when sending HTTP requests (Default: 512 * 1024). Encoding Specifies the telemetry data format. Options include JSON or OTEL. Compression Compression method for HTTP payloads Options include gzip, zstd, and none. Skip TLS Verification Disable TLS certificate validation. TLS Custom CA Optional: Provide a custom CA certificate (in PEM format) for TLS validation. ","categories":["monitoring"],"description":"","excerpt":" Observability enables exporters for Metrics (stats such as CPU, …","ref":"/docs/observability/","tags":["monitoring"],"title":"Observability"},{"body":" A domain is the logical grouping of nodes inside an organization.\nDomains are a logical grouping of nodes, allowing configuration of virtual networks and node thresholds. Each Trustgrid deployment has a single domain.\n","categories":["concepts"],"description":"","excerpt":" A domain is the logical grouping of nodes inside an organization. …","ref":"/docs/domain/","tags":["domain","concepts","rewrite"],"title":"Domain"},{"body":" The Data Plane panel shows a list of all statistics known peers, their connection status, provides tools for testing connectivity and can display statistics for the connection between the node and the peer.\nExport List of Peers You can export a CSV formatted list of all peers by clicking Actions -\u003e Export Export button The CSV file will include columns for:\nConnection status (true/false) Peer name Peer IP Path (if applicable) RTT - Return Trip Time or latency observed when the panel was opened or refreshed Mode - TLS or TLS/UDP Type - The role of the node to peer. SERVER = gateway, CLIENT = edge device Ports - The ports used to establish the connection Tools The far right column as links to launch the tools listed below: Data Plane Tools Data Plane Ping The gateway ping tool will launch a ping inside the data plane tunnel between the node and the gateway, similar to ICMP ping. This can provide a more realtime view of latency between node and gateway compared to the RTT column (only loaded on refresh) and the historical data which provides a minute by minute view.\nData Plane Performance Tool The gateway performance tool attempts to estimate the available upload bandwidth between current node and the selected peer.\nBy default this tool will attempt to send 10MB of data to the destination device. This then used to calculate the available bandwidth. Sending more data provides a more accurate estimate but be aware that other devices using the same internet circuit may experience degraded performance while the test is running.\nThe periods are posted for about every 1MB of data sent. If you see exclamation marks this can indicate lost packets.\nTrace Route and MTR Both of the links here will populate the interface tool of the same name with the selected peer’s IP address and TCP port. This allows you to trace the route or run MTR diagnostics directly between the current node and the selected peer.\nThis is most effective if run from the client/edge node to a gateway since the gateway is the only one actually listening on that port. If run in the other direction (gateway -\u003e client) it is likely any firewall between will drop the connections and the client will definitely not respond on that port. Peer Disconnect The disconnect button will disconnect the node from the selected peer. The tunnel should be reestablished automatically but there will be a period of disruption. After clicking the link, you will be prompted to confirm the action. Disconnect prompt If the peer node is the primary site and a DR site with a higher metric exists, some traffic may be routed to the DR site. View Latency to Peers To view latency data between two nodes, select either the edge or gateway node, and then from the peers table, select the node to view.\nGateway nodes will list edge nodes in their peers table Once a peer is selected, the monitoring section will populate with relevant data.\nHop data is only available for nodes that have hop monitoring enabled. See Monitoring Network Hops to Peers.\n","categories":"","description":"Listing of peers and connectivity testing tools for appliance-based nodes","excerpt":"Listing of peers and connectivity testing tools for appliance-based …","ref":"/docs/nodes/appliances/data-plane/","tags":["node"],"title":"Data Plane"},{"body":" The data store allows artifacts (i.e. container volumes, virtual machine images) to be synced from/to a node. The data store view is located under Compute \u003e Data Store.\nFile Explorer Allows a user to navigate, sync, create directories, delete artifacts from the data store.\n- Takes you to the Root of the directory hierarchy. - Takes you up one directory from your current location in the directory hierarchy. - Refreshes the directory hierarchy to get the latest state of the data store. - Create a new sub directory. See Directory Creation for more information - Transfer a file to the data store. See File Sync for more information - Upload a file from the data store. See File Sync for more information - Delete a file from the data store. Recent Tasks Allows a user to view the status of any long running tasks (i.e. Transfer file from Amazon S3, Upload file to HTTP endpoint, etc). Any task that is executing can be cancelled. Completed tasks can be cleared manually or they will be automatically removed 6 hours after completion time.\n","categories":["node"],"description":"","excerpt":" The data store allows artifacts (i.e. container volumes, virtual …","ref":"/docs/nodes/appliances/datastore/","tags":["data store","containers","s3","virtual machines"],"title":"Data Store"},{"body":" Trustgrid and customers can share documents securely in the Documents section.\nAdding or deleting documents requires documents::modify permissions. Downloading and viewing documents requires documents::read permissions. (show how to add and delete and download a document).\n","categories":"","description":"","excerpt":" Trustgrid and customers can share documents securely in the Documents …","ref":"/docs/support/documents/","tags":"","title":"Documents"},{"body":"Trustgrid Permissions Restructuring Trustgrid’s portal and API have used Role based permissions to manage access within the Trustgrid system. As Trustgrid has expanded our feature set, adding features like containers, and our user base have grown the predefined role structure has become a poor fit. Many times these new features required Trustgrid Support to grant access to users. Additionally, what each role could and could not do was opaque to customers.\nWith this release will be migrating to a policy-based approach that will allow customers to independently tailor permissions to meet their own use cases. Customers will also be able to see exactly what rights policies allow and what policy is granting a user access directly in the portal.\nThis migration will also allow future enhancements such as automatic policy assignment based on group membership, resource based policies limiting users to specific nodes/clusters, and more.\nHow it Works The new policy permission works as such:\nUsers can be attached to one or more policy Policies are defined that either allow or explicitly deny permissions or actions Permission are grouped according to the related feature/objects set Read allows a user to view that group of related objects Modify will allow users to add, change or delete those objects Additional actions such as running tools on a node can be allowed/denied A denied permission will override any allowed permission in another policy Migration of Role Permissions to Policies Trustgrid previously had 4 predefined roles. With this release these will be migrated into 5 new builtin policies, and an additional policy will be created. As part of this migration Trustgrid is also making sure these policies only include the “least-privileges” required to perform the intent of each of the previously defined roles.\nDuring the release process users previously assigned a role will be automatically assigned the corresponding policy or policies listed below\nBelow is a list of our historic roles and the policies that replace them plus any known changes. If users previously assigned a role lose a tool or function they need, they can either be attached to a higher level builtin policy with the appropriate permissions or a custom policy can be created and attached.\nMonitor (now tg-builtin-monitor policy) Changes:\nMonitor no longer has access to troubleshooting tools. These were removed because some of these seemed to exceed the privileges required for the user types expected to have this role. Operator (now tg-builtin-operator policy) No changes.\nNode-Administrator (now tg-builtin-node-admin policy) No changes.\nAdministrator (now tg-builtin-admin and tg-builtin-access-admin policy) The administrator role previously included both the ability to make almost all technical changes and the ability to control access and permission to the portal.\nTrustgrid determined that these functions are separate and many companies may want to further restrict the access administration to a subset of users. The functions have been split into two policies:\nbuiltin-tg-admin - Full access to make technical changes builtin-tg-access-admin - Ability to add or invite users, change and attach policies, and configure Identity Providers However, Trustgrid cannot determine who within an organization should and should not have each of these functions so during this migration any user that was previously assigned the Administrator role will be attached to both policies.\nIt is highly recommended customers review which users are attached to the builtin-tg-access-admin policy and remove from those that do not require it.\nProvisioning Order Improvements Contacts and Stakeholders Orders historically only had fields for a general order contact and a technical contact. With this release additional stakeholders can be listed (such as a project manager associated with the project or other executive contacts).\nThe goal is to eventually provide a method to send status updates to all contacts in a more automated fashion as order progress.\nAdd Provisioning Contacts for your Organization If you have stakeholders that will frequently be used on orders, you can add them as Contacts.\nThese will then be available to select in the stakeholders section of an order and will auto-polulate the fields\nActivity Report The new Activity Report will list all orders that transitioned to the selected Status during the selected Time Range and the results can be exported as a CSV. This can be useful for tracking progress of provisioning projects over time.\nRack Mount Field Added Some Trustgrid hardware has the option of including rack mounts. Previously this was documented in notes, but with this release a field has been added. If an appliance type does not have a rack mount option this will show as “unavailable”\nAccess to the Provisioning section of the portal is not a part of a builtin policy at this time. Access admins should create policies to grant users orders permissions and attach to the appropriate users.\n","categories":"","description":"","excerpt":"Trustgrid Permissions Restructuring Trustgrid’s portal and API have …","ref":"/release-notes/cloud/archive/2022/may/","tags":"","title":"May"},{"body":"Faster Node Overview Graphs With this release we have reduced the time it takes for the initial Overview graphs to load when you first navigate to the node.\nNew Time Range Selector Previously the Trustgrid portal used a few different time range selectors on different pages, none of which were the most user friendly. Trustgrid is standardizing on a new selector shown below which some key new abilities:\nChange from Local (browser) time zone to UTC Switch from an Absolute (e.g June 1 at 10am to Jun 1 at 11am) to a Relative time (last X hours) The new selector is in use at:\nFlow Logs - Advanced Search Data Plane - Gateway monitoring statistics Data Plane Panel Improvements Data Plane Monitor Graph Previously the statistics for latency (visible after clicking on the name of a connected gateway) were shown in three separate graphs: min, max, and mean. This sometimes made it hard to compare as they had different scales. Now these data points are visible on a single graph. They can also be deselected with the graph scale adjusting automatically.\nSort Peers by Connected Status Previously the connected status column didn’t allow you to sort. If you had a lot of connected peers and wanted to focus on disconnected ones it was a challenge. Now you can sort by clicking on the column header.\nNode Location Tab There is a new Location panel under History on the node detail page. This page allows you to:\nSpecify the Latitude and Longitude of used to display the location of the node on the network map. You can utilize a map such as Google Maps to determine these coordinates Specify the City, State, Country and Zip where the node is deployed. Currently this is for informational purposes only and does not update the Lat/Long coordinates. Flow Log Improvements In addition to the new time range selector, we have also improved how advanced searches return results. Previously, if your search included a long time range or was run on a node with a lot of flows the system could return partial results. Now we’ve added a “Load More” button and additional results will be returned.\nAccess Policy Improvements We’ve added several improvements to the Access Policy table for a virtual network.\nYou can now select and bulk delete rules New special destination object options: private - all IP v4 blocks defined as private by RFC 1918 public - public will cover all other IP v4 addresses ","categories":"","description":"","excerpt":"Faster Node Overview Graphs With this release we have reduced the time …","ref":"/release-notes/cloud/archive/2022/june/","tags":"","title":"June"},{"body":" This page will show the most recent flow logs for the specific node being viewed and allow for advanced searches scoped to the current node.\nSee this page for more info on Flow Logs\n","categories":"","description":"Flow logs scoped to selected node","excerpt":"Flow logs scoped to selected node","ref":"/docs/nodes/shared/flow-logs/","tags":"","title":"Node Flow Logs"},{"body":" The Gateway panels contains settings determining how the node connects to peer nodes by either acting as a server or client. The tunnels created by these connections are the foundation for the underlay network that enables overlay services like site-to-site VPN and L4 proxy services. Additionally, the Diagnostics page can be of use troubleshooting connectivity issues if layer 4 connectivity has already been confirmed.\nGlobal Settings The header bar contains settings that apply to both the node’s client and server functionality. Gateway Settings Header Field Name Description Enable UDP On a server, this will determine if the server will listen for UDP tunnel connections on the configured UDP port. On a client, this will determine if the client will attempt to build UDP tunnels to any server with UDP enabled. Max Ingress The maximum total amount of ingress traffic in megabits per second allowed on the node. Max Egress The maximum total amount of egress traffic in megabits per second allowed on the node. Gateway Troubleshooting Tool The Troubleshoot Gateway Traffic tool allows you to inspect live diagnostic messages about traffic between this node and its configured peers. Gateway Troubleshooting Tool Clicking the “Troubleshoot Gateway Traffic” button will open the below dialog that allows for filtering the output seen in the Troubleshoot Gateway tool by peer, local or service. Selecting what to filter on and clicking “Apply” will update the output seen in the tool. Accepting the default will display all gateway messages.\nTroubleshoot Gateway Traffic Filter Dialog The output can be useful in troubleshooting why a node and a peer are not connecting.\nExample output of Troubleshoot Gateway tool ","categories":"","description":"Configure gateway server and client settings to manage connections to peer nodes, and run related diagnostics","excerpt":"Configure gateway server and client settings to manage connections to …","ref":"/docs/nodes/appliances/gateway/","tags":"","title":"Gateway"},{"body":"Resource-Scoped Permission Policies The May 2022 release enabled the creation of more granular permissions policies. With this release we’ve added the ability to grant permissions to specific node or cluster resources. This enables you to limit a user to only see specific devices with very limited permissions.\nPolices now have a Resources section. This can be populated with a list of Trustgrid Resource Names (TGRN) to limit where the defined permissions are applied. See the documentation on Resource-Scoped Polices for more info.\nMonitor Network Hops Trustgrid has add a troubleshooting feature to collect traceroute like data on a regular basis. When enabled a node will collect 3 samples a minute and store the data in the cloud. This data will assist in determining the source of packet loss or high latency between devices. See Monitoring Network Hops to Peers to learn more.\nShow ISP and ASN for Public IP Trustgrid now uses our IP geolocation database provider to supply the internet service provider (ISP) and autonomous system number (ASN) associated with the public IP of nodes. This info is visible under History → Location, listed under the IP-Derived Info panel.\nIt should be noted the accuracy of this information varies between ISPs\nIdentity Provider (IdP) Logins in Authentication Audits Previously, the logs under the Operations → Authentication Audits only displayed logins using the Trustgrid native authentication provider. If you were using an IdP you would need to review the providers logs to see when users logged in.\nWith this release we now display IdP portal logins the same way native logins are reported.\n","categories":"","description":"","excerpt":"Resource-Scoped Permission Policies The May 2022 release enabled the …","ref":"/release-notes/cloud/archive/2022/august/","tags":"","title":"August"},{"body":"Tag Improvements Two major improvements regarding tags.\nCluster Members Inherit Tags Previously you had to set tags at the node and cluster level which required a lot of duplicate effort. Now when you configure tags at the cluster level the member nodes inherit this tag.\nTags Searchable in the Nodes Table With this release if you add a tag as a column to the nodes table, you can then search the table for matching values.\nNodes Table Improvements Two new columns can be added to the nodes table:\nVirtual Management IP Column You can now see from the table the virtual management IP assigned to each node. If you have multiple virtual networks you will have the option to select each network as a column. These columns have the prefix MGMT IP:.\nDevice Type Column You can now see what type of device, physical or virtual, is running the node software.\nGeneric Webhook Support as an Alert Channel This version adds the ability to publish alerts to a channel utilizing a generic webhook. This should allow integration with additional systems beyond the built-in channels Trustgrid supports.\nTo utilize either edit an existing channel or create a new one and populate the Generic Webhook section.\nProvisioning Improvements There have been several changes to the Provisioning (formerly Orders) section of the Portal including:\nDue Dates for Orders Support for specific device models (as opposed to just hardware vs virtual) ","categories":"","description":"","excerpt":"Tag Improvements Two major improvements regarding tags.\nCluster …","ref":"/release-notes/cloud/archive/2021/august/","tags":"","title":"August"},{"body":"The infovisor displays details about the Trustgrid node and can be displayed by clicking the Info button in the top right or hitting the backtick ` key. Button to open Infovisor It displays the following information in a card layout broken up into a number of sections that can be expanded and collapsed, or removed from view. Example infovisor It contains the below information but can vary between appliance and agent-based nodes. The table below lists the fields and if they are displayed depending on node type.\nSections The node name is displayed at the top, center of the infovisor. This is the one section that cannot be removed from view.\nEssentials Field Agent Appliance Description Status ✅ ✅ The status of the node, either “Enabled” or “Disabled”. Node/Agent ID ✅ ✅ The unique ID of the node. Location ✅ ✅ The location of the node as determined by geo-location of the public IP address of the node. ISP ✅ ✅ The ISP of the node as determined by the public IP address of the node. TGRN ✅ ✅ Trustgrid Resource Name of the node. Version ✅ ✅ Package Version ❌ ✅ Connection Field Agent Appliance Description Control and Data Plane Status ✅ ✅ Status of the control and data plane connection to the Trustgrid control plane. Public IP ✅ ✅ The public IP address of the node as observed by the Trustgrid control plane. This includes a lock icon to indicate if the node is [limited to a specific public IP address.]/tutorials/management-tasks/limit-node-functionality/ Interfaces This panel includes a table listing information about the interfaces on the node.\nCopy buttons are included next to each cell. And there is a Copy All button that will copy the entire table to the clipboard.\nAdditionally, under actions you can export the table to a CSV file.\nDevice Field Agent Appliance Description Device Type ✅ ✅ The hardware type of an appliance or will list “Agent” as the type for agent-based nodes. Role ❌ ✅ Will list the Gateway Server role if acting as a Gateway Server. Or Edge if acting as an Edge node. Operating System (OS) Version ✅ ✅ The OS version of the node. UDP Mode ✅ ✅ Displays if the node is enabled to attempt using UDP tunnels Configuration Status - Appliances Only Field Description SSH Lockdown Displays if the SSH is restricted properly. Clicking the refresh button will recheck the status. DNS Resolution Displays if the node can successfully resolve DNS using the configured DNS servers. Clicking the refresh button will recheck the status. Repo Connectivity Displays if the node can connect to the Trustgrid update repository. Clicking the refresh button will recheck the status. Last Node Config Update The recent date and time the node last downloaded a new node or cluster configuration and applied it. If this is older than the last known node (or cluster) configuration change, this could indicate the node is having issues connecting to the Trustgrid control plane REST API for configuration updates. Last Domain Config Update The most recent date and time the node last downloaded a new domain configuration (e.g. virtual network route changes) and applied it. If this is older than the last known domain configuration change, this could indicate the node is having issues connecting to the Trustgrid control plane REST API for configuration updates. Upgrade Status Displays if an upgrade is either: In ProgressCompleteFailed Upgrade Completion Time The most recent date and time the upgrade was completed or failed. AWS Metadata (AWS Appliances only) Field Description Availability Zone The Availability Zone of the node. Instance ID The Instance ID of the node. Instance Type The Instance Type of the node. AMI ID The AMI ID of the node. Azure Metadata (Azure Appliances only) Field Description VM ID The VM ID of the node. VM Size The VM Size of the node. Subscription ID The Subscription ID of the node. Location The Location of the node. Tags This section displays a table of all Trustgrid tags applied to the node.\nUnder actions, you can export the table to a CSV file.\n","categories":"","description":"The infovisor displays details about the Trustgrid node","excerpt":"The infovisor displays details about the Trustgrid node","ref":"/docs/nodes/shared/infovisor/","tags":"","title":"Infovisor"},{"body":" The Trustgrid Portal can integrate with external identity providers. The identity providers added to the Portal may be used for ZTNA access and/or Portal authentication.\nAuthentication Domain To use an identity provider for first configure the authentication domain. This domain can be used to access the portal (if “Use for Portal Auth” is enabled) and is used in the configuration of at the IdP provider to forward users back to Trustgrid. Example authentication domain configuration Identify Providers Each IdP has the following fields. Beyond that the settings differ for each provider type.\nField Name Description Type the identity provider type. Name used inside the portal when associating an identity provider with a ZTNA application Use for Portal Auth whether or not this provider should be the default authentication provider. Only one provider can be used for Portal authentication. ","categories":"","description":"","excerpt":" The Trustgrid Portal can integrate with external identity providers. …","ref":"/docs/idps/","tags":"","title":"Identity Providers"},{"body":"Container Improvements Trustgrid has greatly enhanced the container features we support and this release makes these features available to all users.\nContainer Management You can now stop and start individual containers running as a service from within the portal.\nContainer Volumes and Mounts Containers on Trustgrid now support creating persistent volumes and mounting them within the container. These volumes can even be encrypted using Trustgrid managed, software-based encryption.\nContainer Privileges It is now possible to run containers as a privileged user or specify the user/group the container should execute as. Additionally, you can add or drop Linux capabilities that the container has enabled on execution.\nImport Container Configuration Container configurations can end up complex. Recreating on many nodes is tedious and error prone. Trustgrid now supports importing the configuration from an existing node or cluster that has the container defined as desired.\nInteractive Tools Improvements Terminate Running Tools without Closing Window Interactive tools such as Terminal and Sniff Traffic now support terminating the session without closing the window. This can be useful in situations, such as if sniffing traffic on a very active node, where you want to be able to stop the tool but still be able to analyze the output.\nTraffic Capture Tool Improvements The Traffic Capture tool now displays the settings used while running. This includes the interface and filter.\nProvisioning and Order Management Improvements The Provisioning section of the Trustgrid portal has been extensively overhauled to improve the order management experience and make future improvements easier.\nNew Look The first change you’ll notice is that clicking Provisioning opens a new tab. The orders table now makes it easier to search and filter the results.\nThe individual order screen is now a single page view to reduce the need to switch between tabs. And orders now support attaching files such as legacy device configurations or diagrams that might be useful for configuring the new devices.\nOrder Notifications You can now configure Alarm Filters for four new order based events:\nOrder Created Order Commented Order Status Change Order Customer Update These events can then be sent to existing or newly defined channels.\n","categories":"","description":"","excerpt":"Container Improvements Trustgrid has greatly enhanced the container …","ref":"/release-notes/cloud/archive/2021/september/","tags":"","title":"September"},{"body":"Network Interfaces Navigate to a node, then select Interfaces under the Network section.\nInterfaces panel The Interface dropdown at the top allows you to select which interface to manage.\nETH0 - WAN Interface This interface is always used to build the outbound TLS tunnels for control and data plane connectivity. If the node is deployed in a single interface configuration, this interface will also be used for local network connectivity.\nETH# - LAN Interface Used in configurations with more than one interface for local network connectivity.\nVLAN Subinterface Virtual under a physical LAN interface that will apply a VLAN tag to traffic\nConfiguration Field Name Description Hardware Address MAC address of the interface. Interface Name Name assigned to the interface by the operating system. This varies between hardware models and is sometimes needed when using tools such as Sniff Interface or reviewing logs. Interface VRF Selects to which VRF the interface is attached. VLAN ID (Subinterfaces Only) Sets the VLAN ID/tag for the subinterface. IP Assignment DHCP - requires a DHCP server or relay in the same broadcast domain as the interface connection Static - configured using the fields below IPv4 Address CIDR IP address using classless inter-domain routing (CIDR) notation. Gateway IP ETH0 - The IP address of the default gateway for this device. All traffic not in the same network as an interface IP or with a specified route will use this gateway. ETH1 - This is only used in a 2-interface setup to access local resources outside the interface’s configured network. Routes must be defined. DNS Servers IP (ETH0 only) Used to resolve DNS names to connect to the Trustgrid control plane. Cluster Virtual IP Used in clusters, this IP address is moved between member nodes based on the active cluster member. It can be used to route traffic between the virtual and local networks. This IP address can only be changed within the cluster interfaces page. MTU This field allows you to change the Maximum Transmission Unit (MTU) of the interface. MTU impacts the maximum size of packets sent or received on the interface. Auto-Negotiation Sets if the interface will use auto-negotiation to determine the speed and duplex settings. Values can be AUTO (default) or MANUAL. Duplex Locked unless Auto-Negotiation set to MANUAL. Sets the interface to either FULL (default) or HALF duplex Speed Locked unless Auto-Negotiation set to MANUAL. Sets the interface to 10, 100, 1000 Mbps. Ignore Health Check Value can be Disable (default) or Enable. If set to Enable, the interface’s link status will no longer be used by the node to determine its cluster member health state. Useful if a single node has a network connection it’s peer does not such as an alternate WAN path. Be Advised By default, Trustgrid uses the address space 172.18.0.0/16 for the container bridge network. Assigning an interface an IP address in this range can cause unexpected behavior and should be avoided. If required, you can work with Trustgrid support to override the default network. Interface Routes If the node is part of a cluster, these must be configured at the cluster level\nThese routes are used to access networks that are not in the same network as a configured interface and that are not accessed using the default gateway IP configured for ETH0 - WAN Interface. It is rare to need to define these on the ETH0 interface.\nSelect the interface from the Network Interface dropdown.\nClick the + Add Entry button.\nEnter the route information There are three fields:\nField Name Description Destination CIDR This is the CIDR notation of the network or host that needs to be routed. For a single host, use /32 as the CIDR suffix. Next Hop The IP address to which traffic destined for the above defined network will be sent. No CIDR suffix is needed. Description Optional field to provide additional information about the route. Click the green check to confirm the route.\nRepeat steps 2-4 with any additional routes.\nClick the Save button.\nAdditional IPs IP address entries added to the list below will be bound to the current interface. Only visible on LAN interfaces and Subinterfaces Advanced Network Settings Field Name Description Dark Mode Value can be Disable (default) or Enable. When set to Enable the node will restrict ICMP responses so that it will not respond to ICMP (Ping) echo requests or respond to failed TCP/UDP connection attempts with reset or ICMP Destination Port Unreachable ","categories":"","description":"Configure and manage the node's local network configuration","excerpt":"Configure and manage the node's local network configuration","ref":"/docs/nodes/appliances/interfaces/","tags":["node"],"title":"Interfaces"},{"body":"","categories":"","description":"Trustgrid Release Notes\n","excerpt":"Trustgrid Release Notes\n","ref":"/release-notes/","tags":"","title":"Release Notes"},{"body":"Trustgrid nodes can be in two states:\nEnabled - In this state the node will connected to the Trustgrid Control Plane and any Data Plane gateways the node is configured to use. Disabled - This is a reduced functionality state that cause the node to only attempt to connect to the Trustgrid control plane. It can be managed to a limited extent but many other Trustgrid features will not function in this state Disabling a node allows for additional security if a device is in transport and can also be used as an easily reversible way of verifying a node is no longer in use before fully deleting the node.\nChanging the node status will trigger a restart of the Trustgrid node service. Disabling/Enabling from Info Tab If disabling or enabling a single node you can:\nNavigate to that node in the Trustgrid portal. Open the Info tab by clicking the dropdown in the top-right, or hitting the ` key. From the Status dropdown change to Disable or Enable Info tab with Status dropdown Disabling/Enabling from Nodes Table If disabling or enabling multiple nodes it is easier to do so from the Nodes table\nNavigate to the nodes table. (Optional) Use the search box to filter the displayed nodes. Note that if you change this any selected nodes will be de-selected. Use the checkbox on the left to select the nodes you wish to disable or enable. From the Actions dropdown select either Enable or Disable Status actions on Nodes table Disabling/Enabling via Terraform Nodes can be enabled or disabled via the Trustgrid published Terraform provider using the tg_node_state resource.\nThe Trustgrid API refers to this state via the status attribute. The value ACTIVE means the node is enabled and the value INACTIVE indicates the node is currently disabled ","categories":"","description":"Describes the process of enabling or disabling a Trustgrid node and the impacts of such a change","excerpt":"Describes the process of enabling or disabling a Trustgrid node and …","ref":"/tutorials/management-tasks/changing-node-status/","tags":"","title":"Changing Node Status (Enabling / Disabling)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/deployments/","tags":"","title":"Node Appliance Deployments"},{"body":"","categories":"","description":"","excerpt":"","ref":"/help-center/kb/","tags":"","title":"Knowledge Base"},{"body":" A network object allows naming a CIDR inside a VPN for easier rule management.\nA network object requires the following fields:\nField Name Description Name The label to use when referencing this object. CIDR Specifically an IPv4 CIDR. Multiple network objects may be clustered into a network group.\n","categories":["concepts"],"description":"","excerpt":" A network object allows naming a CIDR inside a VPN for easier rule …","ref":"/docs/domain/virtual-networks/network-objects/","tags":["domain","concepts","rewrite"],"title":"Network Objects"},{"body":"When troubleshooting a problem on edge or gateway nodes, reviewing node events can provide critical information about the nature of the problem.\nChoose the node that may be causing the problem Scroll down to Events Look for any critical problems Events for the currently viewed node For issues affecting multiple nodes, review events across the organization to detect patterns or issues.\nChoose the Operations tab View Events across the organization Organization wide events ","categories":"","description":"","excerpt":"When troubleshooting a problem on edge or gateway nodes, reviewing …","ref":"/help-center/ops-logs/review-node-events/","tags":"","title":"Review Node Events"},{"body":"Nodes The basic building block of a Trustgrid network is a node. Nodes are deployed on-premises or in your cloud provider and connected to each other to build a data plane on top of which additional services such as virtual networking, ztna access, and compute can be provided.\nNodes can be deployed either as an agent, a service running in an existing operating system, or as an appliance which bundles the operating system and Trustgrid software together.\nAdditionally, appliance-based nodes can be clustered to provide high availability at a site.\nGateways While all nodes can act as edge nodes (making only outbound connections), appliance-based nodes can also be configured to act as gateway servers which listen for inbound connections from other edge nodes in the account.\nThese connections create the private data plane which enabls the Trustgrid network services.\nData Plane The data plane is built between edge nodes and their gateways nodes to allow private connectivity between sites. It provides a virtual network overlay on top of the public internet to securely connect distributed systems and applications.\nVirtual Networks Nodes can be attached to virtual networks, which provide a way to share network configuration like routes, NATs, and ACLs at scale.\nLayer 4 Proxy The data plane can also be used to enable Layer 4 proxy connections across two nodes. In this setup, one node will act at the connector listening on a specified port. When traffic is received on that port it will be forwarded to the configured service. The node that hosts that service will then forward the traffic on to the configured IP and port using it’s local interfaces.\nZTNA Applications ZTNA Applications can be exposed through nodes or clusters. Access to an application can be restricted via access policies, for example to only allow users from a specific country.\nControl plane In addition to the data plane, all Trustgrid nodes build connections to the Trustgrid control plane. This allows centralized management and monitoring of all nodes from the Trustgrid portal and api including:\nSoftware updates are provided through our apt repository that ensures nodes have security updates available and only run with tested software permutations Network, node, user, and application configuration is managed through our web portal Configuration changes are broadcast to nodes as needed, for example when adding routes or adding a gateway to your network All services of the control plane are contained Trustgrid’s reserved address spaces to limit the required firewall rules required for an edge node to operate behind a firewall.\nBasic Connectivity Diagram ","categories":["overview"],"description":"Trustgrid basic architecture overview\n","excerpt":"Trustgrid basic architecture overview\n","ref":"/getting-started/basic-architecture/","tags":["architecture"],"title":"Basic Architecture"},{"body":"Repository Performance Improvements This release includes a significant overhaul of the the repository control plane service. This service is responsible for providing upgrade packages and pushing/pulling container images.\nData Plane Stats for Private and Hub Gateways Prior to this release, viewing the Data Plane stats such as tunnel latency and [network hops](https://docs.trustgrid.io/tutorials/gateway-tools/monitoring-network-hops-to-peers/ would not display. These stats will now be displayed the just like edge and public gateway stats.\nChanging Configured Master (Active) Logging With this release, if a user changes which node is configured as the master (active) member of the cluster it will be logged on Changes for the cluster.\nChanging the configured master (active) node ![set active](set-active.png) Change entry for active member change ![change list](changes.png) ","categories":"","description":"","excerpt":"Repository Performance Improvements This release includes a …","ref":"/release-notes/cloud/archive/2022/october-3/","tags":"","title":"October Third Release"},{"body":"Order Management Improvements This release is primarily focused on making improvements to our order management system.\nNotification of Changes in Open Orders Previously if more than one user was making changes to the same order it was possible the second user to save would overwrite the changes of the first.\nNow the system will notify you if someone has changed an order while you have it open. You would then need to refresh the page to see the changes made.\nPriority Field Orders can now be assigned a priority of Normal, High or Urgent. This will be reflected in the Orders table by changing the color of the summary to yellow for High priority and red for Urgent.\nOrder priority menu ![priority field](priority-field.png) Example High, Urgent, and Normal priority order summaries ![priority summaries](priority-list.png) Support for Hyperlinks You can now add Hyperlinks within an order to provide support documentation on the configuration.\nHyperlink Form ![hyperlink form](hyperlinks.png) “In Production” Orders moved to Closed Now when an order’s status is changed to In Production, it will appear in the Closed page of orders. This will make is easier to see how many open orders are in process.\nOther Improvements Advanced Flow Log Search History You can now load a history of your previous Advanced Flow Log searches by clicking the history tab to the right. You can then choose to reload a prior search’s parameters by clicking the apply button.\nEvents Table Search The Events table now has a search field that will filter the events shown. This has been added both at the Node Detail Events page and under Operation to see events across all nodes in the org.\n","categories":"","description":"","excerpt":"Order Management Improvements This release is primarily focused on …","ref":"/release-notes/cloud/archive/2022/october-2/","tags":"","title":"October Second Release"},{"body":"Cluster Improvements Cluster Site Health State With this release we introduce the concept of Cluster Site Health State. This addition makes it more obvious when there is an issue with a cluster at a site and possible to configure alarm filters to notify your team when changes occur.\nWe display the cluster health on the list view:\nAnd on the cluster overview:\nUnhealthy notice on cluster overview ![cluster unhealthy notice](cluster-unhealthy-notice.png) Offline notice on cluster overview ![cluster offline notice](cluster-offline-notice.png) Cluster Status Endpoint When placing a load balancer in front of a Trustgrid cluster it is necessary to give the load balancer a way to determine which node is active so that it can send the traffic appropriately. We’ve added an optional HTTP endpoint that will listen on cluster members but will only return a 200 code on the active member of the cluster.\nThere is now a new section under System → Cluster for cluster members where you can define the port on which the node will listen. This endpoint will always listen on the WAN interface IP.\nRequires node version 20220808 or newer\nEnable Different Interface Routes for Cluster Members Traditionally, cluster members share the interface routes configured at the cluster level. This is usually desirable, but certain situations can require each member to have a different route defined. For example, If you have deployed your cluster members in different AWS Availability Zones for redundancy and you have the heartbeat communication on a LAN interface each would need a different route.\nWith this release you will see the ability to “Add Entry” for additional routes under the LAN interface section of cluster members. You will also see a read-only entry with a blue square for any cluster-defined route.\nData Plane Panel Improvements Easier Peer Selection Previously, to select a node in the data plane peers table you had to click exactly on the node’s name. Now, you can click anywhere in the name box.\nDisplay Data Plane Stats for Gateways Prior to this release we only displayed Tunnel Latency and Network Hops (when enabled) on edge node devices. With this release you can now navigate to a gateway’s data plane panel and select a client edge node. The data displayed is based on the edge node’s perspective but can still provide useful information on the state of the connection between devices.\nOther Improvements Flow Log Advanced Search by TCP Flags The Flow Log Advanced Search now has the ability to search for TCP flows with specified TCP flags. In the TCP Flag section just click the flags that you want to search for and the matching flows will be returned. If multiple flags are selected, only flows with all matching flags will be returned.\nNode Audits Shows Node Version Changes When a node is upgraded and successfully reconnects, the Node Audits section will display the new and previous versions.\nSwagger API Improvements A number of new areas are now documented in our public swagger documentation: https://portal.trustgrid.io/api-docs/\nThe new sections include:\nAdditional Audit endpoints Container and VM configuration ZTNA Gateway ","categories":"","description":"","excerpt":"Cluster Improvements Cluster Site Health State With this release we …","ref":"/release-notes/cloud/archive/2022/october/","tags":"","title":"October"},{"body":" Enable Forwarding This check box determines if an agent will attempt to forward traffic to/from between the VPN tunnel interface and IP addresses and networks accessible via other interfaces on the agent.\nManaging Forwarding This option is deselected by default. To enable, select the check box and click Save.\nNetwork Address Translation By default, all forwarded traffic retains the original IP address local to the agent. It is common to want or need to translate these addresses to avoid IP conflicts or to maintain consistent IP address spaces. The Network Address Translation table allows for mapping the local IP addresses or networks to virtual IP addresses or networks.\nField Name Description Local CIDR The local IP address or address block that should be mapped into the virtual network. It should be entered in CIDR block format (eg - 192.168.100.0/24 or 192.168.100.51/32). Virtual CIDR The virtual network IP address or addresses that the local IP addresses should be mapped to, also entered in CIDR block format. Description (optional) Allows for a user friendly description of the NAT rule. Example NAT Using the example shown in the screenshot above, the local IP address 172.16.55.199 is translated to 10.200.101.1 when forwarding traffic from the VPN tunnel interface to the local network.\nflowchart LR remoteNode[Remote Node\u003cbr\u003e10.200.0.1] originalReq[[Source IP: 100.200.0.1\u003cbr\u003eDestination IP:10.200.101.1]] localNode[Local Agent Node] natReq[[Source IP: 10.200.0.1\u003cbr\u003eDestination IP: 172.16.55.199]] localServer[Local Server\u003cbr\u003e172.16.55.199] remoteNode--\u003eoriginalReq--\u003elocalNode--\u003enatReq--\u003elocalServer The translation works in the other direction as well\nflowchart LR remoteNode[Remote Node\u003cbr\u003e10.200.0.1] originalReq[[Source IP: 172.16.55.199\u003cbr\u003eDestination IP:10.200.0.1]] localNode[Local Agent Node] natReq[[Source IP: 10.200.101.1\u003cbr\u003eDestination IP: 10.200.0.1]] localServer[Local Server\u003cbr\u003e172.16.55.199] localServer--\u003eoriginalReq--\u003elocalNode--\u003enatReq--\u003eremoteNode Managing NAT Rules Add Agent NAT Rule Navigate to the desired Agent’s Address Translation page. Click the “Add Entry” link below the Network Address Translations table. Enter the Virtual CIDR and Local CIDR address ranges to map. Optionally, provide a description. Click the green check box to the right of the rule. (Optionally), repeat with additional rules. Click Save Delete Agent NAT Rule Navigate to the desired Agent’s Address Translation page. Click the X symbol to the right of the rule you wish to remove. (Optionally), repeat with additional rules. Click Save ","categories":"","description":"Define how an agent forwards and translates VPN traffic","excerpt":"Define how an agent forwards and translates VPN traffic","ref":"/docs/nodes/agents/vpn/nat/","tags":"","title":"Agent Address Translation"},{"body":"Cluster IP The Cluster IP is a virtual IP address used by the cluster to provide a consistent endpoint for clients, even when the active node changes.\nAvailability Platform Supported On-Premise ✅ Yes Azure ✅ Yes AWS ❌ No Google Cloud (GCP) ❌ No On-Premise The Cluster IP is supported in on-premise deployments. The active member of the cluster answers ARP requests for the Cluster IP. Only the active node will respond, ensuring traffic is directed correctly in failover scenarios.\nAzure The Cluster IP is supported in Azure. It is managed through the Azure API by assigning it as an additional IP configuration on the network interface of the active node. This requires API-level permissions and is automatically handled by the control plane.\nAWS The Cluster IP is not currently supported in AWS due to limitations in IP failover and reassignment capabilities in the VPC networking model.\nGoogle Cloud (GCP) The Cluster IP is not currently supported in GCP. Similar to AWS, GCP lacks the low-level IP address failover control necessary to support this feature reliably.\n","categories":"","description":"Features and configuration options specific to clustered environments","excerpt":"Features and configuration options specific to clustered environments","ref":"/docs/clusters/cluster-only-config/","tags":"","title":"Cluster-Only Configuration Items"},{"body":"The overview page for agent-based nodes shows several graphs and provides a table of recent flow logs.\nExample Overview panel for an agent Graphs Node Performance - This section shows graphs of CPU, memory, disk, and network usage over time for the agent node. Agent Process Performance - This section shows the CPU, memory, and disk IO usage of the actual Trustgrid agent process. Traffic Throughput - This section shows the total sent and received traffic in megabits per second (Mbps) for all interfaces on the agent. VPN Traffic Throughput - This section shows the total sent and received traffic specifically over the virtual network tunnel interface in megabits per second (Mbps). Note about agent statistics Agent-based nodes report their statistics to the Trustgrid control plane periodically which are then processed and available for display. As such there can be a delay of up to 5 minutes before the graphs show a data point. Appliance-based nodes can report their stats in realtime when online and connected to the portal. Recent Flow Logs This section gives a quick view of the most recent reported flow logs and provides a link to the Flow Logs page for more advanced filtering and analysis.\n","categories":"","description":"Agent node statistics and recent flow logs","excerpt":"Agent node statistics and recent flow logs","ref":"/docs/nodes/agents/overview/","tags":"","title":"Overview"},{"body":"The process below will guide you through requesting a free trial account.\nHigh-Level Steps Sign up for a Trustgrid trial account Verify email Sign in Prerequisites Email address Chrome-based browser Step 1 - Create a Trustgrid account Using Chrome or a similar browser navigate to https://portal.trustgrid.io/signup Provide the requested information. Note that the account will be created based on the provided Company Name. A verification email will be sent to the provided address. Check your email inbox for the verification email from Trustgrid. It may be in your spam folder. Click the link to verify your email address. You will be redirected to the login page. Sign in using the credentials you provided during sign-up. Upon login, you will be required to configure one-time password multifactor authentication (MFA). Use an app such as Google Authenticator or Authy to scan the QR code. Enter the returned one-time password when prompted. You will be redirected to the Trustgrid portal to continue the setup process by choosing a domain Note: If you are not automatically redirected back to the Trustgrid portal just click the Portal link in the top right. Link back to Portal Step 2 - Choose a domain All Trustgrid accounts have a base domain that is used to create fully qualified domain names (FQDN) for resources such as nodes and clusters.\nOn initial login, you will be prompted to provide the subdomain for your FQDN. This will be appended with .trustgrid.io automatically. Prompt to create account domain This name must be unique among all Trustgrid customers, if you choose a domain name that is already taken you will be prompted to choose another. The subdomain can only consist of lower-case letters, numbers, and hyphens(-). Once created the domain cannot be changed. Please choose carefully. Next Steps You now have access to the Trustgrid portal and can begin installing agents.\n","categories":"","description":"Sign up for a free trial account to deploy agents and explore Trustgrid features. - 5 minutes","excerpt":"Sign up for a free trial account to deploy agents and explore …","ref":"/getting-started/trial/request-trial/","tags":"","title":"Request Trustgrid Trial Account"},{"body":"Gateways servers are nodes that are configured to receive connections from other Trustgrid nodes (clients). These are the only nodes that need to have ports open and listening on the internet or WAN network.\nThe server sub-panel provides the settings controlling if a node will act as a server and if so how clients will connect to it.\nGateway Server Types A gateway server can be one of three types:\npublic - all nodes, except other public gateways, in an organization will attempt to connect to this gateway on the listed IP/DNS name and port private - allows only allow-listed clients to connect hub - allows connections from edge nodes and other gateway nodes Settings Example Gateway Server settings Field Name Description Enabled Either Enabled or Disabled. This determines if the main TLS Gateway server will be started or not. When enabled, the node will listen and accept connections from other nodes on the Public IP and DNS and port.\nIf this setting is set to Disabled the below settings are extraneous and not used, with the exception of UDP enabled as it is also a client setting.\nPublic IP or DNS The public IP or DNS name of the gateway. This is the address that other nodes will use to connect to this gateway. Port The TCP port that the gateway will listen on. This is the port that other nodes will use to connect to this gateway. UDP Port The UDP port that the gateway will listen on for UDP tunnels. This is the port that other nodes will use to connect to this gateway. Certificate Optional When using DNS for gateway connections, you may specify an uploaded certificate to use for TLS connections. If not specified the certificate autogenerated during activation is used. Gateway Type The type of gateway. See Gateway Types for more information. Request Clients Monitor Hops Disabled by default. If enabled, all clients will attempt to monitor hops to the gateway. This feature requires the April 2025 major appliance release or later to be visible. After changing any of the above settings you will need to click Save for the changes to go into effect.\nEnabling and disabling the gateway server will require a restart of the node service which will disrupt all node functionality for a brief period. Gateway Clients This section is only used if the node is configured as a private gateway server. Only clients listed on this page will attempt to connect to the server.\nAdd Gateway Clients To add clients:\nType part of their name in the “Add Gateway Client” box. Example showing filtered list of nodes Select the desired node from the list. After selecting you should see the node in the table with Enabled set to true. Selected node added to table Optionally, repeat the above steps with additional nodes to add as clients. Click Save. Remove Gateway Clients To remove clients:\nOptionally, use the search box to the top right of the table to filter the displayed clients. Click the black X to the right of the client you wish to remove. Black X will remove the client Click Save. ","categories":"","description":"Configure gateway server settings","excerpt":"Configure gateway server settings","ref":"/docs/nodes/appliances/gateway/gateway-server/","tags":"","title":"Gateway Server Settings"},{"body":"Supported Operating Systems Linux Ubuntu 22.04 LTS x86-64/AMD64 At this time only x86-64/AMD64 based operating systems are supported. Container The Trustgrid agent can be deployed as a container on Linux systems. This provides an isolated environment for the agent without requiring a full operating system instance.\nTrustgrid provides a Docker image that contains the agent pre-configured and optimized to run in Docker or similar container hosting environments like Kubernetes.\nAgent Installation Installation instructions are also shown in the portal after adding an agent. Ubuntu 22.04 Follow the process below to install on Ubuntu 22.04 Jammy Jellyfish operating systems: From the Nodes table, click the + Add Agent button to generate an agent token. Add Agent Button When prompted provide a name and choose the Virtual Network the agent will connect to. Then click Add. Name 'agent1' and assigned to 'default' virtual network Make sure the “Ubuntu Jammy” tab is selected and then click the copy button to copy the install command to your clipboard. The agent token and install command are only visible on this panel. Once closed, it is not retrievable. Either keep the panel open until you’ve completed the below steps or copy the token to a secure location Login to your Ubuntu instances as a user with sudo permissions.\nPaste the command from your clipboard and hit enter. The install process will run automatically. After it completes you can return to the portal and close the Add Agent panel. You should see the new agent listed in the Nodes table and online. agent1 shows as online ","categories":"","description":"","excerpt":"Supported Operating Systems Linux Ubuntu 22.04 LTS x86-64/AMD64 At …","ref":"/tutorials/agent-deploy/","tags":"","title":"Node Agent Deployments"},{"body":"Data Plane Status Table Previously Trustgrid had a visual indicator on the Node detail page to show the Data Plane health of a node, but it only showed the state as Connected, Degraded or Disconnected. While connected and disconnected were clear, there was little information on why the status was Degraded.\nWith this release hovering over the Data Plane status icon will bring up a pop-up screen showing all the peers and and their connection status. Additionally, if the peer is connected it will show:\nThe public IP of the peer The mode used to connect to with the peer (TLS or UDP) The route trip time (RTT) between the devices when the tool was last run. This data can be searched and refreshed. In a future release we will make historical RTT time viewable for each peer.\nFlow Log Improvements Flow logs provide valuable metadata about traffic across Trustgrid networks but our search had performance and reliability issues that made it difficult to use. With this release we’ve rearchitected how search these logs to allow for a significant performance improvement.\nImproved IP Geolocation Data Trustgrid has changed our public IP geolocation data providers to improve the accuracy of the information we use to place nodes on our Network Maps. This new provider will also allow us to present additional information such as ISP and ASN in the future, which could be handy for identifying when multiple devices from the same ISP or ASN start having issues.\nCustom Portal Roles Trustgrid is working on moving our permission structure beyond the four default roles (Monitor, Operator, Node-Administrator and Administrator) to allow customers to tailor roles to just the permissions their users need. For example, you could allow a user Monitor (read-only) permissions to most of the Trustgrid environment but grant them the ability to stop and start containers.\nCurrently this requires working with Trustgrid Support to define these new roles but once defined they can be assigned by Node Administrators and Administrators.\nOther Improvements You can now search the Nodes table for Management IPs and Device types Fixed a broken link in the new user invite email for customers without IDP integration ","categories":"","description":"","excerpt":"Data Plane Status Table Previously Trustgrid had a visual indicator on …","ref":"/release-notes/cloud/archive/2021/december/","tags":"","title":"December"},{"body":"Trustgrid uses each node’s public IP address to derive location information. If it’s incorrect, the fields can be set manually. If set manually, IP changes will not update the node’s location when viewed from the nodes table or the network map.\nTo change the Node Location: Change the details to desired settings then click Save when done.\n","categories":"","description":"View and set location information about the node","excerpt":"View and set location information about the node","ref":"/docs/nodes/shared/location/","tags":"","title":"Location"},{"body":"The Metrics page will be used to display additional available statistics that are not displayed on the overview page. Similar to the overview page these stats are viewable in 1, 2, 6, 12, and 24-hour views, and 1 week and 1 month views.\nJVM Heap The Trustgrid service on appliance-based nodes runs via the Java Virtual Machine (JVM). When launched the java process claims a minimum amount of memory from the operating system. As the process runs additional memory can be claimed up to a configured maximum. Not all of this memory is actively in use by Java. Once the maximum amount of memory has been claimed or a period of time has elapsed Java will run a garbage collection process to free up pages of memory that are no longer being actively used.\nThe JVM Heap statistic shows how much of the claimed memory is actively being used. The sharp reductions in the graph below indicate times where the garbage collection process has run freeing up available memory by reducing the current heap size. Example JVM Heap chart ","categories":"","description":"View additional metrics and statistics for the node","excerpt":"View additional metrics and statistics for the node","ref":"/docs/nodes/appliances/metrics/","tags":"","title":"Additional Metrics"},{"body":" A node is an instance of software used for building connections, managing compute resources, and deploying software.\nNode Types A node can be installed on a hardware appliance, as a virtual appliance (Vsphere and Hyper-V), and deployed in a public cloud (Amazon AMI, Google, Microsoft). There are three main types of nodes - Edge, Gateway, and Management.\nAll Trustgrid nodes run on a hardened Ubuntu operating system. Nodes are managed through the Trustgrid portal or via the API (requires authentication token). A local UI exists to support the reconfiguration of an ethernet interface and diagnostic/network tests prior to connection to the Portal.\nEdge Nodes Edge Nodes build outgoing TLS tunnels to Gateway Nodes. Bidirectional traffic is supported through this tunnel, subject to ACLs and security policy restrictions. Edge Nodes will only require a firewall rule change if outbound internet restrictions are in place. Edge nodes can be a target for software deployment. Edge Nodes can be deployed with a single or multiple ethernet connections to support deployments behind a firewall or adjacent to a firewall (public WAN / private LAN).\nGateway Nodes Gateway Nodes accept incoming TLS tunnels from Edge Nodes. Traffic on these tunnels is bidirectional, as permitted by ACLs or policy. Gateway Nodes usually require a firewall change to permit the incoming traffic. Gateway Nodes are identical to Edge Nodes but with a gateway configuration applied. Gateway nodes only connect to other gateways if one is of type hub. Read more about gateway configuration.\nManagement Nodes Management Nodes are not like other nodes because they do not connect to the data plane, only the control plane. Management Nodes are deployed by Trustgrid for each customer and are multi-tenant like other control plane components. Customers may elect to deploy their own Management Nodes in place of multi-tenant Management Nodes. Management Nodes facilitate the monitoring, management, and support of Edge and Gateway Nodes.\nNode Form Factors Nodes are available in two form factors:\nAppliance - This is a combination of a fully managed operating system and Trustgrid software pre-installed. Agent - This is a software package that can installed on supported operating systems. Users can install additional software and configure the operating system as needed. Functionality Agent Appliance Gateway Capabilities None Data Plane or ZTNA Operating System Multiple Supported OS, install additional software Fully managed OS and Trustgrid service, no additional software permitted Updates Managed by user via OS native tools OS and Trustgrid updates managed via Trustgrid Interface IP Management Managed by user via OS native tools Configurable via Trustgrid portal or local console Layer 3 VPN Single Virtual Network connectivity Support for multiple Virtual Networks Layer 4 Proxy Full Support Full Support Compute Commands only Commands, Containers or VMs supported Node List View Adding Node Appliances - Generating Licenses Appliance-based nodes need a license generated by the Trustgrid control plane to register with your organization. This license can be generated in the portal from the Nodes page.\nNavigate to the Nodes list view. Click the Add Node button. Add Node button on Nodes page Enter a name for the node and click Create License. Node Name prompt A license key will be generated and displayed. Clicking in the license text window will automatically copy the license into your clipboard, or you can click the Download License button. Example license key Adding Node Agents - Generating Tokens Agent-based nodes require a token generated by the Trustgrid control plane to register with your organization. This token is also generated in the portal from the Nodes page.\nNavigate to the Nodes list view. Click the Add Agent button. Adding a Tag as a Column on the Nodes Table Adding a tag as a column on the nodes tables is good way to make valuable information visible for multiple nodes at the same time. To add the column:\nNavigate to the nodes table page Click Actions and then select Columns from the dropdown Towards the bottom you will see all the available tags in the format tag: tag-name. Select the desired tag and click Save. The column will be added and the table can now be sorted by that column. Any node that does not have that tag set will be listed as blank.\nApplying a Tag Filter to the Nodes Table The nodes table can also be filtered to only show nodes with a specific tag name:value.\nOn the nodes table click Actions and select Add Tag Filter from the drop-down menu. After clicking Add Tag Filter, select the tag-name field and you will see a list of tag-names available. Select the desired tag. You can also start typing to filter what tag names are shown.\nSelect the tag value field and you will see a list of available values. Select the desired value.\n(Optional) Click Add Tag Filter to include an additional filter. Note that the two filters will be applied using AND only nodes with both tag name:value combinations matching will be shown.\nClick Apply Tag Filter and the table will only show matching nodes.\n","categories":["concepts"],"description":"","excerpt":" A node is an instance of software used for building connections, …","ref":"/docs/nodes/","tags":["node","concepts"],"title":"Nodes"},{"body":" The matrix below defines the primary responsible party for troubleshooting and resolving different types of issues. Trustgrid support can be engaged to assist in resolving issues not directly in scope of their responsibility.\nOrganization and Roles Trustgrid Trustgrid is a software and services provider that operates a multi-tenant cloud management system and assists customers and end-users with the deployment and management of a data transfer plane.\nCustomer Customers have a direct, contractual relationship with Trustgrid to utilize Trustgrid’s software and services. Depending on the contractual relationship with Trustgrid, Customers may also assume the role and responsibilities of End Users.\nEnd-User End Users own and operate a physical, virtual or cloud environment in which the Trustgrid software may be installed.\nTerminology Field Name Description Trustgrid Management Portal Cloud-based system used to remotely manage, monitor, and configure Trustgrid Nodes. Trustgrid Node Appliance running Trustgrid’s software to facilitate Trustgrid Connect, EdgeCompute, and RemoteAccess services. These appliances could be deployed on physical devices or as virtual machines. The appliance consists of the Trustgrid software and the underlying operating system (OS). Customer Site Site with Trustgrid node(s) deployed and managed by the Customer. End-User Site Site with Trustgrid node(s) deployed and managed by the End-User. Support Matrix Issue Type Trustgrid Customer End-User Trustgrid software or operating system issues Full None None Hardware appliance Shared Shared None Control Plane Connectivity Shared Shared - Customer Site Shared - End-User Site Data Plane Connectivity Limited1 Shared Shared Data Plane Performance Shared Shared Shared Power and physical network connectivity for Trustgrid Appliance None Full - Customer Site Full - End-User Site Internet Service None Full - Customer Site Full - End-User Site Internet Side Firewall None Full - Customer Site Full - End-User Site Local networking including switching and firewall None Full - Customer Site Full - End-User Site 1Trustgrid can work with the Customer and End-User to confirm that the Trustgrid system is working as expected and provide additional information to aid in troubleshooting.\nTier One Support The customer’s support team should be the end-user’s first point of contact. Trustgrid’s standard support contract makes the customer responsible for performing tier one support tasks prior to escalating Trustgrid Support. This includes contacting end-user technical resources as needed.\nExample tasks include:\nTriage and Initial troubleshooting offline Trustgrid nodes Before escalating to Trustgrid support please establish contact with an end-user technical resource with console access Changing Trustgrid node IP addresses Adding, modifying and testing NATs on Edge devices Modifying interface and domain routes, including facilitating failover between sites Disabling and removing nodes, clusters, and related configurations (e.g. routes) when no longer needed For customers with Enhanced Support SLA, Trustgrid provides advanced replacement for failed hardware appliances Note: Some of the above services are managed by Trustgrid Professional Services during initial deployment ","categories":"","description":"","excerpt":" The matrix below defines the primary responsible party for …","ref":"/help-center/support-responsibility-matrix/","tags":"","title":"Support Responsibility Matrix"},{"body":"The Data Plane panel provides information about the tunnels between the agent and its gateway peers that allow for data plane communication.\nTable of connected gateway peers and stats Each peer will show the following data: Field Name Description Status This field will display a green circle if connected and a red circle if disconnected. Name The name of the peer node. IP The IP address the peer node is advertising for connectivity. Path Name of additional path if one is defined. When blank the default WAN/internet path is implied. RTT Return trip time. The agent sends a ping every 20 seconds and records the time for a response. This field shows the most recent result for each peer. Mode TLS - Connections using only the Trustgrid TLS tunnel method TLS/UPD - Connections using both Trustgrid TLS and UDP tunnels UDP is something that needs to be enabled on the gateway node. Type For an agent this will always show client since it only makes outbound connections. Appliance-based nodes could show server (gateway) or client. Ports The destination port(s) used for creating the tunnel to the peer. Organization using the Trustgrid hosted gateway for trial will not see any peers listed at this time. ","categories":"","description":"Listing of peers and connectivity information for agent-based nodes","excerpt":"Listing of peers and connectivity information for agent-based nodes","ref":"/docs/nodes/agents/data-plane/","tags":"","title":"Data Plane"},{"body":"Stats The Node overview page shows performance and network traffic data.\nSupported time windows are selectable at the top. VPN and network statistics can be targeted to specific virtual networks and interfaces.\nField Name Description Node Performance shows CPU, disk, and memory usage percentages VPN Traffic Volume shows data usage sent and received, across all VPNs and for the selected virtual network Traffic Volume shows data sent and receives, across all interfaces and for the selected interface Connected Peers shows the number of other nodes connected. This will change based on the node type - gateways connect to all edge nodes, while edge nodes only connect to gateways.(LINK HUB GATEWAY PAGE WHEN DOCUMENTED) VPN Flows shows new and active flows, across all VPNs and for the selected virtual network TCP Errors shows TCP errors across all interfaces ","categories":"","description":"View performance and network stats for the node","excerpt":"View performance and network stats for the node","ref":"/docs/nodes/appliances/overview/","tags":"","title":"Overview"},{"body":" The provisioning portal allows users to manage orders, which can be used to gather information to fulfill requests for appliances.\nOrders List View The Orders List View provides a summary of all provisioning orders, offering users streamlined navigation through existing orders.\nInterface Overview Search Bar: Quickly find orders using keywords, order numbers, creator names, project names, or other relevant details.\nOrders Table includes the following columns:\nAssignee: Individual responsible for managing or completing the order. Project: Associated project for the order. Summary: Brief description with order number, nodes involved, hardware types, creator, and creation timestamp. Status: Current status of the order (e.g., “New”). Actions: Create new orders, bulk update existing orders, or download the order list as a CSV file. Order Edit View The Order Edit View allows updating orders with new information, and validates the data’s coherency before an order’s information is used in the fulfillment process.\nGeneral Information On the right-hand side, you can view and edit general order workflow and assignment information.\nOrder ID: Unique identifier for tracking. Status \u0026 Priority: Current state and urgency level. Field validation is relaxed and listed as warnings until an order is moved to the QA state. Validations must pass before an order can be moved to provisioning. Due Date: Deadline for completion. Assignee \u0026 Labels: Assign responsible individuals and categorize orders. Project: Link orders to specific projects. Creator \u0026 Created Date: User who initiated the order and timestamp. Networking and Technical Details DNS Configuration: Primary and secondary DNS servers.\nInterface Configuration:\nIP assignment method (DHCP or Static). Subnet and gateway details. Cluster IP \u0026 Routed Networks: Internal addressing and routing configurations.\nNAT Configuration Virtual CIDR: Virtual network range. Local CIDR: Local network addresses. Description: Context or purpose of each NAT rule. Stakeholders \u0026 Contacts Contact Information:\nSalesforce Case #, End User Account #, Company Name, Phone, Email. Technical contacts and details. Installation Details Location \u0026 Site Type: Physical installation location and type. Clustered/HA, Nodes, Interfaces: High-availability, node quantity, and interfaces. Rack Mounts: Inclusion of rack mounts. Appliance Type \u0026 RMA: Hardware specifics and return authorization. Node Information Node Name \u0026 Asset ID: Unique node identifiers and asset management tags. DNS \u0026 Associated Node: DNS configurations and related nodes. ","categories":"","description":"","excerpt":" The provisioning portal allows users to manage orders, which can be …","ref":"/docs/provisioning/","tags":["provisioning","orders"],"title":"Provisioning"},{"body":"Summary Trustgrid provides a fully managed private container registry for each customer account. This allows customers to deploy containerized applications securely to their Trustgrid node appliances.\nContainer Namespace Each customer is isolated to their own container namespace that is listed at the bottom of the Repositories page.\nTo push a container to your private registry it must be named with your namespace as a prefix when tagged.\nExample Trustgrid repository namespace List View Uploaded container images may be viewed by navigating to Repositories in the portal.\nRepositories list view From this view you can se all containers uploaded to your namespace.\nContainer Repository View Each repository can be managed. Clicking into a container will show its uploaded tags and digests, as well as the URI that can be used to pull the container. Example repository for nginx container with two tag versions Deleting Container Repositories Next to each container repository name is a box that can be selected. This allows deleting the entire repository and all its tags with a single action.\nSelect the desired container repository. From the Actions dropdown select Delete. When prompted enter the repository name and click Confirm. Prompt to delete an example nginx repository Deleting Specific Container Tags Navigate into the desired repository. Select the desired tag version. From the Actions dropdown select Delete. When prompted enter the tag name and click Confirm. Prompt to delete an example nginx tag version Authentication Docker Login In order to push to or pull containers from the private registry, your local docker client must first authenticate with your credentials.\nTo authenticate with the registry, use the command provided in the Docker Login section at the bottom of the repositories page. Docker Login with copy button Use the copy button to copy the docker login command and paste it into your terminal to authenticate your docker client. This will cache your credentials locally for approximately 24 hours.\nExample docker login command Node Container Authentication Trustgrid node appliances authenticate automatically with the Trustgrid container registry and can pull any image uploaded to the registry. All communication between the node appliance and the registry occurs using the Trustgrid control plane networks and ports\nExample Usage In the below example we will show how to pull down a container image (Alpine Linux) from the public hub.docker.com registry and then push it to the Trustgrid private registry under our namespace.\nFirst pull the Alpine image from Docker Hub with the command docker pull alpine Pull Alpine image from Docker Hub . Note the tag is automatically set to latest by Docker. If desired you can manually specify a specific tag to get a specific version. Tag the image with your namespace prefix. docker tag alpine:latest docker.trustgrid.io/namespace.trustgrid.io/alpine:latest make sure you replace namespace.trustgrid.io with your actual namespace. Tag image with namespace prefix If you haven’t already, Authenticate your Docker client with the Trustgrid registry using the Docker login command provided on the Repositories page Push the tagged image to the private registry. docker push docker.trustgrid.io/namespace.trustgrid.io/alpine:latest Push tagged image to private registry Back on the Trustgrid portal, navigate to Repositories and you should see the pushed image listed. Pushed image listed in portal ","categories":"","description":"","excerpt":"Summary Trustgrid provides a fully managed private container registry …","ref":"/docs/repositories/","tags":"","title":"Repositories"},{"body":" Trustgrid Nodes support SNMP Version 3 for the monitoring of various node resources.\nConfiguration SNMP is configured under the SNMP tab of the configuration section of the node in the Trustgrid Portal.\nConfigure all fields and click save. Then set the status to enabled which will start the SNMP service on the node.\nField Name Description Status Set to enabled to start SNMP service. Setting to disabled will retain the configuration but stop the SNMP service on the node. Engine ID Automatically generated Username Create SNMP Username to be used by snmp client Auth Protocol Select MD5 or SHA Auth Passphrase Configure authentication passphrase of eight or more characters Privacy Protocol Select between DES, AES128 Port SNMP service runs on UDP port 161 by default. Specify an alternate port number to run the service on an alternate UDP port. Interface This is the interface on which the SNMP service will listen. This should always be set to an interface behind the firewall.\nLoopback - This will listen only on virtual management IPs. Useful for monitoring across the virtual network overlay (e.g. snmp collector is in the remote network)\nETH0 for single interface setups. Note: if enabled on a WAN interface with public IP SNMP port 161 will show as available on the internet\nETH1 for dual interface setups\nQuery the SNMP Service The SNMP Service is listening on the IP address of the Interface chosen along with the Virtual Management IP if configured. The example below is a snmpwalk from a client on the same layer 2 network that the data nic of the edge node resides in.\nTo query the SNMP service you can use a tool like snmpwalk or similar.\nSNMPWALK Example:\nsnmpwalk -v3 -l authPriv -u snmpuser -a MD5 -A “securepassword” -x DES -X “securepassword” ip.ad.dre.ss\nIn this example:\nMD5 and DES match the configured Auth and Privacy protocols. Be aware that other protocols may be selected\nsnmpuser matches the configured Username\nsecurepassword after -A is the Auth Passphrase a, after -X is the Privacy Passphrase\nip.ad.dre.ss needs to be replaced with the IP address of the node that you want to target:\nIf you are querying from the local network, you should use the IP address of the Interface selected on the SNMP config panel\nIf you are querying from across the virtual network, you’d need to use the Virtual Management IP in the correct Virtual Network.\nRunning this command should generate output like shown on this page.\nInformation Provided by SNMP A full list of all available OID’s supported by the Trustgrid Node is listed here.\n","categories":"","description":"Configure SNMP v3 on Trustgrid node appliances","excerpt":"Configure SNMP v3 on Trustgrid node appliances","ref":"/docs/nodes/appliances/snmp/","tags":"","title":"SNMP"},{"body":" Services are configured in conjunction with connectors or port forwards to define a host (IP or DNS) and port to connect to for layer 4 (L4) connectivity.\nDescription Services define the host name or IP and port of a server that can be accessed by the Trustgrid node (or members of the cluster) where it is defined. Remote clients can then access the service via peer nodes using connectors or VPN port forwards.\nFunctionality On the local network, a connection’s source IP will be the node’s interface IP.\nIf the service is defined on a cluster, the active cluster members IP will be used. If the node has multiple interfaces, the source will be the interface that has a matching interface route for the target IP. If the service’s host field is set to a DNS name, the node will use its WAN interface DNS servers to resolve the address.\nConfiguration Services are configured under the Networking \u003e Services panel of the node or cluster configuration section in the Trustgrid Portal.\nAdd Service dialogue Field Name Description Enabled Values: Yes or No. Allows each service to be individually disabled if desired\" Protocol The protocol of the service to connect to. Options are TCP, UDP, FTP, and TFTP, along with pre-defined default ports for RDP, SSH, and VNC.\nFTP must operate in passive mode when using L4 services and connectors.\nService Name A friendly name for the service that will be used in the Remote Service field of a connector. Can only contain letters, numbers, and the - character. Host The IP or DNS address of the host to connect to. Port The port to connect to on the host. Description (Optional) User friendly description of the service. Test Connectivity Show only on the Services table for TCP Protocol services. When clicked, the client node will attempt a TCP port connection to the configured host and port and display success or failure.\n","categories":["node"],"description":"Configure Layer 4 (L4) services to make them accessible via peer nodes","excerpt":"Configure Layer 4 (L4) services to make them accessible via peer nodes","ref":"/docs/nodes/shared/services/","tags":["layer 4","networking"],"title":"Services"},{"body":" The Support page provides options for restricting Portal access and retrieving documents shared by Trustgrid.\nRemote Support Disallowing remote support prevents Trustgrid staff from invoking services (like remote terminal or ping) on nodes. Changing this field is audited (put a link to audits; they’re not documented yet though).\nUsers will need support::modify permissions to change this setting.\nIP Restriction Trustgrid Portal access for your organization can be limited to specific IP addresses. Multiple IP addresses can be added. Note that if your IP address changes and is not included on this list, you will be unable to access the Portal.\nUsers will need support::modify permissions to change this setting.\n","categories":"","description":"","excerpt":" The Support page provides options for restricting Portal access and …","ref":"/docs/support/","tags":"","title":"Support"},{"body":" Thresholds provide a way to trigger events when different measurements exceed a given value. Thresholds configured at the node level can override Domain Thresholds.\nExample Thresholds page on a node Node Level Threshold Status Field Name Description Status Disabled (default) - Only thresholds defined at the domain level will be used for generating events. Enabled - Thresholds defined at the node level will be used for generating events, including overriding any domain-level values. Configuring Node Level Thresholds To view and configure thresholds, a user will need nodes::configure::thresholds permissions. To configure thresholds at the node level:\nNavigate to the node in the portal. In the left-side navigation bar find Thresholds in the System section and click it. Change the Status to “Enabled”. Click the + button on the far right to add either a Load or Network threshold. Provide the required fields. Optionally, repeat with any other thresholds you wish to set. Click save. Load Thresholds Load thresholds measure the health of the node itself.\nLoad Metrics Metric Type Description Default Value CPU Usage Monitors percent of CPU usage across all cores 95% for 10 minutes Memory Usage Monitors percent of total memory (RAM) used 90% for 30 minutes Disk Usage Monitors percent of total disk usage for the root partition 80% for 1 minute Embrionic Flows Monitors the number of TCP flows (connections) that are in the embryonic state (waiting for ACK) none JVM Heap Monitors the percent of allocated JVM memory used none Load Fields Field Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Options are CPU usage (%), memory usage (%), disk usage (%), and embryonic flows (absolute count). Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Network Thresholds Network thresholds measure the health of the network from the node’s perspective.\nNetwork Metrics Metric Type Description Latency (ms) Monitors the round trip tunnel latency between this node and the target Bandwidth IN Usage (Mbps) Monitor the amount of received bandwidth on the specified interface Bandwidth Out Usage (Mbps) Monitors the amount of sent bandwidth on the specified interfaces Network Fields Field Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Currently only latency (measured in milliseconds) is available. Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Target For Latency - The target node to measure the latency to. Each node will measure the latency to the target node. For Bandwidth In/Out - The network interface to monitor usage on. ","categories":"","description":"Define threshold limits for node resource utilization and trigger events","excerpt":"Define threshold limits for node resource utilization and trigger …","ref":"/docs/nodes/appliances/thresholds/","tags":["node","concepts"],"title":"Thresholds"},{"body":" This section explains how to use the Trustgrid Portal.\nNavigation Aside from the API documentation, the navigation on the left corresponds to how you would navigate the Portal. For example, the Nodes section corresponds to the Nodes section of the Portal.\nFor a more conceptual understanding of Trustgrid, visit Getting Started. To learn how to deploy nodes, use tools, or troubleshoot networks, visit the Guides section.\n","categories":"","description":"","excerpt":" This section explains how to use the Trustgrid Portal.\nNavigation …","ref":"/docs/","tags":"","title":"Documentation"},{"body":"What are debug logs? Debug log files contain detailed technical information about the operation of a Trustgrid node. They are useful for Trustgrid support engineers to troubleshoot issues. If your node is experiencing problems, generating logs at that time may help identify the root cause.\nGenerating Log Files The Debug Log button is located in the top right of a Node Details page. Debug Logs button The Debug Log dialogue will show any previously generated log files. Clicking the Fetch Newest Logs Debug Logs dialogue and fetch button A node must be online and connected to the Trustgrid control plane to generate and publish new logs. Once the node has completed compressing and uploading the logs a new entry will appear. Clicking the Download button will pull down the zip filed to your local system. Download button next to newly generated file Trustgrid support will have access to the same files, it is not necessary to download and send the file to the support team. Just note the time it was generated. At this time the zip file generated by the node is incompatible with the decompress utility built into Windows operating systems. Use of a 3rd party compression utility such as 7zip is required to decompress. Log Files There a multiple types of logs that are included in the generated zip file.\nNode Appliance Log Files Files are gathered from the following directories:\n/var/log/trustgrid - These logs are generated by the node service as part of normal operations and upgrades. These are the most commonly used by Trustgrid support. /var/log/unattended-upgrades - These logs are generated by the operating system during upgrades and can be useful when troubleshooting failed upgrades. /var/lib/trustgrid/config - These aren’t actually logs but contain the node configuration files which may be needed by support to verify the configuration has been successfully retrieved by the node from the control plane. ","categories":"","description":"","excerpt":"What are debug logs? Debug log files contain detailed technical …","ref":"/help-center/ops-logs/debug-logs/","tags":"","title":"Debug Logs"},{"body":" Early Access Notice The Observability feature is currently in early access. We are actively gathering feedback and usage data to help determine if additional charges will apply in the future. Functionality and pricing are subject to change.\nTo enable this feature for your account, please contact Trustgrid Support. Part 1: Configure Logstash to Receive OTEL Data Here is an example logstash.conf that matches the Trustgrid export format:\ninput { http { port =\u003e 5044 codec =\u003e json } } output { stdout { codec =\u003e rubydebug } } Part 2: Configure Trustgrid to Send OTEL Data Step 1: Navigate to Exporters In the Trustgrid Portal, go to Observability \u003e Exporters. Click Add Exporter. Step 2: Configure the Exporter Type: Select http. Exporter Name: Enter a descriptive name (e.g., logstash). Description: Optional. Instrumentation Types: Select one or more: Metrics Node Audits Node Events Changes Add Exporter Endpoint: Set this to your Logstash endpoint (e.g., http://logstash.internal:5044). Trustgrid appends /v1/metrics or /v1/logs automatically depending on the instrumentation type. You can also explicitly set:\nMetrics Endpoint: Overrides default for metrics Logs Endpoint: Overrides default for logs (audits, events, changes) Exporter Settings ","categories":"","description":"This guide covers how to configure Logstash to receive OpenTelemetry data from a Trustgrid HTTP exporter.","excerpt":"This guide covers how to configure Logstash to receive OpenTelemetry …","ref":"/tutorials/observability-platforms/logstash/","tags":"","title":"Setting up Logstash for OpenTelemetry Export"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/observability-platforms/","tags":"","title":"Observability Platforms"},{"body":" Early Access Notice The Observability feature is currently in early access. We are actively gathering feedback and usage data to help determine if additional charges will apply in the future. Functionality and pricing are subject to change.\nTo enable this feature for your account, please contact Trustgrid Support. Part 1: Configure Splunk to Receive OTEL Data Step 1: Enable HEC in Splunk Log into your Splunk instance. Navigate to: Settings \u003e Data Inputs Click Add New next to HTTP Event Collector (HEC)\nAdd HEC Input Step 2: Create a New Input Enter a Name for the input (e.g., Trustgrid) Leave other options at their default values unless otherwise required. Click Next\nHEC Input Config Step 3: Create a New Index On the Input Settings step, click Create a new index\nProvide a name (e.g., otel_metrics) and set the Index Data Type to Metrics (Node Telemetry) or Events (Node Audits, Changes, Events)\nMetric index Create Metric Index Event (Node Audits, Changes, Events) index Create Event Index Save the new index\nEnsure it’s:\nAdded to the Allowed Indexes Selected as the Default Index Index Settings Step 4: Complete the Setup Click Review and then Done Copy the Token Value generated — you’ll use this in the Trustgrid Portal setup\nToken Created Part 2: Configure Trustgrid to Export OTEL Data Step 1: Access Exporter Settings Log into the Trustgrid Portal Navigate to: Management \u003e Observability Click Add Exporter Step 2: Configure Exporter Type: splunk\nName: e.g., splunk-prod-exporter\nDescription: Optional\nInstrumentation Types (select one or more):\nMetrics Node Audits Node Events Changes Token Created Step 3: Provide Endpoint Details Endpoint: The full URL to your Splunk HEC endpoint, e.g. https://your-splunk-host:8088 Token: Paste the token you copied earlier Source / Source Type: Optional — maps to Splunk’s source fields Index: Optional - The name of the index created in Splunk (e.g., metrics) Enable Data Logging Optional - Used when sending log data like Node Audits, Events, and Changes to Splunk TLS Custom CA: Optional - Upload a certificate if using a custom CA Skip TLS Verification: Optional - Will skip TLS certificate verification (TLS will still be enabled) Splunk Exporter Config ","categories":"","description":"This guide walks you through configuring Splunk and the Trustgrid Portal to export OpenTelemetry (OTEL) data via the HTTP Event Collector (HEC) integration.","excerpt":"This guide walks you through configuring Splunk and the Trustgrid …","ref":"/tutorials/observability-platforms/splunk/","tags":"","title":"Setting up Splunk for OpenTelemetry Export"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/management-tasks/","tags":"","title":"Management Operations"},{"body":" A network group is a list of network objects that allows for easier rule management.\nA network group requires a name to be set. This will be used to reference the group in access policy rules.\nNavigating into a network group allows management of the group’s member objects.\n","categories":["concepts"],"description":"","excerpt":" A network group is a list of network objects that allows for easier …","ref":"/docs/domain/virtual-networks/network-groups/","tags":["domain","concepts","rewrite"],"title":"Network Groups"},{"body":" Restarting the Trustgrid service is faster than a full node reboot and resolves many non-recurring problems.\nGo to the Node detail page for the node affected.\nSelect Restart located in the top right corner of the page\nAfter clicking, type in the name of the node and click Confirm to execute the action the node agent will restart (Node host will not restart)\nExpect the node to alert for disconnection and connection.\n","categories":"","description":"Describes how to restart the Trustgrid service on a node appliance","excerpt":"Describes how to restart the Trustgrid service on a node appliance","ref":"/tutorials/management-tasks/restart-node/","tags":"","title":"Restart the Trustgrid Service on a Node"},{"body":" A tag is a name / value pair that can be used to provide additional information about a Trustgrid resource (nodes, clusters, etc).\nTags are useful when managing enterprise-scale deployments of nodes. Tags allow the user to identify quickly and easily a node or group of nodes with the same property. Both the name and value of the tags are set by the user. Names should provide the context and values provide the actual data. For example, to provide the address of a device you would set the name to address, and the value to something like 123 Main St.\nIt is a best practice for Trustgrid customers to standardize on a set of tag names and appropriate values. This increases the consistency of use across your organization. When adding tags the existing tag names and associated values will be prepopulated as options. Some common uses of tags are:\nSupporting information (production status, contact info, hours of operation, escalation) On-premise/edge location information (site name, address, pin code) Configuration (High availability, instance type, region, disaster recovery) Tag names and values are case-sensitive and should only consist of letters, numbers, dashes (-), and underscores (_). Viewing Tags There are multiple ways to view tags.\nViewing Node Tags from the Node Detail Page After navigating to a specific node’s detail page you can view the tag by:\nOpening the Tags panel from the left side navigation bar:\nOpening the info panel by clicking Info in the top right or by clicking the ` (backtick) key\nModifying Tags To add a tag:\nNavigate to the Tags section of a node.\nClick Add Tag.\nA new row will appear at the bottom of the tags table. There will be a list of existing tag names for your organization. You can filter the list by typing in the field. You can either select an existing tag name, or create a new one by typing it out in full and then selecting New selection: tagName.\nNext move to the values field. As with the name, existing values will be listed. To enter a new value type it in completely.\nClick Save\nTag rows can be edited in-place. Change the name or value, then click Save.\nTo remove a tag, click the red X next to the tag name, then click Save.\n","categories":"","description":"Allows for easily editable metadata key-value pairs to be associated with Trustgrid resources like nodes, clusters, etc.","excerpt":"Allows for easily editable metadata key-value pairs to be associated …","ref":"/docs/nodes/shared/tags/","tags":["tag"],"title":"Tags"},{"body":" Trustgrid’s architecture consists of Nodes deployed at the Edge (on-premise) and management infrastructure built in AWS. Nodes create tunnels to other nodes for data transfer, and to the management infrastructure for control. All tunnels are TLS connections and must be permitted by any firewall between\nNetwork Requirements for All Nodes In order to connect to the Trustgrid Control Plane, the following outbound traffic must be allowed from the node’s configured primary interface IP address\nTrustgrid Control Plane TCP Port 443 and TCP 8443 to: 35.171.100.16/28 34.223.12.192/28 Additional Required Network Access TCP/UDP Port 53 to the configured DNS servers. These DNS servers must be accessible from the WAN/outside interface IP and be able to resolve DNS requests for the trustgrid.io domain Trustgrid nodes will attempt connect to 169.254.169.254 on port 80. This is a standard instance metadata server in public clouds such as AWS and Azure. This connectivity is not required outside these providers. Container Address Space By default, Trustgrid uses the address space 172.18.0.0/16 for the container bridge network. Assigning an interface an IP address in this range can cause unexpected behavior and should be avoided. If required, you can work with Trustgrid support to override the default network.\nRecommendations At least 10 Mbps download speed is recommended for reasonable performance during upgrades. Actual bandwidth requirement will be specific to the workloads running across the device.\nHardware devices are recommended to be connected to ports configured for 1000 Mbps and full duplex with auto negotiation on.\nGateway Node Network Requirements In addition to being able to connect to the Control Plane resource outlined above, Gateway Nodes must be allowed to receive inbound traffic on their configured public IP and port (typically TCP/UDP port 8443). Both the advertised public IP and port are configurable when enabling a node as a gateway.\n","categories":"","description":"Network access requirements\n","excerpt":"Network access requirements\n","ref":"/help-center/kb/site-requirements/","tags":"","title":"Site Requirements"},{"body":"Settings on this page determine how a node’s client connection to gateway peers behave.\nSettings Gateway Client settings Field Name Description Connectivity to Public Gateways Options are Allowed or Denied. If set to Denied this will cause the node to not attempt connections to public gateways. This might be desired if you want the node to only connect to configured private gateways. Or if you have private gateways that do not need to connect to the public gateways in your organization. Hop Monitoring Settings Gateway Hop Monitoring settings The settings below require the node to be running the April 2025 major appliance release or later. Prior versions only support enabled or disabled. Field Name Description Monitor Hops to Gateway Servers Determines if the node will attempt to monitor hops to gateway peers. The possible values are:\nAlways - The node will attempt to monitor hops to all gateway peers. Only when peer requests - The node will only attempt to monitor hops to gateway peers that request it. This is the default state. Never - The node will never attempt to monitor hops to gateway peers, even if peers request it. Monitor Hops Interval The interval time, in seconds, between gathering hop monitoring data. Support Monitor Hops Resets Determines if the node will send reset (RST) packets for the TCP connections it attempts. Doing so reduces, but does not eliminate the number of resets seen on the WAN interface.\nEnabled - The node will send reset packets. This is the default state. Disabled - The node will not send reset packets. Monitor Hops SYN Payload Size Determines the size of the TCP SYN payload sent. By default the payload is the smaller of 1440 or the WAN MTU minus 60 bytes. Can be set between 0 and 1440. Gateway Paths Allows you to define alternate paths to a gateway server\nField Name Description Status Enabled - The node will attempt to build and utilize the additional path. Disabled - The node will not build the additional path. Name A name for the path. Gateway Node Gateway for which the path is applicable. Host IP Destination IP address for the path. Host Port Destination port for the path. Local IP Use this local IP as the source IP for the connection to the gateway. Use as Default True - Will not attempt to connect to the configured Gateway Node using the WAN interface IP and Default Gateway path. False - Will attempt to connect to the Gateway node using both this defined path and the WAN Interface IP and Default Gateway path. Example Gateway Path Add A Gateway Path Click the Add Path link Fill in the fields as desired. Click the green check mark to save the path. Optionally, repeat with additional paths. Click save. Delete a Gateway Path Click the X to the right of the desired path. Click save. ","categories":"","description":"Configure client settings","excerpt":"Configure client settings","ref":"/docs/nodes/appliances/gateway/gateway-client/","tags":"","title":"Gateway Client Settings"},{"body":"In this section, we will cover the initial setup of two Trustgrid agents on separate Ubuntu hosts to demonstrate communication across a Trustgrid virtual network. Examples where this could be useful in the real world include:\nEnabling an application server secure access to a data source on a remote server Enabling a server the ability to connect via SSH to one or more remote servers without exposing any ports to the internet High-Level Steps Deploy two Trustgrid agents Initiate ping between devices Utilize tools to monitor traffic passing between agents Prerequisites Trustgrid Trial Account Two instances of Ubuntu 22.04 x86-64/AMD64 with sudo privileges to install additional repositories and packages. Both instances need to be able to make outbound connections to the internet on ports 443 and 8443 and cannot be subject to TLS inspection that alters the certificate chain. Ideally, these devices should not be able to communicate with each other directly. This is not a hard requirement. At this time only x86-64/AMD64 architectures are supported. Understanding the Default Network To facilitate a smooth trial, a default virtual network is created. This network uses the carrier-grade NAT address space 100.64.0.0/10 as an IP Pool. Agents are automatically assigned an IP address from this pool when they are attached to the virtual network and routes are automatically created to allow communication between agents on the same virtual network.\nStep 1 - Setup Agents Install First Agent Ubuntu 22.04 Docker Follow the process below to install on Ubuntu 22.04 Jammy Jellyfish operating systems: From the Nodes table, click the + Add Agent button to generate an agent token. Add Agent Button When prompted provide a name and choose the Virtual Network the agent will connect to. Then click Add. Name 'agent1' and assigned to 'default' virtual network Make sure the “Ubuntu Jammy” tab is selected and then click the copy button to copy the install command to your clipboard. The agent token and install command are only visible on this panel. Once closed, it is not retrievable. Either keep the panel open until you’ve completed the below steps or copy the token to a secure location Login to your Ubuntu instances as a user with sudo permissions.\nPaste the command from your clipboard and hit enter. The install process will run automatically. After it completes you can return to the portal and close the Add Agent panel. You should see the new agent listed in the Nodes table and online. agent1 shows as online Follow the process below to run the agent in a Docker container:\nWithout any elevated privileges, Docker agents can demonstrate connectivity and direct layer 4 traffic. To allow the Docker agent to route IP pool traffic from the host machine, the container requires host networking and NET_ADMIN and NET_RAW capabilities. Add these flags to the Docker command:\n-v /dev/net/tun:/dev/net/tun --network=host --cap-add=NET_ADMIN --cap-add=NET_RAW\nTo persist logs and configuration locally, volumes can be attached to the container. The configuration files are stored in /var/lib/trustgrid/agent, and logs are stored in /var/log/trustgrid/agent. To attach volumes for those directories, append to the Docker command given:\n-v /path/to/local/config/volume:/var/lib/trustgrid/agent -v /path/to/local/log/volume:/var/log/trustgrid/agent\nAn example command with all flags and volumes attached would look like this:\ndocker run \\ -e AUTH_TOKEN=tgt-... \\ -v /path/to/local/config/volume:/var/lib/trustgrid/agent \\ -v /path/to/local/log/volume:/var/log/trustgrid/agent \\ -v /dev/net/tun:/dev/net/tun \\ --network=host \\ --cap-add=NET_ADMIN \\ --cap-add=NET_RAW \\ trustgrid/agent From the Nodes table, click the + Add Agent button to generate an agent token. Add Agent Button When prompted provide a name and choose the Virtual Network the agent will connect to. Then click Add. Name 'agent1' and assigned to 'default' virtual network Make sure the “Docker” tab is selected and then click the copy button to copy the install command to your clipboard. The agent token and install command are only visible on this panel. Once closed, it is not retrievable. Either keep the panel open until you’ve completed the below steps or copy the token to a secure location Login to your Docker host as a user with permissions to run containers.\nPaste the command from your clipboard and hit enter. The container image will download from Dockerhub and will start automatically.\nAfter it completes you can return to the portal and close the Add Agent panel. You should see the new agent listed in the Nodes table and online. agent1 shows as online Determine agent1 IP address As part of registration, each agent is automatically assigned an IP address on the Trustgrid virtual network. We will need this IP address to confirm communication between the agents in later steps.\nFrom the console of agent1, run the below command: ip address show dev trustgrid0 Copy Look for an IP address starting with 100.64. Console showing the Trustgrid IP address of 100.64.0.1 Install Second Agent Repeat the above steps on the second Ubuntu instance to install the Trustgrid agent with a name like “agent2” on the same Virtual Network and determine agent2’s IP address This should return a different IP address in the same network. Console showing the Trustgrid IP address of 100.64.0.2 Step 2 - Confirm communication From agent2 run the below command to ping agent1 using its Trustgrid IP address: ping -c 4 100.64.0.1 Copy The examples above and below assume the agents received the first two addresses in the pool. If the agents were assigned different IP addresses adjust the below commands accordingly. This should generate 4 ping requests with successful responses showing traffic is traversing the Trustgrid network between the two agents. Successful ping from agent2 to agent1 Similarly, from the console of agent1 run the below command to ping agent2: ping -c 4 100.64.0.2 Copy Successful ping from agent1 to agent2 Step 3 - View Flow Logs Flow logs provide visibility Trustgrid provides into the traffic passing through agents. They show details of every connection including source, destination, protocols, and more.\nView on Overview The flow logs for agents are shown on the Overview page for each node beneath the stats. ICMP flow logs for agents 1 and 2 View Flow Logs Table Additionally, the flow logs table is available under History \u003e Flow Logs. This table includes the ability to perform advanced searches and export the flow logs to csv.\nIn the below screenshot, the TCP flow log from the generated web traffic steps is visible including TCP flags. TCP Flags can be very useful in troubleshooting failed connections in the past. If only the SYN flag is shown this indicates the destination ip:port did not respond to complete the TCP handshake. Flow logs table with search for agent2 Next Steps Now that you have the basic agent setup complete and have seen traffic passing between the agents you can proceed to test using Access Policies to control what traffic is allowed on the network.\n","categories":"","description":"Deploy two agents and see traffic pass between them - 10 minutes","excerpt":"Deploy two agents and see traffic pass between them - 10 minutes","ref":"/getting-started/trial/base-setup/","tags":"","title":"Initial Agent Setup"},{"body":"The Interfaces page displays the network interfaces on the agent node and their IPv4 addresses. Agent Interfaces All fields have buttons to allow for easily copying the information into the clipboard. You can export all the interface data as a CSV file by clicking Actions-\u003eExport Interface Information. Tools Sniff Traffic - Opens the Sniff Traffic Interface tool for viewing traffic on the interface in realtime. ","categories":"","description":"View information about agent interfaces","excerpt":"View information about agent interfaces","ref":"/docs/nodes/agents/interfaces/","tags":"","title":"Network Interfaces"},{"body":"The Trustgrid trial allows a user to become familiar with the Trustgrid platform and its capabilities through hands-on experience. The trial setup utilizes agent-based nodes and a Trustgrid-hosted gateway to provide basic data plane functionality.\n","categories":"","description":"Get started with a free trial account to deploy agents and explore Trustgrid features","excerpt":"Get started with a free trial account to deploy agents and explore …","ref":"/getting-started/trial/","tags":"","title":"Getting Started with a Trial Account"},{"body":"Paying Trustgrid customers can contact our support team for assistance for Tier 2 support requests and assistance with Tier 1 support requests as defined by the support responsibility matrix.\nSupport Hours Production impacting issues (P1 Severity): 24/7/365 support All other issues: Monday-Friday 8:30am-5:30pm Central Time (excluding US holidays) To contact support: Below are the methods or requesting support from Trustgrid:\nRequest support via the Portal - ** This is the recommended method to request support. Email: support@trustgrid.io not .com Phone: 888-308-8995 x2 Authorization to Request Support To prevent unauthorized users from potentially compromising the control plane, Trustgrid has implemented a policy to approve customers’ staff for access to technical support services. Trustgrid will not refuse support completely in cases when unauthorized staff request it, but will limit the disclosure of confidential information and will refuse to make configuration changes without approval from an authorized support contact.\nAll staff who request support must have a portal login.\nTrustgrid support staff will not execute any change requested by staff that exceeds that staff members access to portal.\na. Monitor Access: Staff can alert of issues and request remote assistance but no change in the portal can be requested or made.\nb. Operator Access: Staff can alert of issues and request remote assistance but only changes limited to the Operator role can be requested.\nc. Administrator Access: Staff can request any system change.\n","categories":"","description":"","excerpt":"Paying Trustgrid customers can contact our support team for assistance …","ref":"/help-center/trustgrid-support/","tags":"","title":"Working with Trustgrid Support"},{"body":" Click on the Node from the node page you wish to reboot Select Reboot from the top right corner of the page Type in the name of the node in the text box, and click the confirmation button The node will reboot within 60 seconds Node agent will start automatically on reboot Expect the node to alert for disconnect/connect Does not require a cloud gateway ","categories":"","description":"Describes how to completely reboot a node appliance including the operating system","excerpt":"Describes how to completely reboot a node appliance including the …","ref":"/tutorials/management-tasks/reboot-node/","tags":"","title":"Reboot a Node"},{"body":" User Management is used to securely control access to Trustgrid resources. Identities (users) are authenticated and granted permissions (via policies) to view or manage Trustgrid devices and applications.\nHow It Works Users’ identities are authenticated via one of three mechanisms: a. Username, password and MFA via Trustgrid’s native authentication system b. Via a configured Identity Provider (IdP) using OpenID or SAML c. Trustgrid generated API token Permissions are determined via one or more attached policies These permissions are evaluated as the user makes requests against either via Trustgrid Portal or API ","categories":"","description":"","excerpt":" User Management is used to securely control access to Trustgrid …","ref":"/docs/user-management/","tags":"","title":"User Management"},{"body":" Trustgrid nodes can be configured to provide VPN-like functionality, allowing network address translation (NAT) and routing between nodes.\nThe VPN feature enables the routing of IP packets by utilizing a virtual IP space that is configured on the nodes. In this configuration, the node can be used as the next hop for a route destined for the virtual IP space, or the node can be used as the default gateway for a network. The virtual IP space is used as a transit network with NAT being utilized to translate IP addresses between the virtual IP space and local network IP space.\nThe Trustgrid VPN feature provides the capability to securely route IP packets between remote networks. In this configuration, Trustgrid nodes can operate as a distributed mesh virtual private network (VPN) that can allow applications to access remote data and services at layer 3 (L3) of the network OSI model. This is done by defining a virtual L3 network (similar to an Amazon VPC) and then selecting how local node networks are exposed and translated into the virtual address space.\nAttaching a Virtual Network To use VPN functionality, a node or cluster must be attached to a domain virtual network.\nNavigate to the VPN section for your node or cluster, and select Actions-\u003eAttach.\nAttach Virtual Network dialog on a Node Field Name Description Select Network Drop down list to select defined virtual networks. Validation CIDR Used to validate NATs defined on this node or cluster. If the Virtual CIDR of Inside NATs or the Network Group value of Outside Nats are outside the Validation CIDR a warning will appear. Must be a subnet equal to or smaller than the Virtual Network’s Network CIDR. Virtual Management IP This IP address is used by the node as the source IP for running VPN troubleshooting tools. Only visible in this dialog when attaching the network to a node. If attaching to a cluster, you will need to navigate to each member node to set the Virtual Management IP. Once attached, navigate into the network to manage the VPN configuration.\n","categories":"","description":"Configure and manage VPN functionality between Trustgrid nodes","excerpt":"Configure and manage VPN functionality between Trustgrid nodes","ref":"/docs/nodes/appliances/vpn/","tags":"","title":"VPN"},{"body":"Tunnels Overview Trustgrid Supports configuring various tunneling protocols to establish secure connectivity between any appliance that supports the underlying protocol. The supported tunnels are listed below.\nIPsec - Internet Protocol Security supporting IKEv1 and IKEv2 tunnels GRE - Generic Routing Encapsulation used for setting up a direct point to point network connection Vnet - The virtual network tunnel is the Trustgrid Proprietary VPN tunneling protocol and therefore can only be used to establish connectivity to other Trustgrid nodes in the organization Wireguard - The latest open source tunneling protocol aiming to provide better performance than the traditional ipsec or openvpn protocols “Wireguard” is a registered trademark of Jason A. Donenfeld\n","categories":["node"],"description":"Configure manual tunnels with non-Trustgrid devices via standard protocols","excerpt":"Configure manual tunnels with non-Trustgrid devices via standard …","ref":"/docs/nodes/appliances/tunnels/","tags":["tunnels","networking"],"title":"Tunnels"},{"body":"Trustgrid nodes can deploy virtual machines (if supported) using the open source virtualization technology Kernel-base Virtual Machine (KVM)which allows the node to act as a hypervisor to run multiple, isolated virtual guests.\nThe virtual machine can be attached to both the local and virtual network space which allows both local and remote resources to communicate with the virtual machine. For example an API could be deployed on a Trustgrid Gateway which sends API calls via the virtual network space to a virtual machine running on a Trustgrid Edge Node. The API call could then be translated to make a call to a database running on the local network and passed back up to the gateway host.\nBefore being able to deploy a virtual machine to a node, an image needs to be created. Management Navigate to VM Management \u003e Virtual Machines on a node.\nField Name Description Name Name of the virtual machine. Description Description for the virtual machine. Image Image selected from the ones available. Firmware Boot firmware for the virtual machine.\nBIOS UEFI Device Bus Device Bus used for deployment of the virtual machine.\nVirtIO IDE SATA Overview Navigating into a virtual machine, the overview section allows editing basic information about the virtual machine’s execution environment.\nField Name Description Name Name of the virtual machine. Description Description for the virtual machine. Image Image selected from the ones available. Guest OS (read-only) Operating System of the Image. Hostname (Optional) Hostname given to the virtual machine on deploy. Stop Timeout (Optional) Denotes how long to wait for the virtual machine to gracefully stop before killing the process. Default is 2 minutes. Firmware (read-only) Boot firmware of the virtual machine. Device Bus (read-only) Device Bus used for deployment of the virtual machine. Auto Start (Optional) Indicates the virtual machine should automatically start after deploy. CPU Virtual machine CPU allocation.\nMemory Virtual machine Memory allocation in GB, MB, KB, or Bytes.\nNetwork The networking section allows you to configure the virtual machine’s VRF, its port mappings, and its virtual networks and interfaces.\nHost Port Mappings Host port mappings allow you to expose a port on the host to the virtual machine. This is useful for exposing a service running in the container to the local network.\nField Name Description Protocol The protocol to listen for. If not specified, all traffic is forwarded to the virtual machine. Host Interface The host interface to listen on. Host Port The host port to listen on. Virtual Machine Port The virtual machine port that will receive the mapped traffic. Virtual Networks Attaching a virtual network to a virtual machine allows virtual network traffic to reach it.\nField Name Description Virtual Network The virtual network to attach. Virtual IP The virtual IP to assign to the virtual machine. Allow Outbound Whether the virtual machine should be allowed to make outbound connections into the virtual network. Virtual Interfaces A virtual interface can be mapped to a virtual machine to forward all traffic.\nField Name Description Name The virtual interface name. Destination The interface destination inside the virtual machine. Volumes Allows mapping disks or cd-roms to a virtual machine.\nSnapshots Allows the creation, restoration, and deletion of virtual machine snapshots.\nField Name Description Name The snapshot name. Creation Time The timestamp when the snapshot was created. VM State The state of the virtual machine when the snapshot was created. Snapshot Mode Extenal Disk Only - Mode applied to the snapshot when the firmware of the virtual machine is UEFI. Internal - Mode applied to the snapshot when the firmware of the virtual machine is BIOS. This mode includes the guest virtual machine state. Parent Snapshot If this is a child snapshot, this references the parent snapshot. Description The snapshot description. Every snapshot operation is tracked asynchronously. You can keep track of the status of every snapshot creation, restoration, and deletion via the Recent Tasks table.\nCloud Init Cloud-init is a simple and powerful way to configure virtual machines during deployment. You can manage user creation, install updates, configure network, etc.\nYou can find the full cloud-init documentation here History Shows active and completed traffic flows for the virtual machine.\nActive flows can be manually terminated. ","categories":["virtual machines"],"description":"Configure and manage virtual machines running on appliance-based nodes using KVM","excerpt":"Configure and manage virtual machines running on appliance-based nodes …","ref":"/docs/nodes/appliances/kvm/","tags":"","title":"Virtual Machines"},{"body":"Overview VRFs can be used to route and/or nat and filter what traffic is allowed to pass and how it should appear on the network. VRFs can be associated with an interface whether it be a physical interface / virtual network interface or other tunnel interfaces such as IPSEC or GRE. VRFs are segmented on a layer 3 level from all other traffic traversing the Trustgrid node.\nFor standard use cases of source nat and/or destination nat creating a route and a NAT is sufficient. Traffic rules can be used for more advanced controls. An applicable ACL is required for any traffic to pass as a zero trust methodology is applied.\nAddress Translation This is where NATs are created in order to translate the traffic to appear as desired on the network. NATs support translating both source and destination CIDRs as well as masquerading as the egress interface address.\nSNAT / DNAT Example Using the example NAT below if a source packet was initiated from 10.10.10.100 destined for 10.10.20.100 the source address would be translated to 192.168.10.100 and the destination address would be translated to 192.168.20.100. It is important to note that nat translations occur before routing decisions are made.\nMasquerade Example Using the example below, if a source packet is initiated from within 10.10.10.0/24 destined for anything in 192.168.10.0/24, the source would be translated to the interface address from which the packet is egressing. If it were a single interface Trustgrid node it would be sourced as the wan facing interface address.\nRoutes Note that NAT translations happen before routing so routes should be created for the destination NAT CIDR if applicable. Routes require a destination CIDR, interface, and metric. A next hop is optional and only applicable for non-tunnel interfaces such as physical interfaces or VLAN subinterfaces. The gateway of the applicable interface will be used if no next hop is defined.\nThe example below would be used for example to offload all internet-bound traffic directly out of the WAN facing interface\nTraffic Rules Traffic rules can be used for more advanced granular traffic manipulation beyond standard source and destination nat. There are many more parameters that can be applied to the traffic depending on the specific use case. When creating a traffic rule an ACL is required for traffic to pass. The available parameters are defined below. Rules are evaluated based on the line number. The first matching rule is the one that will be applied to the packet. More specific rules should always be implemented above less specific rules. Eg a rule for a /24 network should be above a /16 network the /24 is included in.\nField Name Description Number The line number the rule is applied to. Rules are matched in numerical order. Action All traffic rules have an action that is applied to the associated packet.\nAccept - The packet is allowed to be processed locally. Drop - The packet is dropped and not responded to Reject - A TCP Reset is sent in response Forward - The packet is forwarded to its defined destination such as an interface or another VRF Mirror - Packets are not manipulated but can be mirrored for inspection purposes. For example passing through an IDS container such as Snort. Log - The packet is not manipulated but is marked for logging Ingress Interface The traffic rule is applied to packets that ingress on this interface Forward Interface Packets are forwarded out this interface once the rule is applied Protcol The protocol that the rule should apply to. All, ICMP, TCP or UDP Forward VRF Packets are forwarded into another VRF that is associated on the node. Only configureable when a forward action is selected. Source CIDR The source network the rule should apply to Destination CIDR The destination network the rule should apply to Masquerade Translate and source all packets from the nodes interface address when enabled DNAT Destination Forward all traffic to the DNAT destination IP/Port. For example in order to forward all http traffic through a proxy Destination MAC The destination MAC address defined overwrites the source MAC address of the packet. Necessary only for some container deployments such as Snort inspecting traffic. Ports Used to define a port range when creating a traffic rule Traffic Rule Example In the below example, the first rule on line number 1 is forwarding all traffic destined to 10.0.20.0/24 to a virtual network tunnel interface. Any NATs configured under Address Translation will be applied before the packet is forwarded to its destination. The rule on line number 10 will forward all traffic that does not match the first rule out to the internet masquerading as the WAN interfaces address. If the line numbers were reversed the virtual network rule would never be matched as all traffic would match the internet offload rule which is configured for all source and destination traffic.\n","categories":["node"],"description":"Configure Virtual Routing and Forwarding instances to segment and control network traffic","excerpt":"Configure Virtual Routing and Forwarding instances to segment and …","ref":"/docs/nodes/appliances/vrfs/","tags":["VRFs","networking"],"title":"VRFs"},{"body":"The VPN section allows for viewing and configuring an agent’s virtual network settings and access tools for troubleshooting.\nVPN Toolbar At the top of all agent VPN pages is a bar that contains information about the virtual network attachment and tools. Field Name Description Network Displays the name of the virtual network the agent is attached to and its configured address space. Validation CIDR (Optional) Can be defined to validate that the Virtual CIDR address in Network Address Translations falls within an expected network. Virtual Management IP The IP address assigned to the trustgrid0 tunnel interface. This IP is either assigned manually or automatically from an IP Pool Sniff Virtual Traffic This button launches the Interface Sniff Tool scoped to the trustgrid0 interface. View Virtual Routes This button launches the View Virtual Route Table tool. Virtual Network Attachment Agents are attached to a virtual network during creation but can be detached and attached as needed. At this time agents only support a single virtual network attachment.\nAttach Agent to Virtual Network Navigate to the VPN page of the agent Under the Actions dropdown select Attach Select the desired virtual network. If the virtual network has IP Pools configured, the agent will automatically be assigned an IP from the pool. Click Save to complete. If not, you will be provided the following fields: Field Name Description Validation CIDR (optional) if provided this will be used to confirm all NAT rule virtual CIDRs fall within the validation CIDR. Virtual Management IP Assigned to the trustgrid0 tunnel interface on the agent for communication on the virtual network. Click Save Detach Agent from Virtual Network Navigate to the VPN page of the agent. You will be automatically sent to the Address Translation panel for the currently attached network. Click the “Manage Networks” link in the left navigation bar. Click the radio button to the left of the attached network. From the Actions dropdown select Detach. Confirm you want to detach the agent from the virtual network when prompted. ","categories":"","description":"Agent Virtual Network configuration","excerpt":"Agent Virtual Network configuration","ref":"/docs/nodes/agents/vpn/","tags":"","title":"Virtual Network(VPN)"},{"body":"Navigate to a node, then select ZTNA Gateway under the Network section.\nHTTPS Endpoint The HTTPS endpoint is used to provide connectivity for non-WireGuard ZTNA applications.\nField Name Description Enabled When enabled, this node will listen for ZTNA traffic. Public FQDN The IP or FQDN of the node or the load balancer in front of the node. If using a domain name without a load balancer, be sure to select the appropriate certificate. Port The port to listen on. Users will always connect on port 443, so only change this if the node is behind a load balancer. Certificate The certificate to use for TLS traffic. Only needed if the node is to be directly accessed by users (i.e., without a load balancer) and the FQDN is a domain name. WireGuard Endpoint The WireGuard endpoint is used to provide connectivity for WireGuard ZTNA applications.\nField Name Description Enabled When enabled, this node will listen for WireGuard traffic. Public FQDN The IP or FQDN of the node or the load balancer in front of the node. Port The port to listen on. Public Key The node’s WireGuard public key. This can be generated or imported using the actions dropdown. Note that regenerated the key will disconnect existing clients and require users to reconfigure their WireGuard connection. “WireGuard” is a registered trademark of Jason A. Donenfeld.\n","categories":"","description":"Configure the node to act as a Zero Trust Network Access server","excerpt":"Configure the node to act as a Zero Trust Network Access server","ref":"/docs/nodes/appliances/ztna-gateway/","tags":"","title":"ZTNA Gateway"},{"body":" Routes configured under Domains determine to which node or cluster the Trustgrid virtual network should route traffic for a specific subnet.\nVirtual Network Routes Routes defined a the virtual network level allow creating a global route table shared with all nodes and clusters attached to the virtual network. This table is then used to evaluate where to send VPN traffic for a specified destination CIDR.\nRoute Fields A Route has the following fields:\nField Name Description Destination This will be the name of the node or cluster that traffic will be routed to. This list is auto-populated based on the nodes and clusters in the selected domain. Destination CIDR This is the CIDR notation of the virtual network that should be routed to the above destination node or cluster. Metric If there are multiple routes for the same virtual network the metric will determine which route will be used. The lowest number is the highest priority. See the “Automatic Failover” text below. Description (Optional) This field can be used to provide additional information about the purpose of the route. e.g. it could label a route as a DR route indicating that in normal circumstances it would have a higher metric than a primary route. Managing Virtual Network Routes Adding Virtual Network Routes Navigate to Domain \u003e Virtual Networks and select the desired Virtual Network. The Routes table is selected by default Virtual Network \u003e Routes Tip: Use the search field to filter the list of routes so you can see the routes you are adding. You could filter by the CIDR address or part of the destination node/cluster names. This will show any existing matching routes, and will make it easy to see the new routes you are adding. Click the add route button. Add route button Provide the desired route information in the fields Select the destination cluster or nodeEnter the destination network in CIDR notation. For a single IP use /32.Enter a metric between 1 and 200.Optionally, provide a description. Repeat the above two steps for any additional routes you wish to add. Click the Save button. Save route button There should be a notification saying “Routes Updated” but you will need to review and apply changes before the changes are actually be published to nodes in your environment. Example of a saved route As stated above, the route changes are not actually implemented until you click the Apply button the Review Changes panel. Deleting Virtual Network Routes Navigate to Domain \u003e Virtual Networks and select the desired Virtual Network. The Routes table is selected by default Virtual Network \u003e Routes Use the search field to filter the list of routes. You could filter by the CIDR address or part of the destination node/cluster names. This will show any existing matching routes, and will make it easy to see the new routes so you can delete them. Click the red X on the far right of the route being removed. Repeat the above two steps for any additional routes you wish to add. Click the Save button. Save route button There should be a notification saying “Routes Updated” but you will need to review and apply changes before the changes are actually be published to nodes in your environment. Example of a saved route Route Failover Route failover allows a subnet to be routed to an alternate node or cluster in the event of a failure. This can be automatic or performed manually.\nPrerequisites In either configuration, the virtual network settings under VPN settings for the primary and backup destination nodes/clusters must match. Including:\nNetwork Virtual Route\nNetwork Group under Outside NAT Table\nVirtual CIDR under Inside NAT Table\nAutomatic Failover To have the route failover without manual intervention you must define two routes for the same subnet (Destination CIDR) with different metrics. The lowest numerical metric will take precedence unless the destination node or cluster is offline.\nIn the below example configuration we want traffic for the 10.20.0.0/24 network to the edge cluster first, and failover to the edge-dr cluster.\nPreventing Automated Failback or Forcing a Failover As mentioned above if multiple routes are configured traffic will route to destination with the lowest metric number. So if the primary destination fails but then comes back online traffic will be routed back automatically.\nHowever, there are some circumstances where this is not desirable. For example, if the primary site is unstable you may wish to keep traffic at the backup site until the primary is stabilized. Alternately, you may wish to preemptively reroute traffic to the backup site in advance of planned maintenance at the primary site.\nTo preemptively reroute traffic to the backup site, update the backup route to have a lower metric than the primary route.\nManual Failover In some circumstances, it may be preferable for failover to only occur with manual intervention. In this situation, you will have a single route under the domain. To initiate a failover you’ll need to update the destination cluster/node.\nLogin to the Portal and select your domain. Click the link to the desired domain under the “Name” column. Scroll down to the “Virtual Networks” section and select the “Routes” tab. Find the route you wish to failover. Update the destination device. (e.g. in the below you would switch from edge to edge-dr). Click save. ","categories":["concepts"],"description":"","excerpt":" Routes configured under Domains determine to which node or cluster …","ref":"/docs/domain/virtual-networks/routes/","tags":["domain","concepts","rewrite"],"title":"Routes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/operations-runbook/","tags":["overview","help","troubleshoot"],"title":"Operations Runbook"},{"body":"When designing a network from a zero-trust, least-privilege mindset, all agents and appliances should restrict access as much as possible both to each other and their adjacent network resources. Trustgrid allows for granular control over what traffic is permitted across the virtual network using access policies. The default virtual network was created with an “Allow All” policy to facilitate initial connectivity during the trial period.\nIn this section, we will update the policy to restrict traffic between the two agents.\nHigh-Level Steps Generate TCP traffic between the agents Create an access policy to deny all traffic and verify traffic is blocked Create additional policies to allow specific traffic Prerequisites Two agents installed and confirmed communicating (pingable) on the default virtual network as set up in previous tutorials Netcat ( nc ) installed on both agents to generate and capture traffic. This utility is commonly installed by default in most Linux OSes, but may need to be installed manually. Step 1 - Generate Traffic Note: The below assumes agent1 was assigned 100.64.0.1 and agent2 was assigned 100.64.0.2. If your agents were assigned different IP addresses update the below commands accordingly. Start TCP Netcat listener on agent1 Netcat (or nc) is a versatile networking tool that can function as a client to send data to other hosts or as a listener to receive data on a specified port. We will first configure it to listen on agent1.\nGain console access to agent1. Run the below command to start netcat listening on TCP port 5000. nc -k -l 5000 Copy Leave this terminal open as netcat will continue listening in the background and will display any data sent to port 5000. Send Traffic from agent2 Gain console access to agent2. Run the below command to send a message from agent2 to agent1. echo \"Hello from $(hostname)!\" | nc -q 1 100.64.0.1 5000 Copy After about a second you will be returned to the command prompt for agent2 with no output. Return to the console for agent1 and you should see a message like Hello from agent2! Netcat listener output on agent1 Stop TCP Netcat listener on agent1 Return to the console for agent1 and press Ctrl-C to terminate the netcat listener that was started in Step 1. Confirm Ping (ICMP) Traffic Before implementing access policy restrictions, confirm ping (ICMP) traffic is still allowed between the agents:\nOn agent1 run: ping -c 3 100.64.0.2 Copy On agent2 run: ping -c 3 100.64.0.1 Copy You should see ping responses from the other agent, confirming ICMP traffic is still permitted by the default “Allow All” policy. Step 2 - Deny All Traffic Update Existing Access Policy Now we will update the default policy to deny all traffic and confirm TCP communication is blocked:\nIn the Trustgrid portal, return to the home page and select the Virtual Networks option from the left navigation menu. From the Virtual Networks table, select the default virtual network. Click the Access Policies option from the navigation menu on the left. The existing “Allow All” policy will be displayed. Click the edit button on the far right. Change the policy action to “Reject”, update the description to say ‘deny all traffic’ and click Save. In addition to the “Allow” and “Reject” actions is the option to “Drop”. This will also deny traffic but without sending a response back to the source. Reject is preferred for the trial because it provides feedback that traffic was blocked. This may not be the desired setting in a production environment. All changes at the virtual network level must be reviewed and applied before being broadcast to nodes. Click the Review Changes from the left navigation menu. You will see the previous and new settings. Click the “Apply Changes” button and then confirm when prompted. Confirm ICMP Traffic is Blocked On agent1 run: ping -c 3 100.64.0.2 Copy On agent2 run: ping -c 3 100.64.0.1 Copy You should see ping responses from the other agents are now filtered. Terminal showing ICMP filtered responses Confirm TCP Traffic is Blocked On agent1, run the following command to start netcat listening on TCP port 5000. nc -k -l 5000 Copy On agent2, run the following command to test connectivity to port 5000 on agent1: nc -vz 100.64.0.1 5000 Copy You should see a “Connection refused” message indicating the TCP connection was blocked by the deny all policy. Netcat output showing 'Connection refused' Return to agent1 and enter Ctrl+C to terminate the netcat listener. Step 3 - Allow Desired Traffic Now that we’ve confirmed the virtual network is blocking traffic we can add rules to allow the specific traffic we want.\nAllow all ICMP First, we will add a rule to allow ICMP between all addresses on the network. This is frequently used as a troubleshooting tool with very little risk.\nIn the Trustgrid portal, navigate to the default virtual network’s access policies page. Click the “Add Rule” button. Configure the rule as below: Action: Allow Protocol: ICMP Source: 0.0.0.0/0 Destination: 0.0.0.0/0 Line number: 90 (It is important that the rule number is lower than that on the default deny all policy, 100, so that it is evaluated first) Description: Allow all ICMP Click Save Select the Review Changes panel, click Apply Changes and, then confirm. Confirm ICMP Allowed On agent1 run: ping -c 3 100.64.0.2 Copy On agent2 run: ping -c 3 100.64.0.1 Copy You should see ping responses from the other agent, confirming ICMP traffic is still permitted by the new policy. Successful ping from agent2 to agent1 Allow Specific TCP Next, we will add a rule to allow more specific TCP traffic. Specifically, we will allow agent2 to connect to port 5000 on agent1.\nIn the Trustgrid portal, navigate to the default virtual network’s access policies page. Click the “Add Rule” button. Configure the rule as below: Action: Allow Protocol: TCP Source: 100.64.0.2/32 Destination: 100.64.0.1/32 Port Range: 5000 Line number: 80 (It is important that the rule number is lower than that on the default deny all policy, 100, so that it is evaluated first) Description: Allow TCP 5000 on Agent1 Click Save Select the Review Changes panel, click Apply Changes and, then confirm. Confirm TCP 5000 Allowed Now, we will confirm the specific TCP rule is allowing traffic as expected:\nOn agent1, run the following command to start netcat listening on TCP port 5000. nc -k -l 5000 Copy On agent2, run the following command to test connectivity to port 5000 on agent1: nc -vz 100.64.0.1 5000 Copy Successful connection to port 5000 on agent1 But, we also want to make sure other TCP traffic isn’t allowed.\nOn agent1 enter Ctrl+C to terminate the netcat listener. Then enter the command: nc -k -l 5001 Copy Note that the port has changed to 5001 On agent2, run the following command to test connectivity to port 5000 on agent1: nc -vz 100.64.0.1 5001 Copy Connection refused on port 5001 Next Steps So far we’ve only seen traffic passing between two agent IPs. In the next tutorial, you will see how you can route traffic to adjacent network devices.\n","categories":"","description":"Configure access policies to limit the traffic allowed on the virtual network","excerpt":"Configure access policies to limit the traffic allowed on the virtual …","ref":"/getting-started/trial/access-policies/","tags":"","title":"Implement Access Policy Restrictions"},{"body":" Nodes are available in two form factors:\nAppliance - This is a combination of a fully managed operating system and Trustgrid software pre-installed. Agent - This is a software package that can installed on supported operating systems. Users can install additional software and configure the operating system as needed. Functionality Agent Appliance Gateway Capabilities None Data Plane or ZTNA Operating System Multiple Supported OS, install additional software Fully managed OS and Trustgrid service, no additional software permitted Updates Managed by user via OS native tools OS and Trustgrid updates managed via Trustgrid Interface IP Management Managed by user via OS native tools Configurable via Trustgrid portal or local console Layer 3 VPN Single Virtual Network connectivity Support for multiple Virtual Networks Layer 4 Proxy Full Support Full Support Compute Commands only Commands, Containers or VMs supported Nodes can be deployed in a variety of ways, including as virtual machines, containers (as agents), or bare metal servers. Additionally, appliance-based nodes can be clustered for high availability.\n","categories":"","description":"Intro to deploying Trustgrid Nodes","excerpt":"Intro to deploying Trustgrid Nodes","ref":"/getting-started/deployment/","tags":"","title":"Node Deployment"},{"body":"Traffic Volume Data This graph displays the traffic volume of all data plane communications between the node and its peers.\nGateway Diagnostics Page ","categories":"","description":"View aggregate statistics for all tunnels","excerpt":"View aggregate statistics for all tunnels","ref":"/docs/nodes/appliances/gateway/gateway-diag/","tags":"","title":"Gateway Diagnostics"},{"body":"Startup Process ARP for the default gateway DNS request for A record for gatekeeper.trustgrid.io \u0026 zuul.trustgrid.io The response will be IPs in the Trustgrid AWS networks, 35.171.100.16/28 (us-east-1) or 34.223.12.192/28 (us-west-2) The node will initiate a connection to port 8443 on the IP addresses returned and start a TLS handshake. After a successfully TLS handshake, the node will show as connected in the Trustgrid Portal ","categories":"","description":"A step by step description of how a healthy Edge Node starts up and connects to the Trustgrid system.","excerpt":"A step by step description of how a healthy Edge Node starts up and …","ref":"/help-center/kb/startup-process/","tags":"","title":"Edge Node Startup"},{"body":" Virtual Network Port Forwards allow a virtual IP address to be associated with a TCP Layer 4 service on a remote node or cluster without the need to specify a route for that virtual IP address. Example Virtual Network Port Forward Description As noted above, a Virtual Network Port Forward (or remote port forward) associates a service defined on a node or cluster with a virtual IP address within the virtual network without needing to specifically route that IP to the node/cluster.\nAny node attached to the virtual network that receives VPN traffic destined for the configure IP and port will proxy the connection and send the traffic to the target node which will then send the traffic to the IP and port configured for the target service.\nField Name Description Virtual IP Address Virtual IP address assigned to the port forward. Virtual Port TCP port on which the port forward will listen for connections. Destination Node Node or Cluster where the target service is defined. Destination Service Service that traffic for the virtual IP and virtual port will be forwarded to. Alternately, you can specify an IP and port local to the destination node. ","categories":"","description":"","excerpt":" Virtual Network Port Forwards allow a virtual IP address to be …","ref":"/docs/domain/virtual-networks/remote-port-forward/","tags":"","title":"Virtual Network Port Forwards"},{"body":" Update Node Config button Trustgrid nodes are notified when configuration changes are saved in the Portal. However, if multiple changes are made in a short period of time, the notification will delay for a minute to reduce configuration churn and include all changes. This reduces the number of requests made by each node and the number of configuration changes the node has to process.\nIf you have made multiple changes to a node’s configuration (or its cluster configuration) and want to force the node to pull down the most recent configuration you can use the “Update Node Config” button. This will cause the node to pull down the configuration immediately.\n","categories":"","description":"Describes how to force a Trustgrid node to pull down the most up to date configuration","excerpt":"Describes how to force a Trustgrid node to pull down the most up to …","ref":"/tutorials/management-tasks/update-node-config/","tags":"","title":"Force Node to Pull Down Configuration"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/interface-tools/","tags":"","title":"Network Interface Tools"},{"body":" Flow logs are a records of for network traffic that passes through a node. They can be used to troubleshoot connectivity issues, or to monitor traffic patterns.\nWhat are flow logs? Flow logs are records containing metadata about each network traffic flow, or conversation, from the initial connection (e.g. the first SYN packet for TCP) to the closing of the connection (e.g. FIN or RST packets for TCP). Flow logs do not contain any payload data for the flow which makes them much smaller and more secure than a full packet capture of the same flow.\nFlow logs can be used for troubleshooting by:\nVerifying that both the expected source and destination node have the appropriate logs. That any NATs are applying as expected. That the expected number of flows or sent/received byte are being passed. TCP Flags can be used to confirm a successful connection is being made. For example: A TCP Flow with only a SYN flag is never completing the TCP Handshake process indicating an issue, such as a firewall or routing configuration problem, preventing the destination IP from either receiving packets or replying successfully A TCP Flow with only a SYN \u0026 RST flag indicates something in the path is actively resetting the connection attempt. This could be a firewall or an application IP restriction. Flow Log Data Below are the potential fields of a single flow log.\nField Name Description Start Time The time the flow started End Time The time the flow ended Protocol The protocol of the traffic TCP, UDP, ICMP Source Node The node that initiated the flow Source IP The IP address through which the node initiated the flow Source Port The port through which the node initiated the flow Dest Node The node that received the flow Dest IP The IP address to which traffic was sent Dest Port The port to which traffic was sent Recv Bytes Bytes received at the source node Sent Bytes Bytes sent from the source node TCP Flags All TCP Flags set on any packets seen over the duration of the flow:\nSYN - sync packet PSH - push packet ACK - ack packet URG - urgent packet FIN - finish packet RST - reset packet TCP Flags are only available for TCP flows that traverse the layer 3 VPN function. ICMP and UDP traffic, Layer 4 services and VPN Port Forwards will not have this data.\nNAT Impact on Source and Destination Fields When NATs are applied to a flow they will influence the source/destination IP and port values.\nConsider this flow:\ngraph LR client(HTTP Client\\n192.168.100.1) -- src: 192.168.100.1\\ndest: 10.100.1.1--\u003e Node1 subgraph Virtual Network Node1 -- src: 10.100.2.1\\ndest: 10.100.1.1 --\u003e Node2[Node2 \\n Local IP\\n172.16.1.100] end Node2 --src: 172.16.1.100 \\n dest:172.16.1.20 --\u003e server(HTTP Server\\n172.16.1.20) Node1 would report the flow before any NATs were applied\nSource IP Destination IP 192.168.100.1 10.100.1.1 Node2 would report the flow after the NATs on Node1 were applied (changing the source 10.100.2.1) and the NATs on Node2 were applied (changing the source to 172.16.1.100 and the destination to 172.16.1.20)\nSource IP Destination IP 192.168.100.1 10.100.1.1 Note: For simplicity, ports were excluded. Destination ports will not be changed by NATs. Source ports would also be maintained for any 1:1 NAT, but would change if a many:1 (or overload) NAT was applied to the flow. Viewing Flow Logs Flow logs are visible at an organization level by navigating to Operations \u003e Flow Logs. This will show you the most recent 10,000 flows of all nodes in the organization.\nTo view Flow Logs only for traffic through a specific node, navigate to that node and go to History \u003e Flow Logs. This will show you the most recent 10,000 flows for the currently selected node.\nExample flow log table for a node Advanced Search Flow logs can be filtered by any of the fields listed above. To filter by a field, click the Advanced Search button at the top right of the flow logs table.\nIn addition, the ordering can be changed so that the oldest flows (or flows closest to the time range specified) can be shown first. There is a limit of 10,000 flows returned per search.\nAdvanced Search dialog Exporting Flow Logs to CSV From the Flow logs table, you can export the current filtered logs to a CSV file for further analysis or reporting.\nStart and End Both of these fields are exported in two different formats:\nHuman friendly in the format: MM/DD/YYYY HH:MM:SS AM/PM Timestamp in milliseconds since epoch for machine parsing and sorting ","categories":"","description":"","excerpt":" Flow logs are a records of for network traffic that passes through a …","ref":"/help-center/flow-logs/","tags":"","title":"Network Flow Logs"},{"body":" Trustgrid delivers a software defined wide area network (SD-WAN) that enables connectivity between cloud environments, data centers, and edge or on-premise hosts. Our robust networking feature set provides layer 3 and layer 4 network overlays with cloud management tools.\nTypes of Connectivity Trustgrid establishes mutual TLS tunnels between nodes using mutual authentication. These tunnels between edge nodes and gateway nodes constitute the data plane of a Trustgrid network. Over this tunnel two distinct types of connectivity are supported, Layer 3 and Layer 4. Layer 3 supports routed traffic and Network Address Translation (NAT) to replicate traditional WAN connections. Trustgrid’s Layer 4 networking uses reverse proxies to map local IP-port number combinations to remote hosts. Each connectivity type has distinct advantages and may be used for either gateway nodes or edge nodes.\nLayer 3 Overview The Trustgrid VPN feature provides the capability to securely route IP packets between networks. In this configuration, Trustgrid nodes can operate as a distributed mesh virtual private network (VPN) that can allow applications to access remote data and services at layer 3 (L3) of the network OSI model. This is done by defining a virtual L3 network (similar to an Amazon VPC) and then selecting how edge node networks are exposed and translated into the the virtual address space.\nLayer 3 configuration is required for all Trustgrid networking deployments on the Gateway (data center / cloud) side. This allows the use of L3 or Layer 4 configurations for edge node deployments. Layer 3 connectivity enables easy support of many hosts at each side of the connection. This allows the replication of existing routes and subnets to minimize reconfiguration of any remote or local networks.\nLayer 3 edge configuration is ideal in situations where there is an incomplete understanding of all traffic (source and destination hosts/ports) as it supports more permissive ACLs. It is required when using stateful protocols (except FTP) and other protocols such as SIP.\nAll gateway nodes must be deployed using L3 networking in a two interface (management/data NIC) configuration.\nLayer 4 Overview Trustgrid Layer 4 (L4) is only supported in edge configurations. Layer 4 networking enables a reverse proxy connection between the Gateway Node IP address:port number that maps directly to an on-premise host:port. Specific network plug-ins support stateful features like FTP using L4 connectivity. With Trustgrid’s L4 networks there is no concern of overlapping local IP subnets on either end of the tunnel because Trustgrid proxies the traffic. The source of all TCP/UDP traffic is the edge node interface, not the originating host. This is transparent to the hosts on either side.\nLayer 4 connectivity offers slightly better performance than L3 in specific types of traffic and is ideal when there is a single or few remote/edge hosts that are being accessed with deterministic traffic. Layer 4 edge nodes are usually easier to deploy at an edge site as they can avoid the configuration of a virtual network overlay (NATs, ACLs, Routes, etc). Remote sites that desire to view the actual source of traffic should use Layer 3 for edge configurations as the source IP for all traffic in a Layer 4 connection is the edge node’s data IP address.\n","categories":["overview"],"description":"Trustgrid networking overview\n","excerpt":"Trustgrid networking overview\n","ref":"/getting-started/networking/","tags":["architecture"],"title":"Networking"},{"body":" An access policy is a list of rules that each allow, reject, or drop traffic at the VPN level.\nIf no rules are defined, traffic will not pass through the virtual network.\nA rule can match traffic based on the following fields:\nField Name Description Action Whether to ALLOW, DROP, or REJECT the traffic. Protocol You can choose ANY, UDP, ICMP, or TCP. Source The source of the traffic. You can select a network object, a network group, or provide a CIDR. Destination The destination of the traffic. You can select a network object, a network group, or provide a CIDR. Line Number Rules are evaluated starting with the lowest numbered rule. Once a rule matches, later rules are ignored even if they might also match the traffic. Port Range For TCP and UDP traffic, you can specify a port (e.g., 80) or a range (e.g., 8000-9000). Note that all specified fields must be matched for the rule to match.\n","categories":["concepts"],"description":"","excerpt":" An access policy is a list of rules that each allow, reject, or drop …","ref":"/docs/domain/virtual-networks/access-policy/","tags":["domain","concepts","rewrite"],"title":"Access Policy"},{"body":"Upgrade Process DNS request for A record of repo.trustgrid.io The response will be IPs in the Trustgrid AWS networks, 35.171.100.16/28 (us-east-1) or 34.223.12.192/28 (us-west-2) The node will initiate an HTTPS connection to port 443 on the ip address returned for repo.trustgrid.io. This includes validating the TLS Certificate. Any changes to the certificate chain will stop the process from continuing. The update process will first download and install the latest version of the Trustgrid software. After the Trustgrid software is installed, the node will begin downloading any available OS security packages and installing them. After installation the Trustgrid node will reboot and load the latest version of the Trustgrid software. Troubleshooting Upgrade Failures Confirm port 443 access to repo.trustgrid.io Check for interference with TLS certificate validation ","categories":"","description":"A step by step description of how a healthy node appliance upgrades.","excerpt":"A step by step description of how a healthy node appliance upgrades.","ref":"/help-center/kb/upgrade-process/","tags":"","title":"Appliance Upgrade Process"},{"body":"The tutorial up to this point only demonstrated the ability to send traffic between the IP addresses assigned to the trustgrid0 interfaces on each agent. However, it’s quite likely that security and operational constraints will prevent the Trustgrid agent from being installed directly on the target server. Instead, the agent will need to route traffic destined for the target server’s local network.\nIn this section, we will configure an agent to route traffic destined for another network through the Trustgrid virtual network. To avoid assumptions about the networks your agents are deployed in, we will use a loopback interface to simulate an adjacent network. But the steps shown here would apply equally if routing between real physical interfaces.\nHigh-Level Goals Create a loopback interface to simulate an adjacent network Configure a route to send traffic destined for the adjacent network subnet through a Trustgrid agent Configure the agent to forward the virtual network traffic to the real subnet Configure a NAT to obscure the real target address Prerequisites Two agents installed and confirmed communicating (pingable) on the default virtual network as set up in previous tutorials Initial Setup Access Policies Step 1 - Configure Loopback Interface and Start Server On agent1 we will create a loopback interface and assign it an IP address from another subnet. This will simulate an adjacent network that the agent needs to route traffic to. The assigned IP address 172.31.255.1/32 can be replaced by another IP if it conflicts with an IP or route on either of the agents. Gain console access to agent1. Run the below commands to add a loopback interface called lo2 and assign an IP address 172.16.255.1. sudo ip link add name lo2 type dummy sudo ip addr add 172.31.255.1/32 dev lo2 sudo ip link set lo2 up Copy Start a netcat listener on the lo2 interface using the below commands: nc -k -l -p 5000 -s 172.31.255.1 Copy Step 2 - Configure access to an adjacent network Configure IP Forwarding on agent1 The first step is to configure agent1 to forward traffic to networks other than its own trustgrid0 interface IP. By default, the Linux operating system will only accept packets on an interface if the destination IP is assigned to that interface. Enabling IP forwarding allows the OS to manage packets destined for other IPs and networks.\nIn the Trustgrid portal Nodes page select agent1 Navigate to the VPN panel Click the box to “Enable Forwarding” Click “Save” Configure Virtual Network Route to agent1 Now that agent1 has an “adjacent network” of interest, the virtual network needs to be told that packets destined for this network should be routed to agent1. We will do this with a virtual network route.\nIn the Trustgrid portal, navigate to the “Virtual Network” page and select the default network. On the Routes panel click the “Add Route” button. Configure the route with the following settings Destination: Node: agent1 Destination CIDR: 172.31.255.1/32 Metric: 1 Description: agent1 loopback Click Save at the top of the page. Navigate to the Review Changes page and click Apply Changes. Confirm with Yes when prompted. Configure OS Route on agent2 Next, we need to tell agent2 to use the trustgrid0 interface to route traffic destined for the adjacent network. This is done by adding a local route in the operating systems that will forward traffic for the target IP, 172.31.255.1, via the trustgrid0 interface and through the virtual network tunnel.\nGain console access to agent2 Run the command: sudo ip route add 172.31.255.1/32 dev trustgrid0 Copy You can confirm this is effective with the command: ip route Copy You should see the route listed as shown below: Route for 172.31.255.1 on the trustgrid0 interface Confirm Connectivity Test ICMP Connectivity We can now test ICMP connectivity using ping.\nOn agent2, run the command: ping -c 3 172.31.255.1 Copy You should see replies from the IP on agent1’s lo2 interface. Successfully routed pings This confirms that traffic destined for the adjacent network IP is:\nRouted by the OS on agent2 out the trustgrid0 interface Flows over the virtual network to agent1 Is received and forwarded by agent1 to the lo2 interface Replies return over the same path Test TCP Connectivity Similarly, we can verify TCP traffic is being routed and forwarded as expected. Similar to the access policy tutorial, we will test connectivity to the netcat listener but in this case, we will bind the listener to the loopback interface IP.\nUpdate Access Policies In the access policy tutorial we specified a rule that only allowed TCP access to port 5000 when the destination IP was agent1’s trustgrid0 IP, 100.64.0.1. Since we are now routing traffic to agent1’s loopback IP 172.31.255.1 instead, we need to update the policy to allow access to that IP/port instead.\nIn the Trustgrid portal navigate to the Virtual Networks page and select the default network. Click the edit icon to the right of the TCP 5000 rule previously created. Change the Destination to 172.31.255.1/32 and click Save. Confirm the rule change was applied by navigating to the Review Changes page and clicking Apply Changes. Confirm with Yes when prompted. Confirm TCP Connectivity Now we can start our listener and test connectivity.\nOn agent1 run the command: nc -k -l -p 5000 -s 172.31.255.1 Copy On agent2 and confirm we can connect to port 5000 on agent1’s loopback ip with the command: nc -vz -w 1 172.31.255.1 5000 Copy You should see a successful connection message like below. ","categories":"","description":"Configure an agent to route traffic to resources on the local network","excerpt":"Configure an agent to route traffic to resources on the local network","ref":"/getting-started/trial/subnet-routing/","tags":"","title":"Configure Subnet Routing"},{"body":"How an Appliance Node Upgrades The upgrade process will:\nUpgrade the Trustgrid application package. As part of this process the node will backup the current running version. Apply security updates to install operating system packages. Reboot the Trustgrid node appliance. For details on what this looks like from a network level see the Node Upgrade Process KB article.\nFrequently Asked Questions Is the upgrade disruptive? - Yes. While the appliance is upgrading services will remain available, though performance may be degraded. However, the reboot step will make all services unavailable until the appliance fully boots and starts the Trustgrid service. Typically this takes a few minutes depending on the underlying hardware. How long will the upgrade take? - This is highly variable but typically this takes between 10 minutes and an hour. Below are a list of things that influence how long the upgrade takes: Internet bandwidth - This determines how quickly the node can download the updates. Time since previous update - The longer a node goes without updating the more security packages are likely to be required. CPU and disk performance - The upgrade process involves significant CPU processing and to a lesser extent disk I/O. The upgrade process is single-threaded, so core speed is more important than number of cores. Best Practices Upgrade nodes regularly to ensure access to the latest features and security updates For clustered nodes: Upgrade the standby node Change the standby node to be the configured master/active and wait for it to claim this role. Upgrade the new standby node in the cluster Utilize an Alert Suppression Window to reduce the number of alarms generated if upgrading many nodes. Required Permissions In order to perform the below actions a user must have a policy applied with the following permissions to the nodes that will be upgraded.\n\"statements\": [ { \"effect\": \"allow\", \"actions\": [ \"nodes::read\", \"nodes::upgrade\", \"nodes::manage\", \"nodes::service:node-upgrade\", \"portal::access\" ] } ], The above is only a partial policy. Use the policy creator to define a complete policy Upgrading a Single Node Navigate to the node that will be upgraded. From the tool bar click the Upgrade button. Upgrade button When prompted enter the node’s name and click confirm. Node upgrade confirmation A dialogue will indicate the command was successfully sent. Node upgrade response Upgrading Multiple Nodes Navigate to the Nodes table. (Optional) Use the search box or apply a tag filter to filter the displayed nodes. Note: if you change the search or tag filter any selected nodes will be deselected. Use the check boxes to select the desired nodes. Nodes table From the actions dropdown select Upgrade. Action \u003e Upgrade When prompted, confirm you want to proceed with the bulk upgrade. Confirm bulk upgrade A table will be presented showing the status of each node upgrade request. Upgrade Operation Report Monitoring Upgrade Progress You can monitor the upgrade status from a node’s Info tab. Info tab, Upgrade in Progress There are two fields Field Name Description Upgrade Status Shows the most recent status of an upgrade operation on this node. Possibly values are:\nIn Progress Completed Failed Completion Time Shows a timestamp for the last time an upgrade operation completed. Note: if an upgrade is currently In Progress, then this will be the completion time of the prior upgrade operations Example of Completed upgrade status ","categories":"","description":"","excerpt":"How an Appliance Node Upgrades The upgrade process will:\nUpgrade the …","ref":"/tutorials/management-tasks/upgrade-nodes/","tags":"","title":"Upgrading Trustgrid Appliance Nodes"},{"body":" Trustgrid’s mission is to replace aging Edge connectivity solutions with innovative, software-defined solutions that integrate security and compliance in a way impossible for legacy solutions while improving efficiency in deployment and life-cycle management.\nAuthentication Pre-shared keys (PSK) are the most common method for authenticated connectivity and present a significant risk when implemented poorly. Certificate-based authentication is difficult and requires advanced skill sets. Trustgrid is the ‘root of trust’ in a Public Key Infrastructure (PKI) built by our security experts to enable automated certificate management across Trustgrid networks. All devices enrolled in the PKI are managed centrally from Trustgrid’s cloud infrastructure. Certificates are issued per device and are used to authenticate, and for encryption of all traffic.\nAuthorization Central to the security of the Trustgrid network is an authorization model derived from Google’s Beyond Corp (aka Zero Trust from Forrester) initiative. This places an implicit deny on all traffic that cannot be configured to allow all traffic. Many breaches have been caused by allowing all traffic to overcome the burden of proper security configuration.\nTrustgrid uses a token to authorize communication between Trustgrid nodes.\nEncryption TLS Encryption All data between Trustgrid nodes for both the control and data plane is encrypted using TLS Mutual Authentication. The Internet Engineering Task Force (IETF) recommends TLS as the replacement for IPSec VPN. The TLS tunnels use the TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 cipher.\nUDP Data Plane Encryption Trustgrid nodes with UDP enabled use ChaCha20-Poly1305 for encryption. The encryption keys are securely generated on the server and shared with the client of the existing TLS tunnel to the client. The keys are rotated automatically every 5 minutes.\nThe UDP server endpoint is also “dark” in the sense that it will not respond to any traffic unless it is verified to be encrypted/signed by an endpoint and key that is valid. Automated Management Trustgrid offers tools for automating software updates at scale. A significant difficulty in securing traditional VPNs is the application of patches and updates to hardware appliances. Many vendors own and maintain hundreds or thousands of these devices and are simply unable to efficiently patch them. This leaves significant security vulnerabilities unaddressed in customer and vendor data centers.\nPrivate Data Routing Trustgrid enables private data connections routed on infrastructure owned by each vendor, not through centralized, multi-tenant gateways that touch hundreds of vendors’ connections concurrently.\n","categories":"","description":"","excerpt":" Trustgrid’s mission is to replace aging Edge connectivity solutions …","ref":"/getting-started/security/","tags":"","title":"Security"},{"body":"The DNS feature allows nodes in the virtual network to act as DNS servers for ingress VPN traffic. The node can resolve queries custom defines DNS zones and records, or forward queries to upstream DNS servers.\nDNS Settings Field Name Description Enable/Disable DNS This field enables or disables the DNS feature on the virtual network. DNS Server IP This is the IP address that should be used as the resolver. There is no need to create a VPN route for this IP. If the ingress node was the DNS feature enabled it will automatically handle responses for the query. DNS Settings After making any changes to the DNS settings you will need to review and apply changes for the updates to take effect.\nDNS Zones Optionally you can create custom DNS zones and either:\nConfigure specific DNS records to resolve to IPs/hosts on the virtual network Configure a node as a resolver for this zone. Requests will be forwarded to that node and resolved by its DNS servers or configured upstream servers. DNS Zone Settings Adding a DNS Zone To add a custom DNS zone:\nClick the “Add Zone” button. Provide a name for the zone (e.g. example.com). Optionally, provide a description for the zone. Review and apply changes to save the zone. Adding a DNS Zone Once a zone has been added, you can configure either a DNS resolver or specific DNS records.\nYou cannot have both custom DNS records and a resolver configured for the same zone. Configuring a DNS Resolver Click on the zone name to enter its configuration page. Under “Resolver”, select a node from the dropdown. Click “Save” to save the resolver configuration. Review and apply changes to update the DNS configuration. Configuring DNS Records DNS records allow mapping names to IP addresses for hosts on the virtual network. DNS records have the following fields:\nField Name Description Name The hostname being mapped (e.g. www). The zone name will be automatically appended. Record Type A - for records that should resolve to an IP address CNAME - for alias/canonical name records Value The IP address or hostname being mapped to for A/CNAME records respectively. TTL Time To Live - how long records may be cached by other resolvers. To add a DNS record:\nClick on the zone name to enter its configuration page. Under “DNS Records”, click “Add Record” Provide the required fields Add DNS Record prompt Click save. (Optional) repeat to add more records to the current zone. Review and apply changes to save the record(s). ","categories":"","description":"","excerpt":"The DNS feature allows nodes in the virtual network to act as DNS …","ref":"/docs/domain/virtual-networks/dns/","tags":"","title":"DNS"},{"body":"Agents can define static routes for their virtual network to augment or override routes defined in the global virtual network route table. Field Name Description Destination The destination node or cluster where matching traffic will be routed. Destination CIDR The CIDR notation of the IP address or network traffic that this route should manage. Metric Value between 1 and 200. The available route with the lowest metric will be selected when a flow is created. Description (optional) A user-friendly description for the route and its purpose. Manage Agent Static VPN Routes Add Agent Static VPN Route Navigate to the Static Routes page of the desired agent. Click the Add Route button at the top of the table. Provide the Destination, Destination CIDR, Metric, and optional description for the new route. Optionally, repeat with additional routes. Click Save Delete Agent Static VPN Routes Navigate to the Static Routes page of the desired agent. Select the check box to the left of the route you wish to delete. From the Actions dropdown above the table select Delete. When prompted confirm you wish to delete the rule. ","categories":"","description":"Define static routes for an agent's virtual network","excerpt":"Define static routes for an agent's virtual network","ref":"/docs/nodes/agents/vpn/static-routes/","tags":"","title":"Agent Virtual Network Static Routes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/remote-tools/","tags":"","title":"Remote VPN Tools"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tutorials/gateway-tools/","tags":"","title":"Gateway Tools"},{"body":"Virtual Network IP Pools are used for automatically assigning virtual management to nodes. This is optional but makes configuration and management easier.\nAt this time only agent-based nodes support automatic IP assignment Address Assignment Addresses are assigned sequentially from the pool by Trustgrid. When a node is attached to a virtual network with an IP pool configured, it will automatically be assigned the next available IP from the pool. When a node is detached its IP is returned to the pool for reuse. However, the released addresses are not used until all addresses in the pool have cycled through once.\nYou will still need to create domain routes to point the assigned IP to the targeted node. Adding Pools You can add one or more virtual pool ranges to a virtual network. It is recommended to size the initial pool to a realistic estimate of your expected nodes plus some overhead. Additional ranges can be added later if needed.\nClick the Add IP Pool button. Provide the requested information: Field Name Description CIDR Provide the CIDR of the network you want to make available in the pool. For example, 10.1.1.0/24 Description (optional)Provide a user-friendly description of the pool. Click Save Add IP Pool ","categories":"","description":"Define pools of IPs that are used for automatically assigning virtual management addresses to nodes","excerpt":"Define pools of IPs that are used for automatically assigning virtual …","ref":"/docs/domain/virtual-networks/ip-pool/","tags":"","title":"Virtual Network IP Pools"},{"body":" Be advised: Deleting a node is an irreversible action. Delete nodes only after you are certain it is no longer needed. Best Practices Disable the node(s) for several days prior to deleting. This way if it is discovered that it is still needed it is simple to re-enable. Update any status tag to indicate the node(s) is being decommissioned. Before deleting, remove any virtual network routes with the node as a destination. While these can be removed later, they will be easier to find while the node is still listed as the destination. Deleting Nodes If the node(s) is not already disabled, disable the node(s) See best practice above before proceeding If the node(s) is a member of a cluster, remove the node(s) from the cluster. Navigate to the Nodes table and select the target node(s). Optionally, Use the search to filter the displayed nodes. From the Actions menu select the Delete option. Delete node action If deleting a single node, you will be prompted to enter the name of the node about to be deleted to confirm. If deleting multiple nodes, you will be prompted to enter DELETE to confirm. ","categories":"","description":"Describes the process of deleting Trustgrid nodes along with best practices","excerpt":"Describes the process of deleting Trustgrid nodes along with best …","ref":"/tutorials/management-tasks/deleting-nodes/","tags":"","title":"Deleting Trustgrid Nodes"},{"body":" Be advised: Deleting a cluster is an irreversible action. Delete clusters only after you are certain they are no longer needed. Best Practices Remove all members for a period of time to ensure the configuration is no longer needed. Update any status tag to indicate the cluster(s) is being decommissioned. Before deleting, remove any virtual network routes with the cluster as a destination. While these can be removed later, they will be easier to find while the cluster is still listed as the destination. Deleting Clusters Remove the node(s) from the cluster and remove any virtual network routes with the cluster as a destination. See best practices above Navigate to the Cluster table and select the target cluster(s). Optionally, Use the search to filter the displayed clusters. From the Actions menu select the Delete option. Delete cluster action If deleting a single cluster, you will be prompted to enter the fully-qualified domain name (fqdn) of the cluster about to be deleted to confirm. If deleting multiple clusters, you will be prompted to enter DELETE to confirm. ","categories":"","description":"Describes the process of deleting Trustgrid Cluster along with best practices","excerpt":"Describes the process of deleting Trustgrid Cluster along with best …","ref":"/tutorials/management-tasks/deleting-clusters/","tags":"","title":"Deleting Trustgrid Clusters"},{"body":" Because changes to a domain virtual network affect all nodes, domain configuration changes must be reviewed before applied, and are applied all at once.\nAfter making changes to a virtual network, you can review outstanding changes. A list of changes will show who made each change, with a before/after table if appropriate.\nIndividual changes can be rejected by clicking the delete icon at the top.\nOnce changes are applied, outstanding changes will disappear from the review page, and nodes will receive the configuration updates.\n","categories":["concepts"],"description":"","excerpt":" Because changes to a domain virtual network affect all nodes, domain …","ref":"/docs/domain/virtual-networks/review-changes/","tags":["domain","concepts","rewrite"],"title":"Review Changes"},{"body":"","categories":"","description":"Contains information on default settings on Trustgrid devices\n","excerpt":"Contains information on default settings on Trustgrid devices\n","ref":"/help-center/kb/default-settings/","tags":"","title":"Trustgrid Default Settings"},{"body":" The sections below provide examples of how Trustgrid nodes can be deployed to provide WAN/ISP redundancy Behind Firewall/Router with Multiple ISP Connections In this configuration the Trustgrid WAN interfaces are behind a firewall or router that has two independent ISP connections to provide internet access.\nThe firewall or router is responsible for either failing over outbound traffic in the event of an ISP failure, or to route different nodes to utilize specific ISP connections.\nThe WAN interface of the Trustgrid node would utilize private IPs in this configuration that are NAT’d to public IPs by the firewall/router. This is the only configuration that:\nSupports Single Node deployments Supports Single Interface configurations This configuration is not recommended for nodes acting as gateways. In this configuration devices are NAT’d to a different public IP depending on which ISP is active. A gateway node can only announce a single IP or DNS address for its clients to connect to. It would be possible to announce a DNS record and some form of dynamic DNS health check to update the record if the ISP changed. But that change would have to propagate which could take some time. Single Node Behind Firewall This configuration shows a single node connected to a firewall or router that has two ISP connected to it.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c-.Optional.-\u003e intNet \u003c-.Optional.-\u003e snLAN subgraph sn [Single Node] snWAN[WAN\\nInterface] snLAN[LAN\\nInterface] end firewall[\"Firewall/Router\"] dmzNet[[DMZ\\n Network]] firewall == Primary==\u003e ISP1([ISP 1]) firewall -. Failover/Backup .-\u003e ISP2([ISP 2]) snWAN --\u003e dmzNet --\u003e firewall classDef tgnode fill:#346ed9,color:white class sn tgnode Clustered Nodes Behind Firewall This configuration shows a cluster of Trustgrid nodes connected to a firewall or router that has two ISPs connected to it.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c-.Optional.-\u003e intNet \u003c-.Optional.-\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] end end dmzNet[[DMZ\\n Network]] firewall[\"Firewall/Router\"] firewall == Primary==\u003e ISP1([ISP 1]) firewall -. Failover/Backup .-\u003e ISP2([ISP 2]) cl1WAN \u0026 cl2WAN --\u003e dmzNet --\u003e firewall classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 Cluster WAN Interface to Different Networks Another method of providing redundancy takes advantage of Trustgrid clustering by connecting each member of the cluster to a different ISP on their WAN interface. This could be done by:\nDirectly attaching each member WAN interface to a different ISP handoff Connecting each member WAN interface to different DMZ private networks configured to use different ISPs for internet access A combination of public and private WAN networks In this configuration, the master/active member of the node will determine which ISP is being utilized. If one ISP is preferred you will need to have operational procedures in place to ensure the member node connected to it stays the master node. It is recommended that you keep the cluster mode configured as Automatic Failback and your organization establishes a tag to designate the preferred member.\nBecause the WAN interfaces are on different networks, this configuration requires at least one additional LAN interface to be configured for accessing internal resources and providing the cluster heartbeat communication Cluster WAN Direct Connections to Multiple ISPs This configuration shows Cluster-Node1’s WAN interface directly connected to one ISP. And Cluster-Node2’s WAN interface is connected directly to another ISP.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c---\u003e intNet \u003c---\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] end end cl1WAN ==\u003e ISP1([ISP 1]) cl2WAN ==\u003e ISP2([ISP 2]) classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 Cluster WAN to separate DMZ networks This configuration shows Cluster-Node1’s WAN interface is connected to one DMZ/private network that is behind a firewall connected to one ISP. And Cluster-Node2’s WAN interface is connected to a second DMZ network behind a separate firewall connected to a different ISP.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c---\u003e intNet \u003c---\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] end end dmzNet1[[DMZ\\n Network 1]] dmzNet2[[DMZ\\n Network 2]] firewall1[\"Firewall/Router 1\"] firewall2[\"Firewall/Router 2\"] cl1WAN --\u003e dmzNet1 --\u003e firewall1 ==\u003e ISP1([ISP 1]) cl2WAN --\u003e dmzNet2 --\u003e firewall2 ==\u003e ISP2([ISP 2]) classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 Note: While shown with two separate firewall/routers, this could also be accomplished with a single firewall/router configured to route each DMZ network to a different ISP. Cluster WAN using mix of public and DMZ networks This configuration shows Cluster-Node1’s WAN interface is connected to a private DMZ network behind a firewall that is using ISP 1. Cluster-Node2’s WAN interface is connected directly to ISP 2.\ngraph LR intHost[Internal Hosts] intNet[[Internal\\n Network]] intHost \u003c---\u003e intNet \u003c---\u003e cl1LAN \u0026 cl2LAN subgraph cluster [\" \"] subgraph Cluster-Node1 cl1WAN[WAN\\nInterface] cl1LAN[LAN\\nInterface] end subgraph Cluster-Node2 cl2WAN[WAN\\nInterface] cl2LAN[LAN\\nInterface] end end dmzNet1[[DMZ\\n Network 1]] firewall1[\"Firewall/Router 1\"] cl1WAN --\u003e dmzNet1 --\u003e firewall1 ==\u003e ISP1([ISP 1]) cl2WAN ==\u003e ISP2([ISP 2]) classDef tgnode fill:#346ed9,color:white class Cluster-Node1,Cluster-Node2 tgnode style cluster fill:#c8c8c8 ","categories":"","description":"Shows different way Trustgrid nodes can utilize multiple WAN or ISP connections for redundancy","excerpt":"Shows different way Trustgrid nodes can utilize multiple WAN or ISP …","ref":"/help-center/kb/wan-redunancy/","tags":"","title":"WAN/ISP Redundancy Configurations"},{"body":"","categories":"","description":"Release notes related to the Trustgrid Control Plane Services\n","excerpt":"Release notes related to the Trustgrid Control Plane Services\n","ref":"/release-notes/cloud/","tags":"","title":"Control Plane Release Notes"},{"body":" Connect cloud applications to data in any environment Start Here Guides Deployments - deploy a node to your environment Reference An explanation of the building blocks and core concepts for building with Trustgrid.\nNodes - every device or service that connects to Trustgrid is a node Clusters - pair nodes together for HA Tools Swagger API Terraform Provider Status Page ","categories":"","description":"","excerpt":" Connect cloud applications to data in any environment Start Here …","ref":"/","tags":"","title":"Documentation"},{"body":"Authentication Fixes Address an issue causing some users to get a 502 Bad Gateway on login if their users had very complex policies attached. Fixes an issue that caused Internal Server Error messages when a user attempts to logout. ","categories":"","description":"July 2025 Minor Cloud Release Notes","excerpt":"July 2025 Minor Cloud Release Notes","ref":"/release-notes/cloud/2025-07/","tags":"","title":"July 2025 Minor Release Notes"},{"body":"VLAN Sub-Interface Improvements Adds SNMP support for VLAN interfaces, enhancing monitoring capabilities. Removes the node-level restriction on VLAN interface assignments. Infovisor Redesign This release includes a significant redesign of the Infovisor, providing a more intuitive and user-friendly interface. Some key improvements include:\nInfo is now grouped into multiple panels that can be collapsed or expanded, and even added/removed for easier navigation. All info fields now include a copy button when hovered over, allowing for easy copying of information. Copy Button Displays NIC IP addresses in the Infovisor for easier interface identification. Cloud Integration Enhancements Adds new interface tools on AWS Nodes: AWS Route Tables - This service will query the AWS API for all route tables associated with the interface and the associated routes and destinations. This is useful for troubleshooting routes managed by clustered Trustgrid nodes. AWS Stats - This service will retrieve metrics for the ENA Driver providing the ability to check if interface limits are being exceeded. Removes the next hop field for interface routes on AWS and Azure nodes as both require the gateway for that network to handle traffic. Gateway and Data Plane Improvements Move the below settings up to a header bar since these settings are not specific to the nodes gateway server or client functions. Enable UDP Max Ingress Max Egress Resolves an issue where column widths in the Data Plane panel could not be adjusted, improving UI flexibility and customization. Restores functionality for gateway diagnostics in the portal. Observability This release includes early access to the Observability feature, which allows for exporting data such as metrics and events to external systems using the OpenTelemetry (OTel) protocol. Trustgrid will use this early access stage to gather feedback and usage data to help determine if additional charges will apply in the future. Functionality and pricing are subject to change. Contact Trustgrid Support to enable this feature for your account.\nPreliminary testing has been done with Splunk and Logstash as exporters.\nOther Improvements and Fixes Generating a new API key now invalidates the previous key correctly Corrects the export functionality for the node table, ensuring that Location and ISP data are accurately included in the exported CSV file. Renames “TCP Errors” to “TCP Stats” in the Nodes Overview for clarity. Enables sorting of domain routes by description to streamline navigation. Ensures that all permissions assigned to a user are displayed in the portal, aiding in effective access management. Changes the Repo Connectivity status to “Healthy” or “Unhealthy” instead of “Enabled” or “Disabled” for better clarity. Adds support for applying route monitors at the domain level, improving route oversight. Fixes GChat event handling so new alerts are not immediately marked as resolved, improving alert visibility and reliability in incident response workflows. Renames local/remote peer fields in GRE Tunnel configurations to be more descriptive. Fixes an issue where IDP user/group sync could fail to refresh daily. ","categories":"","description":"June 2025 Major Cloud Release Notes","excerpt":"June 2025 Major Cloud Release Notes","ref":"/release-notes/cloud/2025-06/","tags":"","title":"June 2025 Major Release Notes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/monitoring/","tags":"","title":"Monitoring"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/monitoring/","tags":"","title":"Monitoring"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/orders/","tags":"","title":"Orders"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/provisioning/","tags":"","title":"Provisioning"},{"body":" Package Version Core Version Release 1.5.20250415-2266 20250415-213243.4a224c3 n-2.22.0 Hop Monitoring Improvements This release makes some significant improvements to Hop Monitoring. Previously the Hop Monitoring ran every 20 seconds providing only 3 samples per minute. This was not enough to provide accurate data for some applications. This release increases the sample rate to every 5 seconds. This allows the Hop Monitoring to provide accurate data for applications that require a high sample rate.\nAdditionally, the Hop Monitoring by default will attempt to send data payload in the SYN packets equal the 1440 bytes or the MTU of the WAN interface minus 60 byte. The goal is to detect hops in the path with smaller than standard MTU that can lead to retransmissions and performance problems. It is important to note that this check only runs in a single direction, from the edge node to the gateway node. As edge nodes do not listen a check in the other direction is not possible.\nFinally, this release adds the ability for a gateway to request hop monitoring from all it’s connected edge nodes. This can make it easier to enable hop monitoring throughout an organization without having to enable it on each edge node individually. As part of this change we have also changed the hop monitoring settings on the client page from disabled/enabled to:\nAlways - This is equivalent to the previous enabled setting. The node will attempt hop monitoring to all its connected gateways. Only when peer requests - This is the default setting. The node will attempt hop monitoring to any gateway configured to request it. Never - This is equivalent to the previous disabled setting. The node will not attempt hop monitoring to any gateway, event if it is configured to request it. Cluster Improvements Cluster Communication Fixes This release makes a number of changes to address issues with cluster communication. These changes include:\nAzure Cluster IP addresses could end up in a state where neither member could set the IP configuration. Additionally any issue configuring the cluster IP logged every minute. This release fixes both of these issues. Configuring a cluster IP on non-Azure appliances required a restart to be effective. This release fixes this issue. Nodes stuck in a dual active or flapping state could see direct memory (outside the JVM allocation) usage increase. This release fixes this issue. Multiple race conditions that could lead to dual-active or no-active member clusters have been addressed. Stateful Failover Beta Trustgrid is working to make upgrades of clustered nodes less disruptive. This release includes a beta feature that synchronizes VPN flows between nodes in the cluster. During a graceful failover, this can allow existing connections to continue to function without interruption. This feature is disabled by default but can be enabled by contacting Trustgrid support.\nBGP Improvements This release adds two new event types for BGP connectivity under the category BGP Peer Connectivity that will be sent when a BGP disconnects or reconnects. It also rate limits the number of debug log entries when a BGP peer is disconnected.\nGateway Path Improvements Prior to this release, the Control \u0026 Data Plane Health check did not include additional gateway paths in determining the health of a cluster member. This could potentially lead to a failover when the node still had a healthy data plane path. This release fixes this issue by including all gateway paths in the health check.\nOther Improvements and Fixes Port Forwards were not adjusting the MSS value correctly when one side had larger than normal MTU, like AWS members. This release fixes this issue. Fixes an issue where a disabled node could take up to 24 hours to re-enable if the first attempts to pull the updated configuration failed. Disabled nodes will now check every 10 minutes. The node will now attempt to pull the configuration twice before sending the Configuration Update Failure event type. Fixes an issue causing Azure nodes to report startup errors. Fixes an issue causing the CPU and memory usage stats to be incorrect. Update the APT security packages to those available on 2025-02-24. The Data Plane panels now accurately reports the UDP tunnel status. Fixes an issue that could leave a process started in a terminal running after the terminal is closed. ","categories":"","description":"Release notes for the April 2025 Major Trustgrid Appliance release","excerpt":"Release notes for the April 2025 Major Trustgrid Appliance release","ref":"/release-notes/node/2025-04/","tags":"","title":"April 2025 Major Appliance Release Notes"},{"body":"New Hop Monitoring Options This cloud release when combined with the April 2025 major appliance release, adds the following new Hop Monitoring options in the Gateway \u003e Client panel.\nOther Improvements and Fixes Fixes an issue preventing setting the cluster heartbeat IP on Google Cloud Platform appliances. ","categories":"","description":"April 2025 Minor Cloud Release Notes","excerpt":"April 2025 Minor Cloud Release Notes","ref":"/release-notes/cloud/2025-04/","tags":"","title":"April 2025 Minor Release Notes"},{"body":"","categories":"","description":"Release notes related to the Trustgrid Node Appliance\n","excerpt":"Release notes related to the Trustgrid Node Appliance\n","ref":"/release-notes/node/","tags":"","title":"Node Appliance Release Notes"},{"body":"Other Improvements and Fixes Takes additional steps to prevent issues that lead to control plane outages in February 2025. Fixes an issue that prevented some models from saving their Gateway configuration changes. ","categories":"","description":"March 2025 Minor Cloud Release Notes","excerpt":"March 2025 Minor Cloud Release Notes","ref":"/release-notes/cloud/2025-03/","tags":"","title":"March 2025 Minor Release Notes"},{"body":"Permissions and Policies Condition Scoped Policies With this release we expand our permissions model to allow for using tags to scope the policy. This allows for more granular control of permissions, or as an alternative to specifying TGRNs in the policy.\nFor example, if you wanted to limit a group of users to only see the nodes and cluster for a specific client, you could create a policy that looks like this: Tag Scoped Policy based on ClientID tag Any cluster or node with this tag would have the permissions granted by this policy.\nGateway Configuration Changes Several changes have been made to the gateway configuration panels to improve the usability.\nThe Gateway Server “Enabled” and “Enable UDP” buttons have been replaced with dropdown menus to make it more clear that saving is required. Many fields can now be left unset. Previously, these fields might end up set based off of default values that could cause unwanted behavior. The UDP Server port now defaults to 8443 which is the most common port used. Data Plane Improvements Location and ISP in Data Plane Panel This release adds the Location and ISP information as a column in the Data Plane panel. This information is based off the public IP address the node uses to connect to the control plane, so accuracy can vary. But it can be useful for troubleshooting to determine if there is a pattern in the region or ISP of nodes experiencing data plane issues such as high latency.\nLocation and ISP columns in the Data Plane panel UDP Data Plane Visibility This release makes it easier to see if a node is enabled for UDP data plane by adding a column to the Nodes table and a new section in the Infovisor page. UDP Column option in the Nodes table UDP mode field in Infovisor Azure Cluster IP Support This cloud release, combined with the January 2025 Minor Appliance release) adds support for using a floating, local cluster IP address for Azure-based appliances. This provides an alternative method of providing highly available network connectivity when working with Azure-based appliances that behaves similarly to on-premises appliances.\nARP Ping Interface Tool This release adds an ARP ping tool to the interface tools section of the portal. This tool allows you to send an ARP request to a specific IP address on a local interface. This tool is useful for troubleshooting connectivity issues such as confirming if the interface is in the same layer 2 broadcast domain as the target IP address and confirming their is not an IP address conflict on the network.\nOther Improvements and Fixes Resolve an issue that led to an incident on February 14, 2025 that caused a large number of nodes to show as disconnected from the control plane for a short period of time. Fixes an issue that would cause some gateways to report Data Plane status as “Degraded” when clients are not connected. Data Plane status should be based solely on the connections where the current node is the initiating client and does not cover the connections where the current node is the gateway server. Changes the behavior when changing settings on the Gateway server and client panels so that each setting can be set individually. Resolves an issue with how Data Plane health status was reported for private gateways. Routes for VLAN sub-interfaces now require a next hop address to be defined. Slack alarm channels with formatting enabled now specify that the time stamp is in UTC. ","categories":"","description":"February 2025 Cloud Release Notes","excerpt":"February 2025 Cloud Release Notes","ref":"/release-notes/cloud/2025-02/","tags":"","title":"February 2025 Release Notes"},{"body":" Package Version Core Version Release 1.5.20250109-2213 20250109-221438.4c724ae n-2.21.1 Other Improvements and Fixes Fixes an issue where connections to the Trustgrid control plane could get stuck in a CLOSE_WAIT state. This could cause the node to show as disconnect despite a working data plane connection. Adds an early release feature to allow clustered Azure-based appliances to manage a floating, local cluster IP address similar to on-premises appliances. Currently there is no UI support for this feature. Contact Trustgrid support for more information. Update the APT security packages to those available on 2024-12-02. ","categories":"","description":"Release notes for the January 2025 Minor Trustgrid Appliance release","excerpt":"Release notes for the January 2025 Minor Trustgrid Appliance release","ref":"/release-notes/node/2025-01/","tags":"","title":"January 2025 Minor Appliance Release Notes"},{"body":" Guides are written to help users leverage Trustgrid in different use cases. Don’t see what you need? Let us know and we’ll add it to the list.\n","categories":"","description":"","excerpt":" Guides are written to help users leverage Trustgrid in different use …","ref":"/tutorials/","tags":"","title":"Guides"},{"body":"Upgrade Manager This release makes available the Upgrade Manager to orchestrate upgrades across large numbers of devices. The Upgrade Manager can target specific nodes and clusters based on tags and provides a single pane of glass for monitoring the upgrade process.\nUpgrade Manager also automates Cluster upgrades by starting with the standby node in the cluster, triggering a failover once it that node has completed the upgrade, and then upgrading the other member of the cluster.\nBy default, all users with the tg-builtin-admin policy will have read-only access to the Upgrade Manager. The new tg-builtin-upgrade-admin policy has been created to easily grant users permissions to run jobs in the Upgrade Manager.\nNAT Hit Counter This release, when combined with nodes running the October 2024 Trustgrid Appliance Release and later, will add a Hits button to all NATs defined on the VPN Address Translation page. When clicked, the Hits button will display:\nThe number of times the NAT has been hit (or used) since the last reset or reboot. The first (since reset) and most recent times the NAT has been hit. Provides a button to reset the hit counter for that specific NAT. Inside NAT hit counter Google Chat Channel This release add the ability to create a Google Chat (gChat) channel for notifications.\nCluster Overview Changes Update to Cluster Terminology Over the past few years we’ve been moving away from the term “master” to “active” in regards to cluster status. With this release we’ve updated the labels in the Cluster Overview table to use the new terminology.\nMake Active Button This release adds a new button to the Cluster Overview table that allows you to make a node the configured active node in the cluster. Previously this required selecting the node from the table, selecting the Actions menu and then selecting the “Set as Master” option. And there was no confirmation of this action.\nNow each row in the Cluster overview table has a new button to make the node the active node. Make Active Button And you will now be prompted before the action is taken. Make Active Prompt Update Node Config This release adds a new button a node’s tool bar called “Update Node Config.” This button will send a message to the node to pull down it’s most recent configuration. By default if multiple changes are made to a node’s configuration (or its cluster configuration) the control plane will only send the signal to pull the configuration once per minute. This is done to reduce the number of requests made by each node. The “Update Node Config” button will bypass this restriction and force the node to pull down the most recent configuration.\nBulk Change Limits Prior to this release selecting multiple nodes from the Nodes table and then performing a bulk action like Disable/Enable provided insufficient prompting that prevented the user from knowing exactly which nodes the actions would be applied. This release changes the behavior to:\nPrevent any action from being applied to more than 10 nodes at once. List the nodes that are selected for the chosen action and request confirmation. Other Fixes and Improvements node::read permissions now includes viewing Thresholds at the Node and Cluster level. Fixes an issue that prevented resource scoped users without user::read permissions from creating and viewing the API keys. Fixes an issue were nodes that are members of a cluster that has a Virtual Network attached to multiple interfaces could only see the VPN config of one of the interfaces. Fixes an issue with Container configurations that prevented removing the Command and Stop Time values. Fixes an issue preventing setting flags on newly created agent-based nodes. Reduces the number of domain update notifications generated when a node is enabled or disabled. Now only nodes that need to know the change should be updated. Fixes an issue preventing application session history from loading. This release also adds the ability to export the session and acces history to CSV. Prior to this release, if you attempted to export flow logs after changing to a different page of results the export would fail. This release fixes this issue. Introduces the tg-builtin-provisioning-admin policy Adds Alarm Filter type for the Gateway UDP Tunnel Error type. ","categories":"","description":" November 2024 cloud release","excerpt":" November 2024 cloud release","ref":"/release-notes/cloud/2024-11/","tags":"","title":"November 2024 Release Notes"},{"body":"Active Incident Triage Steps These steps should be performed as soon as possible while the incident is occurring.\nLatency issues are frequently temporary and if you do not gather this information at the time of the incident it will prevent deeper analysis. 1. Enable Hop Monitoring Requires permissions to modify the edge node config. If your user is read-only skip to Step 2.\nHop monitoring uses TCP SYN packets to continuously monitor the path between an edge node and all it’s attached gateways. Follow the steps the Enable Network Hop Monitoring to enable hop monitoring.\n2. Run MTR To Reported Gateway This step should\nNavigate to the data plane panel edge node (not the gateway) that is reporting high latency. From the list of peers click the peer gateway with which the edge node is experiencing high latency. Click the “MTR” button on the right side of the table in that row. This will open a prompt with the gateway’s IP address and port pre-populated and the protocol set to TCP. Change the following settings: Change the DNS field to either “Show IPs and Hostnames” or “Show IPs only”. Note: if the node is having DNS health issues showing host names will slow down the response from MTR. Change ping count to 30. This will give you more data points with a potential to identify the hop in the path introducing problems. Select “Use Report Mode”. This will cause the MTR to run in a silent mode, but when it completes the results stay visible in the window. Click Execute. Recommended MTR Settings When the MTR window first opens it will show only the word “Start” followed by the date and time (UTC timezone). This will stay for approximately 30-40 seconds while the data is gathered in the background. This is normal. MTR Start . After MTR completes testing the results will be displayed and the words “Session Closed” will appear. Capture this data either with a screenshot or by copying and pasting the text into a text file. MTR Results What if the MTR Results are blank? MTR and Trustgrid’s hop monitoring feature both rely on the node receiving ICMP TTL (time to live) exceeded messages from the various routers (or hops) along the path.\nIf you are seeing no responses or only the first and last hop, then it is likely a firewall in front of the node is blocking the ICMP responses. You would need to work with the site technical contact to allow these response back to the node. Allowing this traffic differs depending on the type of firewall but search for “allowing traceroute responses” or “allowing ICMP responses” to find the correct setting is usually helpful. If you are seeing responses up to a certain point and then several missing/blank hops this is because there is no requirement for all routers to respond. Public clouds like AWS and Azure do not respond once the traffic has entered their networks. 3. Check Latency to Other Gateways The Data Plane panel shows the tunnel latency to all connected peers.\nIf the reported gateway is a member of a cluster, click the other name of the other cluster member to see if it is impacted as well. It is common that the latency will be more severe on the active/master member of the cluster because it is under more load with more packets that could be impacted. If high latency is seen to both members of the cluster, then it is likely a problem with the internet path than an issue with the gateway or edge node itself. If the node is connected to other gateways in different regions, check the latency to those gateways as well. If the latency to the other gateways is also high, this indicates a problem closer to the edge node like the site ISP. 4. (Clustered Edge Nodes Only) Check Latency from Cluster Peer If the reporting edge node is a member of a cluster, check the latency from the other cluster member to the same gateway.\nNavigate to the Data Plane panel on the other member of the clusters. Repeat Step 3. to see if the other member of the cluster is impacted as well. If the latency to the other cluster member is also high, this indicates a problem closer to the edge node like the site ISP. If the latency to the other cluster member is normal, check to see if it is using a different ISP than the reporting edge node by viewing the ISP field in the Location panel. If the cluster member is using a different ISP, making the non-impacted member the active member of the cluster will likely restore normal functionality while the impacted member’s ISP issue is investigated further. 5. Run Data Plane Performance Test You can utilize the Data Plane Performance Tool to test the bandwidth and performance of the tunnel between the edge node and the gateway. This can help identify if the issue is bandwidth congestion or if it is only impacting traffic in one direction.\nNavigate to the Data Plane panel on the impacted edge node. Click the “Test Performance” button in the row with one of the impacted gateways. This tool tests sending data from the current node to the selected peer/gateway. If one of the impacted gateways is not currently the active member of its cluster this will allow for testing without concern of impacting production traffic. Start with the default value of 10 MB to send. If the test completes very quickly, increase the amount of data to send but keep in mind you are consuming bandwidth. Post Incident Triage Steps If the incident has resolve itself there will be a limit to the information that can be gathered. For example, running MTR on the impacted node will not provide any information because the node is no longer experiencing the issue. The steps below are intended to determine what information is available and set up having more information if the issue reoccurs.\nBefore starting, determine the start and end time of the incident. Be aware that the portal will display most things using your browsers local timezone, but timestamps send via alarm channels will be in UTC time. As are any timestamps in debug logs.\n1. Enable Hop Monitoring Requires permissions to modify the edge node config. If your user is read-only skip to Step 2.\nHop monitoring uses TCP SYN packets to continuously monitor the path between an edge node and all it’s attached gateways. Follow the steps the Enable Network Hop Monitoring to enable hop monitoring. Enabling after the incident will provide more data if the issue reoccurs.\nIf the impacted edge node is a member of a cluster, enable hop monitoring on the other member of the cluster as well.\n2. Use Data Plane Panel to View Latency to Gateways The Data Plane panel can be used to view the tunnel latency to all connected peers ( and hop monitoring data if enabled ) up to the past 90 days. To view data from the past:\nNavigate to the Data Plane panel on the impacted edge node. Click on one of the impacted gateway’s name to view the latency to that gateway. By default, the data for the last hour is show. Under Monitoring click Custom in the time selector. Custom date/time selector Use the time selector to select a time range that includes the incident and click Apply. It is a good idea to include 15-30 minutes before the incident started and after the incident ended. Example date/time selection process This will show the latency to the selected gateway over the selected time range. If hop monitoring was enabled, clicking any point on the graph will update to show the data collected at that time. Historical Tunnel Latency and Network Hop graphs If you select other peers/gateways, the latency to those gateways will be shown during the same time period. If the gateway is a member of a cluster, view the other member of the cluster to see if it is also impacted. Select other gateways in other data centers/regions to see if they are also impacted. Based on the data you collected consult the Latency Issue Matrix to determine the likely area of the issue.\nLatency Issue Matrix The below matrix will assume that\nEdge1 is reporting high latency to East-gw1 East-gw1 is the active member of a cluster that includes East-gw2, both in the same data center/availability zone Edge1 is also connected to West-gw1, the active member of a cluster that includes West-gw2, both in the same data center/availability zone Most VPN/Layer 4 traffic is between the East gateways and Edge1 In each column under the gateway name is what would be shown in the Data Plane panel of Edge1 during the incident (see Step 2 for how to view other times).\nEast-gw1 East-gw2 West-gw1 West-gw2 Likely Cause Consistent high latency Periodic spikes of high latency Periodic spikes of high latency Periodic spikes of high latency This indicates an issue with Edge1 or its ISP. Check for high CPU and Memory utilization on Edge1.Look at bandwidth usage, if it is plateauing at a certain level (e.g. 50Mbps) it could indicate the internet connection at the site is fully utilized or something is doing traffic shaping.Work with the local network IT contact to have them open a ticket with their ISP. Consistent high latency Periodic spikes of high latency No latency No Latency This indicates a problem with the internet path between the East gateways and Edge1. Consistent high latency No latency No Latency No latency This indicates either an issue with East-gw1 or a problem with the internet path between the East gateways and Edge1. Check for high CPU and Memory utilization on East-gw1.Look at bandwidth usage, if it is plateauing at a certain level (e.g. 50Mbps) it could indicate the internet connection at the site is fully utilized or something is doing traffic shaping. Pull debug logs from East-gw1 and Edge1 and look for errors. You could force a peer disconnect but this will disrupt traffic over the connection If Edge1 is the active member of a cluster and both members of the cluster are using the same ISP (typically using the public IPs will be the same or adjacent), the expected behavior would be that both members see the latency, but the latency will be higher and more consistent on Edge1 because it has more traffic.\nIf Edge1 is the active member of a cluster and the member use different ISPs (typically using the public IPs will be different) a few scenarios are possible:\nIf the local ISP for Edge1 is the source of the issue, you would not see any latency on the other member of the cluster. It would be recommended to promote the other member as the active member of the cluster. If the issue lies closer to the gateways internet connect, you wil likely see latency on both members of the cluster but it will be more pronounced on the active member because it has more traffic. Advanced Troubleshooting Steps The steps below can help gather more data but may require allowing additional traffic between the gateway and edge nodes.\nDetermine Path MTU with Ping The MTU is the maximum size of a packet that can be transmitted over a network. On the internet the default is 1500 bytes. If the MTU is too small on a router between the nodes packets can be fragmented, which can cause delays and packet loss. It is important to test in both directions because routing can be different in each direction.\nMake sure ICMP is allowed between the gateway and edge nodes in both directions. Verify that it is allowed by pinging each node’s public IP from the other node. Replace the xx.xx.xx.xx with the target public IP. ping xx.xx.xx.xx Copy If the edge node is being NAT’d to a public IP the site technical contact should make sure that the device hosting the public IP responds to ICMP ping messages. Run ping with flags specified to determine the MTU. Replace the xx.xx.xx.xx with the target public IP. ping -s 1472 -M do -c 1 xx.xx.xx.xx Copy The -s flag specifies the data payload size of the packet to be sent. The default value is 56 bytes. For this test we will use 1472 because that plus the IP header size of 28 bytes is 1500 bytes, the internet default. The -M do tells ping to attempt to do path MTU discovery by disabling fragmentation. the -c flag specifies the number of packets to send. This can be omitted if you think the MTU issue is intermittent and want to leave the ping running. Repeat the above step from the other node using the peers public IP. Successful Ping Path Discovery If the ping succeeds, the output will look similar to the following: MTU Ping Successful Failed Ping Path Discovery If the ping fails, the output will look similar to the following: MTU Ping Failed A few things to notice:\nThe first line displays the payload size, 1500 bytes, and then the resulting packet size of 1528 bytes after the header information is included. The size of the header can vary depending on the options used to send the packet. The ping error shows the recommended MTU size of 1500 bytes. If recommended MTU size is lower than 1500 you have a few options:\nWork with the ISP and/or local networking team to increase the MTU of the path. This involves using MTR to identify the point in the path that is rejecting the large packets. Run MTR from the same node you ran the ping from with the following options: - Protocol: ICMP - Hostname: The public IP of the node you are pinging - Ping Count: 1 (or more if you think it is intermittent) - Use Report Mode: checked - Advanced options -s 1472 - All other options at default and Execute\nYou should see at some point the packets start failing and that indicates that the hop listed is rejecting the packets or a hop before is the issue.\nChange the WAN Interface MTU Change the MTU of the WAN interface of the edge node to the lower value recommended. If the node is offline, you can also change the MTU via the console.\nThe upside of this approach is that you should be able resolve the issue immediately. The downside is a potential small decrease in throughput and that both changes will require a restart of the node service which is disruptive.\nAdjusting the MTU size of a gateway node is discouraged as this will impact all nodes connected to that gateway. FAQ What is High Tunnel Latency and what are common causes? High tunnel latency is a condition where the time it takes for data to travel between gateway and edge nodes is significantly longer than normal. This can be caused by a variety of factors, including packet loss and latency on the internet between the gateway and edge nodes, or tunnel traffic exceeding the hardware capabilities of the gateway or edge node.\nPacket loss and latency can occur on the internet due to various factors, including network congestion, inadequate bandwidth, and routing inefficiencies. When data is transmitted between a source internet source provider (ISP) and a destination ISP, the two may have different peering relationships—either direct peering, where they exchange traffic directly, or transit relationships, where one ISP pays another to carry its traffic. These relationships can influence the speed and reliability of data transfer. For instance, if there is congestion at a peering point or if the transit path is suboptimal, packets may be delayed or lost altogether, leading to higher latency and poor VPN performance.\nLatency TCP vs UDP Tunnels While both TCP and UDP traffic on the internet would be subject to the same latency issues, the way the data is transmitted and received can impact the perceived latency. Packet loss has a more significant impact on a TCP-based VPN tunnel compared to a UDP-based tunnel due to the fundamental differences in how these protocols handle data transmission.\nTCP is designed for reliability, ensuring that all packets are delivered in the correct order and without errors. When packet loss occurs in a TCP tunnel, the protocol triggers retransmission of lost packets, which can lead to increased latency and reduced overall throughput. If the application utilizing the tunnel also retransmits lost packets, the latency can be further exacerbated.\nIn contrast, UDP prioritizes speed over reliability, allowing packets to be sent without waiting for acknowledgments. This means that while UDP-based VPNs may experience some data loss, they can maintain better performance and lower latency, making them more resilient to packet loss in real-time applications provided the applications utilizing the tunnel properly manage retransmission of lost packets.\nWhy does the tunnel show latency but hop monitor data doesn’t? The biggest difference between the two data sets is that the tunnel latency is based on packets inside the tunnel mixed in with all other tunnel traffic, while the hop monitor data is based on packets outside the tunnel and does not need to be queued up with other tunnel traffic. If the tunnel is attempting to retransmit dropped packets this will add latency to the the tunnel latency data. This is not the case with the hop monitor data.\nThe other difference is that the hop monitor probes are SYN packets with no data payload. If the issue between the gateway and edge node is related to a hop having a smaller than expected MTU (maximum transmission unit) size, the small SYN packet is not going to be impacted. But the queued tunnel traffic will be impacted and delay the tunnel latency probe.\n","categories":"","description":"","excerpt":"Active Incident Triage Steps These steps should be performed as soon …","ref":"/tutorials/operations-runbook/latency-troubleshooting/","tags":"","title":"Troubleshoot High Tunnel Latency"},{"body":" Package Version Core Version Release 1.5.20241010-2172 20241010-161952.c6810b2 n-2.21.0 Force Node Health Check Refresh In the July 2024 cloud release Trustgrid exposed warnings in the portal if a node was unable to connect to its configured DNS server, the Trustgrid update repository (repo), or if SSH had been reconfigured to listen on an IP other than localhost. These health checks run automatically at the following times:\nRepo Connectivity is checked every 24 hours DNS Resolution runs hourly SSH Lockdown is checked when the node service first starts With this release, rather than waiting for the health checks to rerun and update the state of each check you can now force the node to rerun each check.\nIn the infovisor refresh buttons have been added next to each health check. Clicking this will force the node to verify if the check is healthy or nor. Infovisor with health check refresh buttons UDP Tunnels Additional Path UDP Support With this release, appliances with UDP enabled will attempt to build connections for any additional paths defined in the Gateway \u003e Client settings.\nUDP Tunnel Events and Logging New Gateway UDP Tunnel Error events have been added to show when a UDP tunnel has disconnected and re-established. After a future Cloud release the re-established event will automatically resolve the timed out alert. Example UDP event messages Additional New Event Types The following events have been added or updated:\nClustered AWS-based appliances will now send an event if they are unable to retrieve AWS credentials needed for updating AWS route table entries. The new Networking Framework Memory Management event type will alert if the appliance’s java virtual machine experience out of memory errors. This release adds new SSH Lockdown and Repo Connectivity events to give visibility on when a node transitioned between healthy and unhealthy states. Other Improvements and Fixes Addresses an issue with port forwards that could cause failures under high load. Changing the listening interface or source block on a connector no longer requires a restart to be effective. Resolves an issue that caused the active cluster member to flap between devices. This issue would present in the logs with repeated messages about Connection closed: node=\u003cpeer node\u003e,reason=Session closed locally/remotely Resolve an issue that prevented the Traffic Capture tool from working on appliances using the Ubuntu 22.04 operating system. ","categories":"","description":"Release notes for the October 2024 Major Trustgrid Appliance release","excerpt":"Release notes for the October 2024 Major Trustgrid Appliance release","ref":"/release-notes/node/2024-10/","tags":"","title":"October 2024 Major Appliance Release Notes"},{"body":"","categories":"","description":"Release notes related to the Trustgrid Node Agent\n","excerpt":"Release notes related to the Trustgrid Node Agent\n","ref":"/release-notes/agent/","tags":"","title":"Node Agent Release Notes"},{"body":" Package Version Release 0.2.20240905-2146 a-0.3.0 Disable UDP Tunnels This release introduces an option to disable UDP tunnels for agent-based nodes. This is useful for nodes that are behind a NAT or firewall that does not support UDP. Agent-based nodes will continue to have UDP enabled by default.\nOther Fixes and Improvements Resolved an issue where agents running as containers would attempt to remove IP tables rules for layer 3 VPN forwarding that did not exist. Resolved an issue where connectors running on an agent didn’t ACK packets correctly in some cases. Changed a the logging of closing a gateway connection from INFO to DEBUG to reduce noise in the logs. ","categories":"","description":"October release of the Trustgrid Agent","excerpt":"October release of the Trustgrid Agent","ref":"/release-notes/agent/2024-10/","tags":"","title":"October 2024 Agent Release Notes"},{"body":"Removal of Select All Option As part of the July backend library a “Select All” option was introduced on tables, such as the nodes table. Trustgrid has determined this option creates risks of large changes with insufficient controls to prevent mistakes so we are removing it from all tables.\n","categories":"","description":"September 2024 Second, minor cloud release","excerpt":"September 2024 Second, minor cloud release","ref":"/release-notes/cloud/2024-09-2/","tags":"","title":"September 2024 2nd Minor Release Notes"},{"body":"Data Plane Status for Gateways A recent change to the data plane panel to display disconnected peers had the unintended side-effect that appliances acting as gateways would show a Degraded status if any of their clients wasn’t connected, even if that client was offline. As this is a pretty normal state the status was confusing for users. The data plane status indicator has been changed to only count the connections the node is responsible for initiating and does not count any inbound connections.\nLayer 4 (L4) Improvements Flow logs are now displayed on both the Connector and Service nodes. Connectors on appliances now support an optional source block field to restrict access to the port. A “Copy to Clipboard” option has been added to the Actions of both the Connectors and Services tables. This will copy all the information about the selected connector or service to the clipboard to make it easier to share with others. Copying a connector to the clipboard Connectors can now be set to listen on the Bridge interface. This is useful if you want a container to be able to access a remote service via local port. Bridge interface for connectors Nodes Table Role Column This release adds a new option column called “Role” that will list if a node is configured to act as a gateway (public, private or hub) or only as an edge node client. Nodes table with Role column Node Table Fixes This release resolves several issues with the Nodes table.\nRestores the ability to sort by additional columns like Tags, Clusters, etc. The “Tag Filter” dialog no longer blocks access to the tool bar at the top of the table. Nodes running outdated versions falsely reported the new Node Health Checks as Unhealthy. This release changes this to Unknown Uptime Metric Appliances running version July 2024 version or newer will now display how long the OS has been online since the last reboot at the top of the Overview page. User MFA Reset This release adds the ability of user with the users::modify permission, such as those with the builtin-tg-access-admin policy, to reset the multi-factor authentication of users in the Trustgrid user database. This reset is logged under Operation \u003e Changes. Reset MFA prompt History Table Timestamps With this release tables in the History section such as Events, Flow Logs, and Changes now display the second field of timestamps as well as the timezone offset used to display the user’s local time. This makes it easier to see exactly what order things occurred and clarifies what is being shown when screenshots are shared with users in different time zones. History table timestamps Other Fixes and Improvements Resolves an issue where too many policies attached to a user/group prevented them from all displaying on the screen. The network interface “Disable” button has been removed on AWS, Azure and GCP nodes as this is not supported in those environments. The VPN Virtual Route Table now correctly sorts by additional columns like Path and Master. Incidents from Trustgrid’s Statuspage are now displayed at the bottom of the portal while the incident is on-going. ","categories":"","description":"September 2024 cloud release","excerpt":"September 2024 cloud release","ref":"/release-notes/cloud/2024-09/","tags":"","title":"September 2024 Release Notes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/upgrade-manager/","tags":"","title":"Upgrade Manager"},{"body":"Overview The Upgrade Manager is designed to manage upgrades for individual nodes and node clusters in bulk. It provides a user-friendly interface to plan, monitor, and execute upgrades while ensuring system stability and minimal downtime.\nKey Features Manage upgrades for individual nodes and node clusters Perform pre-upgrade health checks Monitor online status of devices Verify upgrade success Support for staged upgrades in clustered environments Planning an Upgrade To plan a new upgrade:\nNavigate to the upgrade planning interface. From the Portal, click on the “Upgrade Manager” option in the left navigation menu. Click “Create Upgrade” at the top right. You can set the following parameters: Name: Enter a name for the upgrade (e.g., “aug-2024-upgrade”) Include Tags: (Optional) Specify tags to include only specific devices Exclude Tags: (Optional) Specify tags to exclude certain devices Be sure to save changes before starting an upgrade. Special Behaviors Require approval before failover: When checked, this option requires manual approval before proceeding with failovers during the upgrade process. This allows for additional control and verification steps. Nodes The Nodes section displays a list of devices that are candidates for the upgrade. Each node entry includes:\nName: The identifier for the node Tags: Associated tags that can be used for filtering or grouping Version: The current version of the node Clusters The Clusters section shows groupings of nodes that operate together. This is particularly important for managing upgrades in high-availability setups. The table includes:\nName: The cluster identifier Tags: Associated tags for the cluster Health: The current health status of the cluster Planning an upgrade Upgrade Process Initiation Planning: Create a new upgrade plan, specifying version and any tag-based inclusions or exclusions. Execution Workflow Creation: The system automatically creates workflows for each device or cluster that needs to be upgraded. Prechecks: The first step for each workflow is to validate the node or cluster can be upgraded. For individual nodes, the node must be active and online. For clustered nodes, the cluster must have exactly one active member and the cluster must be healthy. Dry Run: (Optional) A dry run can be performed to simulate the upgrade process without actually upgrading the devices. Health Checks: Every minute, each device is checked for health and readiness to move to the next state in the workflow. State Transitions: Devices progress through various states (e.g., NEW, READY, WORKING, DONE) as the upgrade proceeds. Clustered Upgrades: For clustered nodes, the passive member is upgraded first. After successfully upgrading, the passive member claims the active role. The new passive member (previously active) is then upgraded. Monitoring: The system monitors the online status of devices throughout the process. Verification: Post-upgrade, the system checks device shadows to confirm successful version updates. A just-started upgrade Workflow Management The Upgrade Manager provides a detailed view of the upgrade process through its Workflows and Timeline sections.\nWorkflows Table The Workflows table displays the current status of each node or cluster in the upgrade process:\nName: Identifier of the node or cluster Tags: Associated tags for filtering and categorization State: Current state of the workflow (e.g., NEW, READY, WORKING, DONE, SKIPPED) Note: Additional information, such as reasons for skipping Actions: Icons for making notes (pencil icon) or skipping the workflow (x icon) Workflow States NEW: Initial state for a newly created workflow READY: The device is ready for the next step in the upgrade process WORKING: The upgrade is actively being applied to the device DONE: The upgrade has been successfully completed SKIPPED: The workflow has been manually skipped or automatically skipped due to conditions (e.g., “cluster has 0 members”) An upgrade working through its workflows Timeline The Timeline section provides a detailed, chronological view of events during the upgrade process. Each entry in the Timeline represents a step or action taken during the upgrade workflow.\nTimeline Entry Format Each entry in the Timeline contains:\nTimestamp: Date and time of the event (e.g., “8/29/2024, 2:48:51 PM”) Entity: The specific node or cluster involved (e.g., “node: node1-profiled (e04f0a95-cf9f-46ca-b5fa-df8a00b0b862)”) Message: Description of the action or state change Common Timeline Messages Workflow Initiation: “creating workflows”: Indicates the start of the upgrade process. Node Transitions: “transition to upgrading”: The node is beginning the upgrade process. “transition to ready”: The node is prepared for the next step in the upgrade. “transition to done: already up to date”: The node was found to already be on the target version. “transition to skipped: offline nodes can’t be upgraded”: The node was offline and couldn’t be upgraded. Cluster Transitions: “transition to skipped: cluster has 0 members”: The cluster was skipped due to having no active members. “transition to skipped: cluster has 1 members”: A cluster with only one member was skipped. “transition to skipped: cluster is offline”: The entire cluster was offline and couldn’t be upgraded. “transition to skipped: cluster upgrade skipped”: The cluster upgrade was skipped for an unspecified reason. Interpreting Timeline Entries Sequence of Events: The Timeline shows the progression of the upgrade across all nodes and clusters, allowing users to track the order of operations. Upgrade Status: Users can quickly identify which nodes or clusters have successfully upgraded, which were skipped, and why. Using the Timeline Real-time Monitoring: As the upgrade progresses, new entries are added to the Timeline, allowing for real-time monitoring of the process. Post-upgrade Analysis: After the upgrade is complete, the Timeline serves as a comprehensive log for review and analysis. Filtering: Use the search functionality to filter Timeline entries for specific nodes, clusters, or message types. Understanding the Timeline entries is crucial for effectively managing and troubleshooting the upgrade process. It provides insights into the status of each node and cluster, helping administrators identify and address any issues that arise during the upgrade.\nCompleting an Upgrade When all nodes have been upgraded or skipped, the upgrade process is considered complete. The timeline and workflows for the upgraded devices can be viewed for verification and auditing purposes.\nAn upgrade that has completed successfully A completed upgrade can be exported to CSV for record-keeping and further analysis.\nExporting upgrade details to CSV Additional Important Notes Upgrade Limitations Single Active Upgrade: Only one upgrade can be active at a time. This ensures system stability and prevents conflicts between multiple upgrade processes. Upgrade Timeout: If a node does not transition out of the upgrade state within 90 minutes, its workflow will transition to failure. Dry Runs Dry runs can be performed from an upgrade in the planning state. Purpose: To run prechecks and show which nodes would match the specified tags at that moment. Behavior: Dry runs do not actually upgrade any nodes or clusters. Use Case: Ideal for validating upgrade plans and identifying potential issues before initiating a real upgrade. Special Behaviors Require Approval Before Failover When this option is selected during upgrade planning, the system will not automatically failover any cluster members. Failovers will only occur after explicit user approval through the UI. This feature allows for greater control and manual verification during critical stages of the upgrade process. Manual Updates Nodes tagged with manualupdate as true will not be upgraded and will transition to the skipped state immediately. Best Practices Always Perform Dry Runs: Before initiating an actual upgrade, use the dry run feature to validate your upgrade plan and identify any potential issues. Use Tags Effectively: Carefully consider your include and exclude tags to target the correct set of nodes and clusters for your upgrade. Monitor the Timeline: Keep a close eye on the Timeline during the upgrade process to quickly identify and address any issues. Use the “Require Approval” Feature for Critical Systems: For high-priority or sensitive clusters, use the require-approval feature to maintain manual control over the failover process. Troubleshooting While the Upgrade Manager tool itself has limited troubleshooting capabilities, here are some common issues you might encounter and initial steps to address them:\nOffline Nodes: If the Timeline shows nodes are being skipped due to being offline, check the network connectivity and status of these nodes. If the connection can be restored, consider retrying the upgrade. Empty Clusters: For clusters showing 0 members, verify the cluster configuration and ensure member nodes are properly assigned. Upgrade Failures: If nodes fail to upgrade, check the specific error messages in the Timeline and verify that the target version is compatible with the node’s current configuration. Verifying Repo connectivity and DNS are a good first step. Stuck Workflows: If a workflow seems stuck in a particular state, you may need to manually investigate the node or cluster status outside of this tool. ","categories":"","description":"","excerpt":"Overview The Upgrade Manager is designed to manage upgrades for …","ref":"/docs/upgrade-manager/","tags":["upgrade manager"],"title":"Upgrade Manager"},{"body":" Package Version Core Version Release 1.5.20240719-2112 20240719-202719.9cf7134 n-2.20.0 Configuration Retrieval Improvements Appliances retrieve their configuration from the control plane services. Before this release, it was not obvious if a node was unable to pull down its configuration which could lead to unexpected behavior. Two improvements have been made:\nA new event called Configuration Update Failure has been created that the appliance will send if it is unable to connect to the configuration control plane API endpoint. Example Configuration Update Failure event Appliances attempt to pull the latest configuration at startup. With previous versions, the appliance would attempt this multiple times before continuing the startup process. It was discovered that in some cases, such as if the connection timed out rather than being immediately rejected, this would cause the startup process to take more than 15 minutes. This release changes the flow so the node will attempt once and if that fails it will startup with the local configuration and continue attempting the retrieval in the background. Cluster Failover Improvements During failover between cluster members, the node will now send reset packets (RST) to the local IPs of any active TCP connections as part of the failover process. This should make it faster for applications to recognize the connection is no longer valid and a new connection is needed.\nConsole Improvements The console Network Tools Shell now allows users to run tcpdump to view traffic on the node. The Force Upgrade process will now force the user to log back into the console. This ensures any future actions from the console utilize the upgraded code. Other Improvements and Fixes Resolves an issue where containers reported their running status incorrectly when Enabled and Stopped Nodes will no longer try to connect to gateways once they begin their shutdown/restart process. Previously this caused error messages in the logs. Resolves an issue on clustered nodes that led to Netplan error messages in the logs during the shutdown process. ","categories":"","description":"Release notes for the July 2024 Major Trustgrid Appliance release","excerpt":"Release notes for the July 2024 Major Trustgrid Appliance release","ref":"/release-notes/node/2024-07-2/","tags":"","title":"July 2024 Major Appliance Release Notes"},{"body":"Portal Backend Library Update With this release, we are updating the React library used in the Portal to a more recent version. This change should be mostly invisible to users there are a few notable improvements including:\nResizable columns: In most tables including the Nodes and Flow Logs tables. This will make it easier to read the data in the tables. Notifications are improved: Node actions show in-progress status and node alerts appear as stackable bottom-right alerts expanding on hover. Faster page rendering. Bulk Upgrade Improvement Previously if you selected multiple nodes from the Nodes table and used the Actions\u003eUpgrade option the confirmation dialog didn’t include the actual names of the selected nodes. Now each selected node is listed prior to confirmation. List of nodes to be upgraded Threshold Alert Improvements This release will change alert resolution messages to include the new value of the threshold. Previously the message would only include the old value. E.g. if CPU utilization was over 90% but dropped back to 55% that new value will be included in the event message.\nJVM Garbage Collection Action There is a new button in the Advanced \u003e JVM Memory panel that will force the JVM to clean up memory and execute garbage collection. This is useful if you are seeing memory issues and want to force the JVM to clean up memory.\nNode Deletion Event This release introduces a new event type generated whenever a node is deleted. Deletions were always tracked as part of Changes but this new event type allows for an alarm filter to be configured to alert a channel when a deletion occurs.\nImproved NAT Validation NAT validation previously allowed invalid CIDR such as 10.0.0.8/8. This release will now prevent invalid CIDRs from being saved.\nStatus Page Notification Banner The status notification banner for maintenance and incidents has been moved from a pop-up in the bottom right to a banner at the bottom of the screen. This will make it a bit less intrusive when working within the portal. Node Health Check Visibility Node information about SSH connectivity, DNS access, and repo connectivity are now surfaced in the Portal, both in the nodes table and on each node’s overview page.\nSSH Lockdown - When disabled, the node is listening for SSH on an external interface. DNS Resolution - When unhealthy, the node cannot resolve DNS names. This can prevent things like control plane failovers from working correctly. Repo Connectivity - When disconnected, the node is unable to fetch software updates from Trustgrid. Other Fixes and Improvements Flow log exports include TCP Flags Removing a VLAN sub-interface no longer requires saving after confirmation VRF Traffic Rules now allow for selecting Public or Private covering the respective address spaces ","categories":"","description":"July 2024 cloud release introducing Alert Center","excerpt":"July 2024 cloud release introducing Alert Center","ref":"/release-notes/cloud/2024-07/","tags":"","title":"July 2024 Release Notes"},{"body":" Package Version Release 0.2.20240709-2101 a-0.2.1 Certificate Expiration This release resolves an issue with an expired client certificate that can cause connectivity issues. It also takes steps to prevent future occurrences.\n","categories":"","description":"July release of the Trustgrid Agent","excerpt":"July release of the Trustgrid Agent","ref":"/release-notes/agent/2024-07/","tags":"","title":"July 2024 Agent Release Notes"},{"body":" Package Version Core Version Release 1.5.20240704-2096 20240704-010918.2.b2a86bf n-2.19.3 Dynamic Routing Issue A recent release broke the ability of a node to announce a VPN Dynamic route to a peer. This release resolves that issue.\n","categories":"","description":"Release notes for the July 2024 Minor Trustgrid Appliance release","excerpt":"Release notes for the July 2024 Minor Trustgrid Appliance release","ref":"/release-notes/node/2024-07/","tags":"","title":"July 2024 Minor Appliance Release Notes"},{"body":" Package Version Release 0.2.20240618-2083 a-0.2.0 Display Available Resource Statistics The agent has previously reported the percent utilization of CPU, memory, and disk space. With this release, we also report the total available resources to provide more context to those statistics. This information includes:\nThe number of CPU cores The total amount of memory The total amount of disk space This information is displayed in the Host Performance graph on the Overview page.\nHeader to the Host Performance graph showing the total available resources Other Resolved Issues: Layer 4 Connector rate limiting now works as expected The Data Plane status indicator now reports the correct count and state of peers Prevents the debug log service from being called multiple times which causes issues The agent will now adjust the iptables rules it creates if the host IP address changes ","categories":"","description":" release of the Trustgrid Agent","excerpt":" release of the Trustgrid Agent","ref":"/release-notes/agent/2024-06/","tags":"","title":"June 2024 Agent Release Notes"},{"body":" Package Version Core Version Release 1.5.20240514-2064 20240514-213500.a967cd2 n-2.19.2 Issues Resolved Flow logs related to port forwards were not showing on the receiving device An issue was preventing some security packages from being updated Updated the AWS library being utilized in the AWS dependency package ","categories":"","description":"Release notes for the June 2024 Minor Trustgrid Appliance release","excerpt":"Release notes for the June 2024 Minor Trustgrid Appliance release","ref":"/release-notes/node/2024-06/","tags":"","title":"June 2024 Minor Appliance Release Notes"},{"body":"Issues Resolved Nodes or Clusters with upper case letters were impacted by a number of UI bugs that prevented: Viewing the VPN configuration Creating modifying routes with upper case named nodes/clusters as the destination ","categories":"","description":"May 2024 Second, Minor cloud release","excerpt":"May 2024 Second, Minor cloud release","ref":"/release-notes/cloud/2024-05-2/","tags":"","title":"May 2024 2nd Minor Release Notes"},{"body":"Introducing Alert Center A new Alert Center has been added to the node page to centralize alert messages and simplify resolving multiple alerts. This removes the alerts from the Infovisor menu and makes resolving multiple alerts easier. Example alert center with 3 open alerts Other Improvements and Fixes Further improvements in flow log query performance for faster results and resolved an issue that caused exports to not be complete. Detaching Policies now prompts for confirmation. Renaming nodes now forces all characters to be lower-case. Lower-case has been enforced on creation but this wasn’t previously enforced on rename. ","categories":"","description":"May 2024 cloud release introducing Alert Center","excerpt":"May 2024 cloud release introducing Alert Center","ref":"/release-notes/cloud/2024-05/","tags":"","title":"May 2024 Release Notes"},{"body":" Package Version Core Version Release 1.5.20240422-2039 20240422-165737.3d6b62c n-2.19.1 Abnormal Disconnect Messages limited to Clients Before this release, both the appliances that are acting as the gateway server and the edge node client would send abnormal disconnect events. This change limits abnormal disconnect messages to only be sent from the client to avoid excessive alert notifications on the gateway server.\nVPN Communication with Out-of-date Peers A recently release version of the appliance introduced an unexpected change that caused out-of-date clients, running versions from early 2021 or older, to receive VPN packets they could not process. This release resolves this issue to restore backwards compatibility. It is still highly recommended devices be upgraded to the latest release on a regular basis.\nOther Fixes and Changes The reboot service will not respond allowing portal notification if the request fails. Resolves an issue that prevented the Trustgrid SNMP OID from providing VPN stats if attached to a VLAN interface. Fixes an issue that sometimes causes client peers to be removed from a gateway’s data plane panel table on disconnect and not be added back when they reconnect. Resolves an issue related to VPN traffic to agent-based nodes running in a container. Resolves an issue that caused an error in the logs for some DNS requests generated by containers running on the appliance. ","categories":"","description":"Release notes for the April 2024 Minor Trustgrid Appliance release","excerpt":"Release notes for the April 2024 Minor Trustgrid Appliance release","ref":"/release-notes/node/2024-04/","tags":"","title":"April 2024 Minor Appliance Release Notes"},{"body":"Portal Notification Improvements This release makes several changes to how a portal user is notified of new events and commands (such as Restart and Reboot) related to the node being viewed. The toast pop-up notifications have a new look as shown below: Example notifications of a restart request and the resulting events The notifications will automatically close or can be dismissed by clicking the X at the top corner.\nThis release also will notify if a Restart request fails to complete successfully by showing a Failed status toast and a message in the center of the screen. A future node appliance release will enable the same for Reboot requests.\nAssign Policies via Groups Historically policies had to be assigned to specific users. This release introduces the ability to assign policies to groups. Policies assigned to a group will be inherited by all users in that group. This simplifies managing permissions when dealing with large numbers of users.\nUser Account Management Improvement We’ve added a Security menu option for users to manage their own account details like password and MFA settings. This link does not apply to users associated with an external Identity Provider (IdP). Security menu option Other Issues and Improvements Disconnected peers in the Data Plane panel now show as a red X icon instead of a red circle. Resolve an issue with adding cluster members. Prior to this release, if you select “Yes” to the prompt about configuring the heartbeat settings the portal failed to configure those settings. This release resolves that failure. Resolves an issue that caused flow log exports to not match the current filtered view. Resolves an issue where odd characters appeared in terminal windows for users running Windows-based operating systems. Resolves an issue that prevented deleting users associated with multiple IDPs ","categories":"","description":"March 2024 cloud release","excerpt":"March 2024 cloud release","ref":"/release-notes/cloud/2024-03/","tags":"","title":"March 2024 Release Notes"},{"body":" Package Version Core Version Release 1.5.20240306-1999 20240306-161006.62ba5a5 n-2.19.0 Dynamic Access Policy Evaluation Previously Access Policies were only evaluated at the time a flow was created. With this release, access policies will be re-evaluated in realtime for active flows. This allows dynamically changing policies to immediately take effect without requiring existing flows to timeout or reset.\nSystem Resources Overview Appliances running this release will now share with the control plane the number of CPU cores, total system memory (RAM), and total disk size. This information will be displayed on the Overview graph. This will provide additional context to the percentage utilization statistics the node provides in the graph. BGP Status Tool Improvement With this release nodes running BGP will now report rejected routes when a peer advertises a route that doesn’t match the import policy. This makes it easier to determine if a route is not being advertised by the peer or if the import policy is misconfigured.\nGateway Path Improvements This release allows for disabling additional gateway paths rather than requiring them to be completely removed. It also resolves an issue where the Ping and Test Performance tools on the Data Plane panel would not utilize the path selected for the test.\nOther Fixes and Changes Resolves an issue with Wireguard ZTNA access not releasing ephemeral ports properly. Resolves an issue with the Virtual Sniff tool not showing Wireguard ZTNA traffic. Resolves an issue where VPN attachments to VLANs were not completely removed without a restart. The Trustgrid service will no longer bring up interfaces that are not enabled and configured. The data plane status SNMP OID .2.4.0 now reflects a degraded status if some but not all of the data plane peers are connected. It also now factors in additional gateway paths. ","categories":"","description":"Release notes for the March 2024 Trustgrid Appliance release focused","excerpt":"Release notes for the March 2024 Trustgrid Appliance release focused","ref":"/release-notes/node/2024-03/","tags":"","title":"March 2024 Appliance Release Notes"},{"body":" Package Version Release 0.2.20240220-1987 a-0.1.0 This is the initial release of the agent-based Trustgrid node software.\nProduction Features include: Support for Ubuntu 22.04 Basic agent VPN functionality Layer-4(L4) Proxy support with services and connectors Beta Support: Running the agent in Red Hat Enterprise Linux 9 and in containers like Docker/k8s ","categories":"","description":"Initial production release of the Trustgrid Agent","excerpt":"Initial production release of the Trustgrid Agent","ref":"/release-notes/agent/2024-02/","tags":"","title":"February 2024 Agent Release Notes"},{"body":" Package Version Core Version Release 1.5.20240203-1968 20240203-071412.8f765f6 n-2.18.0 Removal of Local UI System The local UI functionality allowed users with direct physical access to an appliance network port to connect to a lightweight web server on the appliance to change the WAN interface IP and see the connectivity status. Several years ago, this solution was augmented with the Console Utility which has proved easier to use and has been expanded to provide much more functionality. The local UI has now been removed to simplify the appliance and focus efforts on the Console Utility.\nVPN Sniff Improvements This release improves the Virtual Network Sniff tool to allow more flexibility matching based on ports. We now support port matching based on:\nequal (=) not equal (!=) to exclude traffic for the specified port greater than (\u003e) and less than (\u003c) a port range (\u003c\u003e) which will show all traffic with ports between the two values Agent Support Gateways running this version will be the first to support the new lightweight Trustgrid agent-based nodes. More details will be announced once the agent has been officially released.\nOther Improvements The JVM Heap metric is now exposed via the Trustgrid SNMP OID The dig and nslookup commands are now available from the Console Network Tools Shell Remote Console Registration no longer forces upgrading to the latest version. This makes the process of registration quicker, though it is still recommended to upgrade to the latest version after the node is online. Other Fixes Resolves where a null pointer exception in the code for tracking peer tunnel latency could cause a memory leak that would eventually lead to appliance instability and outage. If a BGP server received a route removal update, it would remove the OS route but sometimes not update the BGP table. Then if the same route was added back, the BGP server would fail to recreate the OS route. This release resolves this issue. Resolves an issue where traffic egressing a Virtual Network would not evaluate the specificity of interface routes when determining the next hop. For example, if you had two routes (172.16.22.0/24 and 172.16.22.100/32) with different next hops, the more specific /32 route next hop was not utilized. Resolves an issue with Access Policies using the reject action. The reject response (e.g. RESET for TCP) generated had the source and destination IPs transposed. This release fixes the source/destination IP placement in reject responses. Changed the default JVM allocation for Lanner NCA-1210, NCA-1513, NCA-1515 and NCA-1010 from 3G to 2G. This only impacts newly registered nodes. ","categories":"","description":"Release notes for the February 2024 Trustgrid Appliance release focused on support for agents","excerpt":"Release notes for the February 2024 Trustgrid Appliance release …","ref":"/release-notes/node/2024-02/","tags":"","title":"February 2024 Appliance Release Notes"},{"body":"Flow Log Performance Improvements This release further increases the performance of flow log search using our new database.\nOther Improvements The MTR interface in the portal now supports selecting a source IP from your interface and cluster IPs. The Reboot and Restart buttons in the portal will now be disabled if a node is offline. This is to make clear you cannot perform these actions on an offline node. Other Fixes Resolves issue preventing adding Azure AD as an identity provider. Resolved an issue that could cause Order-based alerts not to be sent to configured channels. Adds input validation for AWS and Azure Route Table identifiers. Debug Logs tool now prevents being triggered twice and now supports viewing greater than 20 historic log archives. ","categories":"","description":"February 2024 Cloud Release - Minor improvements and fixes","excerpt":"February 2024 Cloud Release - Minor improvements and fixes","ref":"/release-notes/cloud/2024-02/","tags":"","title":"February 2024 Release Notes - Minor"},{"body":"Default Authentication Provider Change Trustgrid has previously utilized Auth0 as the authentication provider for customers who do not use a custom identity provider (IdP). With this release, Trustgrid has migrated to utilizing an internally managed authentication service to provide more control and stability.\nThis change will have no impact on customers using their own Identity Providers (IdPs) for portal authentication User Migration Process As part of this process users will be prompted to migrate their accounts from the previous Auth0 provider to the new internally managed authentication service. This will involve:\nWhen existing users login to the portal they will be receive a prompt, like below, to recreate their account in the new system. Account migration prompt The users will then be prompted to provide their first and last name, and a new password. The email address will be pre-filled. Prompt for password and additional details A verification email will then be sent to the invited user’s email address. They will need to click the link in the email to verify their email and complete registration. After verifying their email address the user will be prompted to configure Multi-Factor Authentication (MFA). Trustgrid recommends using a one-time password MFA such as Authy or Google Authenticator. Scan the QR code with your app. Enter the passcode and click the Submit button. The user is returned to the login screen. Login with the newly created email, password, and MFA code. You will then be redirected back to the Trustgrid portal. If you are not automatically redirected click the Portal link in the top right. Flow Logs Improvements Flow Log Performance With this release, Trustgrid has changed out the backend system used for storage and querying of flow logs. This new system provides significant performance improvements when viewing and exporting flow logs for nodes. While the initial default searches will sometimes take a few seconds longer, advanced searches are significantly faster than before. Additionally, this change will enable future improvements for better reporting, analysis and visualization.\nFlow Log Export TCP Flags Prior to this release flow log TCP flags were represented in an aggregate hexadecimal number which required conversion to be useful. This release changes the export process to produce plain text values such as SYN, ACK, RST, FIN, etc. making analysis of TCP flags in exported logs much easier.\nOther Flow Log Table Improvements Start and Stop times now display the seconds in the portal Sent and Received Bytes fields now include commas between thousands for easier reading Columns resize and wrap as needed to prevent cutting off text Portal Improvements Favorite Shortcuts A new favorites feature has been added to the portal navigation menu. Users can now favorite pages they access frequently for quicker access.\nPages are added to favorites by:\nSearching in the search bar at the top of the portal for a node, cluster, or page (such as Virtual Network) that is frequently accessed. Click on the star icon to the right. Example of adding a favorite . A link to the page will now appear at the top right of the portal no matter where you navigate. Example of favorite link in menu Removing a favorite page is the same process but unselecting the star icon instead.\nRemoval of the Dashboard page Based on feedback from users the Dashboard page has been removed and users now land on the Nodes table on login. You can also configure a custom landing page for users if desired\nAdvanced Node Options A new Advanced Options section has been added to nodes allowing the configuration of additional options like:\nJVM Memory settings Network flow timeout and time to live (TTL) and ARP intervals Clone Policy Option To make it easier to duplicate existing policies there is now a copy button to the far right of each policy in the Policies page. Clicking this button will create a duplicate of the policy that can be named and edited as desired. Other Issues Resolved Resolves an issue causing the Gateway Clients page to load as a blank white page. Resolves an issue that caused some statistics on the Node Overview graphs to double the real value. This caused a spike in the graphs which was misleading. Resolves an issue with some of the “breadcrumb” links at the top of the page not working as expected. Prevents external API dependencies, such as our status page, from delaying portal pages from loading. ","categories":"","description":"January 2024 cloud release with Flow Log and Portal Improvements","excerpt":"January 2024 cloud release with Flow Log and Portal Improvements","ref":"/release-notes/cloud/january-2024/","tags":"","title":"January 2024 Release Notes"},{"body":" Package Version Core Version Release 1.5.20231206-1914 20231206-183238.65d2bde n-2.17.3 Disable UDP Rekeying A customer had a misconfiguration that led to the UDP rekeying messages being lost. This compounded the performance impact as the UDP tunnels had to be rebuilt frequently.\nThis release adds the ability for Trustgrid support to disable UDP rekeying on a gateway if needed. Trustgrid will make the UDP rekeying process more resilient and better able to handle lost key exchanges in the future.\n","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20231206-1914 …","ref":"/release-notes/node/dec-2023-minor/","tags":"","title":"December 2023 Appliance Minor Release Notes"},{"body":"This minor release fixes the following issues:\nIssues Fixed Fixes an issue that caused virtual network access policies to fail to respect configured line numbers. ","categories":"","description":"Minor release to resolve issues","excerpt":"Minor release to resolve issues","ref":"/release-notes/cloud/november-2023-3/","tags":"","title":"November 2023 Third Release Notes"},{"body":" Package Version Core Version Release 1.5.20231122-1901 20231122-215335.d942235 n-2.17.2 Resolved Issues Fixes an issue introduced in the October 2023 release that caused the end time of flow logs to be incorrect Fixes an issue that prevented registering nodes in newer AWS regions ","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20231122-1901 …","ref":"/release-notes/node/nov-2023-minor/","tags":"","title":"November 2023 Appliance Minor Release Notes"},{"body":"This minor release fixes the following issue:\nIssues Fixed A function was deprecated in the last release as it was believed to be no longer needed but it was discovered that some methods of registration, such as the AWS CloudFormation template, still relied on it. This release removes the deprecation and restores the function. ","categories":"","description":"Minor release to resolve issue","excerpt":"Minor release to resolve issue","ref":"/release-notes/cloud/november-2023-2/","tags":"","title":"November 2023 Second Release Notes"},{"body":"Statistics Improvements Long Term Statistics Starting with this release the Overview graphs for nodes running the July 2023 release or newer will display 1 week and 1 month statistic views. Previously only 24 hours was visible in the portal. This allows viewing historical usage trends over longer periods of time directly from the node detail page.\n1 week stats are aggregated into hourly data points 1 months stats are aggregated into 6 hour data points JVM Heap Metrics A new section called Metrics with a new statistic called JVM Heap to help make clear if the load on a node requires more memory than is currently allocated to the node process.\nRemote Registration The October 2023 node release introduced a new remote registration feature to allow nodes to be registered directly from the console. At the time this was a preview feature that required Trustgrid support to grant users the ability to complete the portal activation process.\nWith this release this permission can now be granted via policies by granting the nodes::remote-activation permission. This permission was also added to the tg-builtin-admin policy.\nCopy NATs Button It is common to need to share the information in the VPN \u003e Address Translation panel with people that do not have access to the Trustgrid portal. With this release two buttons have been added to “Copy outside NATs” and “Copy inside NATs” that will copy the respective NAT rules to the clipboard in comma seperated (CSV) format that can be easily shared directly or imported into a spreadsheet.\nExample CSV output:\nVirtual CIDR,Local CIDR,Description 10.210.200.0/24,10.0.2.0/24, Gateway Panel Redesign The System \u003e Gateway panel has been redesigned to separate server and client settings and make it more clear which settings apply to each role.\nRequest Support We have added a way to request support directly from the portal. This eliminates confusion about our support email address (it is not .com) and allows you to list the actual impacted nodes or clusters.\nNavigate to the Support\" and fill out the Support Request section with the relevant information. We will respond as quickly as possible based on the urgency selected and established SLAs for your organization.\nImproved Alarm Filter Flexibility This release adds a new Cel Expression field that allow for matching more complex conditions when filtering alarms. This gives greater flexibility to filter by multiple fields, use logical operators, and wild cards.\nOther Fixes and Improvements Added the ability to adjust interface MTU via the Trustgrid portal Interfaces Resolved an issue where the S3 Bucket Policy on the Operations \u003e Flow Logs table was listing the incorrect ARN Restored the ability to list the virtual management IP as a column on the Nodes table Fixed an issue that set all Host Ports to 0 (zero) when a container definition was imported Resolved an issue causing VPN Flow stats to sometimes not accurately display active vs new flows ","categories":"","description":"November release focused on various UI improvements","excerpt":"November release focused on various UI improvements","ref":"/release-notes/cloud/november-2023/","tags":"","title":"November 2023 Release Notes"},{"body":" Package Version Core Version Release 1.5.20231017-1855 20231017-165331.5772aac n-2.17.1 Resolved Issues Fixed an issue where the appliance would stop responding to SNMP traffic on the virtual management IP if virtual network port forwards were configured. ","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20231017-1855 …","ref":"/release-notes/node/oct-2023-1-minor/","tags":"","title":"October 2023 Appliance Second Release Notes"},{"body":" Package Version Core Version Release 1.5.20231003-1842 20231003-145438.e8103a2 n-2.17.0 Support for running Ubuntu 22.04 LTS This release adds support for running the Trustgrid node appliance on Ubuntu 22.04 LTS for new deployments on AWS, Azure and vSphere. The 18.04 appliances will continue to be supported and security updates made available via the Trustgrid repository.\nThere are no plans to support upgrading OS on deployed devices at this time due to the risks involved. (Preview Feature) Node Registration from the Trustgrid Console This release includes a new feature that allows you to register a node from the Trustgrid console. This will allow a Trustgrid node running the a standard image to be registered with a Trustgrid account without needing to share a complete license token.\nThe high-level process is:\nA user with console access to a Trustgrid node logs in and initiates the registration process. This triggers a process that generates unique certificates for the node and generates a short activation code. The node will then begin checking with the Trustgrid control plane to see if it has been activated. This code can then be shared with a user with access to the Trustgrid portal. That user can then enter the code in the Trustgrid portal via the Activate Node action. After entering the code they are prompted to provide a name for the node and click License Node. When the node detects its code has been activated it finalizes registration and then reboots. The node is then available for use and configuration. This release also allows the user at the console to deregister a node. This will remove the node from the Trustgrid account and deactivate the license.\nThis feature is currently in preview and requires Trustgrid support to enable the feature for specific users. Other Trustgrid Console Improvements The ability to run traceroute, mtr, ip, curl, openssl from the Troubleshooting \u003e Network Tools Shell The ability to modify an interface’s MTU settings from the Advanced Network Configuration New Tool for Monitoring Connectors This release includes a new service that will allow you to see active L4 Connector sessions. This gives visibility into the active usage of any connector.\nOther Improvements and Fixes Audit messages for actions related to containers will now include the container name for improved visibility. IPSEC Tunnels will now display their up/down status on the Tunnels page for easier monitoring. Resolves an issue preventing AWS nodes from detecting their region correctly if they were set to require IMDSv2. Resolved issues that lead to false events for “packet(s) too large for UDP” and “Interface Down” notices during restart/reboot. Resolved an issue impacting proxy ARP responses on VLAN subinterfaces for outside NAT. ","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20231003-1842 …","ref":"/release-notes/node/oct-2023/","tags":"","title":"October 2023 Appliance Release Notes"},{"body":" Package Version Core Version Release 1.5.20230824-1797 20230824-150008.3c2d422 n-2.16.2 Update Fix This minor release resolves several issues:\nFixed an issue where client devices could experience increased CPU utilization if their peer gateways were offline or unreachable. Resolved issues with ARP on VLAN interface cluster IPs that could cause both active and standby members to respond to ARP requests. This prevented proper failover behavior. Resolved SNMP issues for VMware VM8 nodes that didn’t have all 8 virtual network interfaces attached to the virtual machine. ","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20230824-1797 …","ref":"/release-notes/node/august-2023-2-minor/","tags":"","title":"August 2023 Second Appliance Release Notes"},{"body":"Cluster Site Health Improvements Since introducing our cluster site health state feature there have been several instances where the state was being reported incorrectly. This release has taken steps to prevent that and has also introduced a new tool to force validating the health state in the event the state does appear incorrect. Validate Health action Data Plane Panel Improvements This release includes two improvements to the Data Plane panel:\nThe protocol field which used to only display either TCP or TCP/UDP is now called Ports and it lists the port in use for each protocol. Links have been added to the far right column for MTR and Trace Route. When used these will populate the appropriate fields in each tool to do a Trace Route or MTR to a gateway peer on the TCP port in use. This makes it easier to troubleshoot connectivity issues. Data Plane panel with ports and Trace Route/MTR links Other Improvements Nodes now display their operating system (OS) version information in the infovisor and it can also be added as a column to the Nodes table We now display the physical interface names assigned by the OS on the interfaces panel. This name is sometimes needed when running tools such as the Sniff Traffic. It is now possibly for customers to generate and download Debug Logs from a Trustgrid node. This can be handy when working with Trustgrid support to troubleshoot issues. Users can be added to one or more groups when viewing the user. Previously you had to navigate to each group and add the user there. You can now select multiple protocols, IPs or ports when using the Sniff Virtual Traffic VPN tool. Alarm Filter Tag Matches can now be set to Any or All. Any would cover a scenario where you want to match say Environment=Prod OR Environment=Test. All would cover if you wanted a filter to match something like Environment=Prod AND Region=EAST ","categories":"","description":"August Release focusing on general improvements and fixes","excerpt":"August Release focusing on general improvements and fixes","ref":"/release-notes/cloud/august-2023/","tags":"","title":"August 2023 Release Notes"},{"body":" Get help with Trustgrid products and services.\n","categories":"","description":"","excerpt":" Get help with Trustgrid products and services.\n","ref":"/help-center/","tags":"","title":"Help Center"},{"body":" Package Version Core Version Release 1.5.20230731-1784 20230731-222839.d3f2205 n-2.16.1 Update Fix This minor release resolves an issue that prevented a security package from upgrading.\n","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20230731-1784 …","ref":"/release-notes/node/august-2023-1-minor/","tags":"","title":"August 2023 Appliance Release Notes"},{"body":"Network Interface Panel Changes Interface Details Copy All Button Frequently Trustgrid users need to share the interface configuration information with people who do not have access to the Trustgrid portal. There is now a Copy All button that will load all of these details into your clipboard.\nCopy All button Example WAN interface output:\nIP: 172.16.11.31/24 Hardware Address: 00:50:56:8e:03:54 Gateway: 172.16.11.1 DNS1: 172.16.11.4 DNS2: 4.2.2.2 Public IP Removed from WAN Interface The WAN interface used to include a field labeled “Public IP” that was the IP address the Trustgrid control plane saw as the source IP for traffic from the node. This would be the IP address used on the internet after any NATs where applied.\nSome users were confused by this IP and believed it was the assigned IP address for the WAN interface which is not always true. Therefore we have removed this from the WAN interface panel.\nThe observed Public IP is still visible in the Infovisor.\nData Plane Panel Export Data Plane Peers You can now export a CSV-formatted list of peers from the Data Plane panel. Export button List Gateway Ports The Data Plane Panel now lists the Gateway Port for each tunnel. This is the port the client node uses to connect to the listed gateway.\nWhile this is typically port 8443,, it can be configured differently and having that info visible aids in troubleshooting.\nBGP Status Tool A new BGP Status tool has been added to the BGP panel. This tool displays the current BGP peer status including peer connection status, uptime, routes received and advertised, and more. BGP Status Flow Logs Advanced Search Improvement The flow logs advanced search now allows selecting clusters as the source or destination nodes. This enables search for flows that were sent to or received from a cluster, rather than individual nodes.\nTrustgrid Resource Names (TGRN) in Infovisor When creating Resource Scoped Policies to limit a user’s visibility to specific nodes or clusters you specify resources using Trustgrid Resource Names (TGRNs). Prior to this release, it was necessary to generate the TGRN for by combining the common prefix with the node’s UID. With this release the TGRN is available in the node’s Infovisor panel with a button to easily copy the TGRN into your clipboard.\nCopy TGRN field on Infovisor Override Default Container DNS and IP This release when combined with a node running the July 2023 Node releases adds the ability to override the default DNS and IP settings for containers.\nOther Notable Fixes The below issues have been resolved in this release:\nAdding and saving multiple tags use to frequently lead to an error that caused an endless status spinner and would fail to save one or more of the tags. Overview graphs were not aggregating statistics correctly for view of 6 hours or longer.* ","categories":"","description":"July Release focusing on general improvements and fixes","excerpt":"July Release focusing on general improvements and fixes","ref":"/release-notes/cloud/july-2023/","tags":"","title":"July 2023 Release Notes"},{"body":" Package Version Core Version Release 1.5.20230712-1762 20230712-200223.7cced96 n-2.16.0 New Event Types Several new event types are generated with this version of the node appliance software.\nDNS Failure If the node is unable to resolve DNS via its configured DNS servers it will generate a DNS Resolution error event. Example DNS resolution events Interface Down Notification This event is triggered when any configured interface’s link state goes from UP to DOWN. Example Interface health events Trustgrid Unhealthy Stop Notification This event is triggered if the Trustgrid service fails to stop completely prior to the most recent start. This could indicate a hard power cycle event or something caused the Trustgrid service to halt unexpectedly.\nExample Node Stop Error Cluster Health Events The following cluster health related events are now available and will now resolve themselves once the triggering condition clears.\nNetwork Health Check Data and Control Plane Disruption Virtual Network Port Forwards Port forwards allow mapping a layer 4 service to a virtual IP address in a Trustgrid layer 3 virtual network. Prior to this release, port forwards could only be defined at the node or cluster level and this required an additional virtual network route to be defined to send the virtual IP traffic to the correct node or cluster.\nThe new Virtual Network Port Forward feature combines the route and port forward configuration and consolidates the definition to the virtual network level.\nLayer 4 Health Checks Deprecated The layer 4 service historically had an option to perform a health check where a connection attempt was made once per minute to the configured IP and port. If this was configured on a cluster, the member nodes would mark themselves unhealthy if the connection failed. Since this was usually caused by an issue with the local network or target server, this frequently led to both nodes being marked as unhealthy and taking the cluster offline. As this feature was rarely used and caused more issues than it solved we have removed this it from this version of the node software. If this was previously configured on a service the setting will be ignored.\nSupport for requiring IMDSv2 on AWS EC2 Instances. The AWS Instance Metadata Service (IMDS) provides information about the EC2 instance that the Trustgrid service queries to enable certain features. Some potential security issues were identified in the IMDSv1 version of this service and AWS recommends requiring IMDSv2 going forward. This version of the Trustgrid node software is confirmed to be fully compatible with IMDSv2-only instances.\n","categories":"","description":"","excerpt":" Package Version Core Version Release 1.5.20230712-1762 …","ref":"/release-notes/node/july-2023/","tags":"","title":"July 2023 Appliance Release Notes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/concepts/","tags":"","title":"Concepts"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/concepts/","tags":"","title":"Concepts"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/node/","tags":"","title":"Node"},{"body":"This minor release fixes the following issues:\nIssues Fixed The Overview graphs on a Node Detail page showing “invalid date” when you hover over a VPN data point. The Flow Logs Advanced Search did not display the correct flows when the “Newest First” flow log order was used. ","categories":"","description":"Minor release to resolve issues","excerpt":"Minor release to resolve issues","ref":"/release-notes/cloud/may-2023-2/","tags":"","title":"May 2023 Second Release Notes"},{"body":"Port forwarding allows a node to expose an L4 TCP service on the virtual network.\nPort Forward listing Field Name Description Virtual IP Address The IP to expose the service on the virtual network. Virtual Port The port to expose the service on the virtual network. Local Service The service to expose. Alternately, you can specify an IP and port. ","categories":"","description":"Configure port forwarding rules to expose local services as virtual IPs on the virtual network","excerpt":"Configure port forwarding rules to expose local services as virtual …","ref":"/docs/nodes/appliances/vpn/port-forwarding/","tags":"","title":"Port Forwarding"},{"body":"Accessibility Improvements Prior to this release we used only the color red to indicate if the control or data plane was disconnected. We now use different icons to indicate there is an issue with connectivity.\nControl Plane Disconnected Control Plane Disconnect icon Data Plane Disconnected Data Plane Disconnected icon Change Audit Improvements Several improvements where made around our change auditing system including:\nTag changes are now audited. Change records can now be replicated into a customer’s AWS S3 bucket. This works much like the existing S3 Flow Log Export and requires the same bucket policy and versioning settings. To have this setup contact Trustgrid support. Changes to Container settings now include the name of the container instead of its unique ID. Changes to a policy will now show what resources are covered by the policy. Group deletion is now audited with name. Authentication records using a configured Identity Provider(IdP) now include the IdP used. The advanced search now allows you to select more object types. L4 Proxy UI Improvements This release also makes several improvements to the UI for configuring and managing our Layer 4 (L4) proxy Services and Connectors.\nThese improvement include:\nMore consistency in the names of fields between the add/edit prompt and the table listings. The addition of links to automatically test connectivity of a TCP service and sniff traffic for a connector listening port Removal of the Services Health Check feature. This attribute has been removed from the Add Service prompt and the Services table. Any service that previously had this set to Enabled will continue performing this health check until the service is updated. A future node release will stop performing the health check even if the service is still set to Enabled. Flow Log Advanced Search With this release you can now set the source or destination node to local for an Advanced Flow Log Search. This will cover flows that do not traverse the data plane, such as traffic that is forwarded between interfaces.\nFormatted Slack Alarm Events Previously when an event was forwarded to a Slack Channel it was sent as raw JSON that was difficult to read. There is now an option to format messages sent to Slack to be human readable. Checkbox to enable Slack formatting With this selected message will appear in Slack like the below example. Example formatted slack event WireGuard Tunnel Client Config This release adds an example WireGuard client configuration to both the add and update dialogues for WireGuard tunnel interfaces.\nExample auto-generated WireGuard client configuration ","categories":"","description":"May Release focusing on Audit and UI improvements, plus bug fixes","excerpt":"May Release focusing on Audit and UI improvements, plus bug fixes","ref":"/release-notes/cloud/may-2023/","tags":"","title":"May 2023 Release Notes"},{"body":"Issues Fixed This minor release fixes the following issues:\nNetwork Maps displayed peer nodes as disconnected New Orders could not be created if left open too long before the first save ","categories":"","description":"","excerpt":"Issues Fixed This minor release fixes the following issues:\nNetwork …","ref":"/release-notes/cloud/april-2023-2/","tags":"","title":"April 2023 Second Release Notes"},{"body":"Documentation Trustgrid is moving away from our documentation previously hosted on Confluence to docs-as-code system at https://docs.trustgrid.io. This should enable us to more tightly integrate the portal UI with related documentation.\nAs a start, we’ve created a link called Documentation under the Management section of the main navigation bar that will open the docs in a new tab.\nAdditionally, we’ve created a section for release notes that will allow you to monitor release for Control Plane and Node releases via RSS feeds going forward.\nSwagger API Documentation Move As part of this change we are moving our API documentation from https://portal.trustgrid.io/api-docs/ to https://docs.trustgrid.io/docs/api/. This will allow updating this documentation outside our normal release process.\nCluster Configuration Prior to this release it was necessary to navigate to each member node and configure the cluster heartbeat IP and port after it was added to the cluster. In this release a prompt has been added to the “Add Node” flow that will allow you to configure these settings as part of adding the node to the cluster.\nData Plane Stats This release further improves on our recent addition of data plane telemetry information.\nShow data plane telemetry for offline nodes Show data plane telemetry for connections between public and private gateways Virtual Network Route Table Virtual Network Route Tables can now be sorted by Destination, Destination CIDR or Metric. This can make it much easier to view and understand how routes are configured.\nVirtual Network Routes sorted by destination Container Import Disable Imported Containers Previously, if you imported a container from another node or cluster it was created in the Enabled state. If the container was configured to run as a service this would cause the container to start immediately. This could create issues if additional changes were desired before the container attempts to start, such as creating volumes or adjusting environment variables. With this release the container is imported in a Disabled state and will need to be enabled once you are ready to use the container.\nImport Container Volumes There is a new Action available under Container Management \u003e Volumes to Import. This will enable you to import configured volumes configured on another node or cluster. This will simplify configuring containers that require several volumes to be defined.\n(Note: Just like with container configuration import, the source must match the destination type. A node can import from another node and a cluster can import from another cluster)\nNote: Just like with container configuration import, the source must match the destination type. A node can import from another node and a cluster can import from another cluster Flow Logs Flow Log Ordering Our flow logs have historically been searched starting with the oldest in the time range first. This sometimes forced you to load more results multiple times to see the most current information. With this release we now can search either with oldest or newest first. By default the Flow Logs page will now show the last two hours with the most recent first.\nAdditionally, in the Advanced Search there is a new option to select the Flow Log Order depending on your needs.\nFlow Log Order selector Flow Log S3 Export Previously Trustgrid had a mechanism to export flow logs to an AWS S3 bucket on a nightly basis. This was determined to be insufficient for our customers who wanted closer to real-time access to this data. With this release Trustgrid can configur near real-time S3 to S3 replication with our new Flow Log Export system.\nFlow CSV Export Date Format Trustgrid has long supported the option to export your current view of the Flow Logs to a CSV file. However, the format of dates was difficult to parse using most spreadsheet applications. With this release both the start time and end time (if available) is reported in a human readable format like dd-mm-yyyy hh:mm:ss.000 and in Unix Timestamp Milliseconds (MS). This should make analysis of the records much easier and more precise.\nExample CSV export Upgrade Improvements Multi-Node Upgrades Upgrading multiple nodes used to require navigating to each node one at a time, clicking the upgrade button and then entering the node’s name. This prevented accidental upgrades but was difficult for managing large environments. With this release users with the nodes::service:node-upgrade and nodes::upgrade permissions will have the ability to select multiple nodes from the Nodes table and then select “Upgrade” from the “Actions” menu. Multi-Node Upgrade Action Upgrade Status Starting with the node release dated 1.5.20220412-1238 nodes began reporting their upgrade status (In Process, Complete, Failed) to the Trustgrid cloud. With this release this information and the date of the last change in status is displayed in the Info tab of nodes. Upgrade Status section Portal Access Permission With this release there is a new permission portal::access that controls if a user is allowed (or denied) to authenticate into the Trustgrid management portal. This permission was automatically added to all built-in Trustgrid Managed policies, but any custom defined policies that are intended to be used on their own will need to add this permission if management portal access is desired. Portal Access Permission The portal::access must be applied with Resource scope of * to be effective. If using resource scoped policies an additional policy will need to be created and attached to users to grant portal access. ","categories":"","description":"","excerpt":"Documentation Trustgrid is moving away from our documentation …","ref":"/release-notes/cloud/april-2023/","tags":"","title":"April 2023 Release Notes"},{"body":" NATs allow Trustgrid to alter the source and/or destination IP address of layer 3 traffic as it enters or leaves the VPN.\nAdding an Interface NATs are scoped to an interface. Add an interface from the Actions menu.\nAdd Interface dialog Field Name Description Network Interface Select the desired interface from the drop-down list of those available on the node or cluster. Description User friendly description of this interface attachment. This field is initially populated with the description from the selected interface. Traffic Matching mode This option is only available if the attached virtual network does not have NO-NAT mode enabled.\nTraffic not matching a NAT should be denied on this interface. Inbound traffic not matching a NAT should be allowed on this interface. Outbound traffic not matching a NAT should be allowed on this interface. Outside NAT Table Used to define outside NATs Inside NAT Table Used to define inside NATs Inside NATs An inside NAT defines how a local device IP address translates into a virtual network address. For instance, a local device may have a local IP address of 192.168.1.100, but you may want it to appear to other devices or applications on the virtual network as IP address 10.0.20.100. Or you may want an entire block of local IP addresses to show up on the virtual network as a different block. You can do this translation with an inside NATs. Inside NATs also control what local devices can participate on the virtual network. If a local device does not have an inside NAT configured that includes its IP address, it can’t access or be accessed by other devices on the network. Inside NATs require the following information:\nField Name Description Local CIDR The local IP address or address block that should be mapped into the virtual network. It should be entered in CIDR block format (eg - 192.168.100.0/24 or 192.168.100.51/32). Virtual CIDR The network IP address or addresses that the local IP addresses should be mapped to, also entered in CIDR block format. Network addresses map 1x1 with local addresses, so the prefix length (the /xx number of the CIDR) should be the same in both the local and network CIDR blocks of the inside NAT entry. Outside NATs By default, when a device on the local network of a node receives traffic from a remote device on the network, the remote device IP address will be the IP address that was entered in the local CIDR block for the remote node’s inside NAT entry for the remote device. For instance, if the remote device was mapped to network address 10.0.100.1, then its traffic on the local network will appear to come from IP address 10.0.100.1. However, due to the local network configuration, there may be some situations where it is desirable to translate remote network addresses before egressing onto the local network. For example, on a local network of 192.168.0.0/16, a user may want the remote device’s virtual network IP of 10.0.100.1 to be translated to 192.168.50.5 so that it fits better into the local network setup. This kind of translation can be achieved by adding outside nats. To add an outside NAT you must enter the following information:\nField Name Description Network Group The network IP address or addresses that should be translated before egressing onto the local network. This should be entered in CIDR block format or as a Network Group. Local CIDR The local IP address or addresses that the network addresses should be mapped to, also entered in CIDR format. An outside NAT is required for all nodes and clusters attached to a virtual network unless the virtual network is in NO-NAT mode. There are situations where it may be desirable to make multiple remote devices masquerade as one local IP address. This can be achieved by defining an outside nat in which the network CIDR contains a larger address space than the local CIDR. For instance, an entry with network CIDR 10.0.1.0/24 and local CIDR 192.168.100.10 would make all remote devices with network IP addresses in 10.0.1.0/24 appear as IP address 192.168.100.10 on the local network. In this configuration port address translation (PAT) is used for the source port of connections.\nNAT Hit Counter To the right of each defined NAT is a “Hits” button. Clicking this button will display the number of times that NAT has been used since the node was last restarted/rebooted or the counter was reset. This is useful for troubleshooting NATs or to see if a configured NAT is still required.\nInside NAT hit counter Field Name Description Virtual CIDR Inside NAT only, shows the Virtual Network CIDR for the NAT Local CIDR shows the Local network CIDR for the NAT Network Group Outside NATs only, shows the Network Group or Virtual Network CIDR for the NAT Hits Shows the number of flows that have been matched to this NAT since the last reset. Initial Hit Shows the first time the NAT was hit since the last reset. Latest Hit Shows the most recent time the NAT was hit. Reset Clicking this button resets the hit counter. It is also reset when the node is restarted or rebooted. ","categories":"","description":"Configure Network Address Translation for traffic entering or leaving the virtual network","excerpt":"Configure Network Address Translation for traffic entering or leaving …","ref":"/docs/nodes/appliances/vpn/nats/","tags":"","title":"Network Address Translation (NATs)"},{"body":"Nodes can act as domain name servers (DNS) for requests ingressing the virtual network on the node if DNS is configured at the virtual network.\nVPN DNS Settings page DNS Status This setting must be set to Enabled on the node to process requests targeting the configured virtual network DNS server IP.\nUpstream Servers If configured, the node will use these servers to resolve DNS requests for zones not configured at the virtual network level.\nField Name Description Host IP Address The upstream DNS server’s IP address Host Port The upstream DNS server’s port (usually 53) Description (Optional) a user friends description of the server ","categories":"","description":"Configure a DNS","excerpt":"Configure a DNS","ref":"/docs/nodes/appliances/vpn/dns/","tags":"","title":"DNS"},{"body":"Dynamic routing allows a node to export and import routes from other nodes in the virtual network. Find dynamic route definitions and change them under the Dynamic Routing section of the VPN configuration.\nDynamic Routing table Exports Export routes for other nodes in the virtual network to import.\nAdd Export Route dialog Field Name Description Destination The node to route traffic to. Destination CIDR The network to route traffic to. Metric The route metric. Lower metrics are processed first. Gateway Path An optional gateway path to use for the route. Imports Import routes from other nodes in the virtual network.\nAdd Import Route dialog Field Name Description Destination The node to route traffic to. Destination CIDR The network to route traffic to. Metric The route metric. Lower metrics are processed first. Gateway Path An optional gateway path to use for the route. ","categories":"","description":"Configure import and export rules for dynamic routes on the virtual network","excerpt":"Configure import and export rules for dynamic routes on the virtual …","ref":"/docs/nodes/appliances/vpn/dynamic-routing/","tags":"","title":"Dynamic Routing"},{"body":"Static routing allows a node to route traffic to a remote network in addition to virtual network-defined routes(https://docs.trustgrid.io/docs/domain/virtual-networks/routes/). Routes defined at this level can be created for destination CIDRs outside the virtual network’s Network CIDR\nFind static route definitions and change them under the Static Routing section of the VPN configuration.\nAdd Route dialog Field Name Description Destination The node to route traffic to. Destination CIDR The network to route traffic to. Metric The route metric. Lower metrics are processed first. Gateway Path An optional gateway path to use for the route. Only visible if additional Gateway paths are defined on the node. ","categories":"","description":"Configure static routes for the virtual network for the selected node or cluster","excerpt":"Configure static routes for the virtual network for the selected node …","ref":"/docs/nodes/appliances/vpn/static-routing/","tags":"","title":"Static Routing"},{"body":"Nodes may enable a WireGuard server to expose the virtual network to WireGuard clients.\nConfiguration Enabled When enabled, this node will accept WireGuard client connections Port The port clients should connect to Remote Traffic Forwarding Whether the node should forward traffic to the virtual network Key Management Clients will need the server’s public key to connect. This can be generated (using the Regenerate action) or can be derived from the private key (imported using the Import action).\nChanging the server’s private key will disconnect existing clients and require their reconfiguration. Clients Clients must be added before they can connect.\nEach client will need to generate their own private and public key. Most WireGuard clients provide tools to do this.\nName The name of the client Pre-shared Key (Optional) The client’s pre-shared key Public Key The client’s public key Allow Internet Whether this client should be allowed to access the public network through this server An inside NAT should be created to map the client’s local IP to an IP on the virtual network. The virtual network CIDR should not be a part of any existing routes in the domain. The IP should be included in an outside NAT network group, so that an ACL can allow the traffic.\nAn outside NAT should be created that includes the virtual network used on the gateway side.\n“WireGuard” is a registered trademark of Jason A. Donenfeld.\n","categories":"","description":"Configure and manage a Wireguard server on the node to expose the virtual network","excerpt":"Configure and manage a Wireguard server on the node to expose the …","ref":"/docs/nodes/appliances/vpn/wireguard/","tags":"","title":"WireGuard ®"},{"body":"FTPS \u0026 FTPS Using Layer 3 FTP \u0026 FTPS are supported in passive mode when using layer 3. This configuration requires the FTP server to be configured with the external IP address in the passive settings set to the Trustgrid virtual IP that corresponds to the FTP server.\nFileZilla passive mode settings:\nFTP Using Layer 4 FTP is supported in passive mode when using L4 Proxy, however FTPS is not. To configure FTP access through L4 Proxy, the Outbound L4 Service and/or L4 Connector need to be configured with FTP set as the protocol as shown below:\n","categories":"","description":"","excerpt":"FTPS \u0026 FTPS Using Layer 3 FTP \u0026 FTPS are supported in passive mode …","ref":"/tutorials/ftp-and-ftps/","tags":"","title":"Configure FTP and FTPS"},{"body":" Edge nodes can be configured in an “on a stick” configuration, in which only a single NIC is used for each node. Operating in this mode is supported only when using Layer 3 or Layer 4 configuration where hosts behind gateway nodes need access to data behind edge nodes.\nIn this configuration, the source IP of traffic from the edge node depends on whether Layer 3 or Layer 4 is being used, as illustrated below.\nLayer 3 Traffic will originate only from the current active node from the IP address(es) specified in outside NAT rules in the edge node’s config.\nLayer 3 - routed single edge node Trustgrid node(s) used as the next hop in a route for the Trustgrid virtual network. Traffic at the edge will originate from the node’s IP address.\nLayer 4 Traffic will originate from either edge node with round-robin load-balancing with the source IP address being the IP address of whichever node the traffic originates from.\n","categories":"","description":"","excerpt":" Edge nodes can be configured in an “on a stick” configuration, in …","ref":"/tutorials/deployments/ros-config/","tags":"","title":"On a Stick Configuration"},{"body":" This tool runs a ping from the gateway node to a remote edge node to verify the Trustgrid overlay network is functioning as expected.\nUsage Navigate to the node from which you want to test connectivity.\nClick the Data Plane link on the left hand side.\nAmong the gateways (in the case of an edge node) or edge nodes (in the case of a gateway), click Ping on the row of the node you want to test.\nA modal will pop up with options. Click Execute to start the ping.\nA window will pop up with the ping output. You can adjust the interval to change the time between pings (in seconds), and the size to change how much data is sent.\n","categories":"","description":"","excerpt":" This tool runs a ping from the gateway node to a remote edge node to …","ref":"/tutorials/gateway-tools/ping-remote-node/","tags":"","title":"Ping Remote Node"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/aws/","tags":"","title":"Aws"},{"body":" Deploy a pair of Trustgrid gateways. Deployment guide includes an example Cloud Formation template that can be used directly or customized for your environment or converted to Terraform if preferred. Gateways can be deployed in the same availability zone or different ones to provide greater redundancy across AWS. Deploy a Trustgrid Node AMI in AWS.\nUnder networking \u003e clusters create a cluster using a descriptive and unique name as seen below. Select the cluster that was created and add both gateways to it using the actions drop down button as seen below. Configure the cluster heartbeat on each individual gateway node. This is located under system \u003e cluster. The host should be the gateway interface on which you want to configure the heartbeat. This can be either the WAN facing or LAN facing interface. You can see what IP is configured from the node page under interfaces. The port defaults to TCP 9000 but can be any unused TCP port if desired. Security groups for both gateways will need to allow this communication in both directions. Both gateways send a heartbeat to each other on the configured IP and Port to determine if the other member is healthy. If the secondary is not able to get a response from the primary then it will become the active member of the cluster. Once this has been configured both nodes should show as green and healthy in the cluster as seen below. If deploying gateways in different availability zones then LAN interface routes will need to be added to the cluster for both gateway LAN subnets as seen below. This is to ensure the heartbeat communication is routed over the correct interface instead of going out the WAN interface. Under the cluster \u003e interfaces \u003e eth1 LAN \u003e AWS Route Table Entries add the appropriate CIDR for the edge IP space. This should be the subnet that includes all virtual network IP space configured for edge node sites. For example if you have 100 different edge node sites carved out of 172.16.0.0/16 then you would just add this one CIDR. Once this has been added the route should be created in the routing table that is associated to the gateways LAN interface pointing to the ENI of the active member of the cluster.\nThere is an IAM profile that should have been associated to each gateway outlined in the deployment guide providing them permissions to manage the routes defined in the AWS Route Table Entries. When a failover event occurs an API Call is made to update the route to point to the ENI of the active member of the cluster.\nThis concludes the cluster configuration specifics for AWS deployment. Appropriate VPN configuration will need to be applied in order for traffic to pass end to end between the gateways and edge node sites.\n","categories":"","description":"","excerpt":" Deploy a pair of Trustgrid gateways. Deployment guide includes an …","ref":"/tutorials/deployments/configure-ha-gateway-cluster-in-aws/","tags":["aws"],"title":"Configure HA Trustgrid Gateway Cluster in AWS"},{"body":"Standing up a Trustgrid node in AWS is easy using an Amazon AMI. Trustgrid nodes in AWS use two network interfaces - a management and a data interface. The management interface communicates with Trustgrid Cloud Management systems. The data interface is used to terminate TLS tunnels from Edge Nodes.\nNotes The cloudformation template below works with an AMI currently published in US-EAST-1/2 and US-WEST-1/2. Deploying in other regions requires working with Trustgrid Support Requires VPC and public subnet Does not create security groups or roles - those have to be managed separately (more below) If using a burstable performance instance types (T2, T3 and T3a) the following is advised:\nSet CPU Credits for all Gateway instances to unlimited to allow CPU to burst in the event there is a spike above the normal threshold. Unlimited mode for burstable performance instances - Amazon Elastic Compute Cloud\nConfigure monitoring of your CPU Credit Balance to alert if your credits are being consumed or you are being charged for additional CPU usage which might warrant resizing your devices. Monitor your CPU credits - Amazon Elastic Compute Cloud\nPrerequisites VPC with public and private subnets - Management NIC goes in the public subnet, Data NIC goes in the private subnet\nNote: If doing a multi-AZ cluster deployment the private subnets need to use the same route table for automated route management to work Security group for management NIC that allows the following traffic:\nInbound traffic on designated Trustgrid gateway port (typical TCP 8443) for remote nodes. Access to this port can be secured to only allow access from remote nodes if desired. This is only required if deploying a Trustgrid gateway. If the node is acting as an edge then no inbound access is required. Outbound traffic to Trustgrid’s control plane IP (TCP 80/443 \u0026 8443 to 35.171.100.16/28 \u0026 34.223.12.192/28) Outbound traffic to AWS API (TCP 443) https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html Inbound \u0026 Outbound to/from management NIC security group on cluster port (typically TCP port 9000) For the initial deployment outbound access for TCP 80/443 should be allowed. Upon successful registration with the Trustgrid Portal, this can be removed. IAM role for the instance with policies allowing changes to the routing table of the data NIC - See attached doc\nAll Interfaces on the Trustgrid Gateway should have source/destination check disabled in AWS\nSecurity group for data NIC - No configuration for now\nAn IP in the private subnet that will be used by the data NIC\nAn SSH key-pair that can be used to SSH to the instance if necessary\nVPC must have unallocated public IP that will be claimed during provisioning\nProcess Create a new Node. When complete the Node license will copy to clipboard.\nNote: The node will not be visible in the portal until the registration process is complete. Download the license to local storage in case the clipboard is cleared. You cannot reissue a license without recreating the node. Select the appropriate Cloud Formation Template based on the AWS region in which the Trustgrid node is being deployed\nUS-EAST-1: https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/create/review?templateURL=https://s3.amazonaws.com/tg-dev-public/cf-trustgrid-node-useast1.json US-EAST-2: https://console.aws.amazon.com/cloudformation/home?region=us-east-2#/stacks/create/review?templateURL=https://s3.amazonaws.com/tg-dev-public/cf-trustgrid-node-useast2.json US-WEST-1: https://console.aws.amazon.com/cloudformation/home?region=us-west-1#/stacks/create/review?templateURL=https://s3.amazonaws.com/tg-dev-public/cf-trustgrid-node-uswest1.json US-WEST-2: https://console.aws.amazon.com/cloudformation/home?region=us-west-2#/stacks/create/review?templateURL=https://s3.amazonaws.com/tg-dev-public/cf-trustgrid-node-uswest2.json Fill out the fields in the CloudFormation form\nParameters Stack Name Unique name to describe this deployment\nInstance Configuration Field Name Description Instance Type Set the instance type of the EC2 instance to deploy (bigger instances cost more) SSH Keypair SSH keypair to SSH to the instance as ubuntu user if necessary\nSSH access requires a security group change allowing access. We strongly recommend that SSH is not allowed from anywhere (0.0.0.0/0).\nHost IAM Role An IAM role needs to be created with the permissions listed in the IAM Role Requirements section below. IAM Role Requirements Encrypted EBS Volume Required for all nodes\nBy default, the cloud formation template provided will configure an encrypted EBS volume on the Trustgrid Node. The following permissions need to be applied to the associated IAM role to provide access to the default EBS key. Note you will need to input your applicable AWS account ID/region where this node is being deployed.\n{ \"Effect\": \"Allow\", \"Action\": [ \"kms:Decrypt\", \"kms:DescribeKey\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\" ], \"Resource\": \"arn:aws:kms:us-east-1:$aws_accountid:alias/aws/ebs\" } Route Table Required for clustered nodes\nIf the node will be clustered the IAM role requires the following permissions (ec2:DescribeRouteTables for all resources and ec2:CreateRoute and ec2:DeleteRoute on the route table):\nRoute Table Policy\n{ \"Effect\": \"Allow\", \"Action\": \"ec2:DescribeRouteTables\", \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"ec2:CreateRoute\", \"ec2:DeleteRoute\" ], \"Resource\": \"arn:aws:ec2:us-east-1:$aws_accountid:route-table/rtb-f428d58b\" } NOTE: Set the Resource field to the ARN of the Routing Table associated with the data NICs of the instance.\nManagement Configuration This section covers the configuration of the outside, internet-facing interface of the EC2 instance. Field Name Description Security Group Needs to allow outbound traffic to other gateways and the Trustgrid public IP range, at a minimum. If it’s a gateway node, needs to allow inbound access on the gateway port, typically TCP/UDP 8443. Subnet The VPC subnet for the public, internet-facing interface. The EIP that is created by the CloudFormation template will be associated with the interface on this subnet. Data Path Configuration This section covers the configuration of the inward, private-facing interface of the EC2 instance.\nField Name Description Security Group The security group for the data path interface.\nNeeds to allow communication between any private AWS network resources that need to access the Trustgrid EC2 node’s private IP or any virtual network resources that will be accessed across the Trustgrid network. If the EC2 instance node will be clustered, the security group should allow communication between the private IPs of all the clustered nodes on the cluster heartbeat port, typically port TCP 9000. Subnet The VPC subnet for the data path interface. Data IP The private IP for the data path - must belong to the subnet and not already be allocated. Trustgrid Configuration Field Name Description Trustgrid License Copy/paste the license from the portal.\nNote: It is critical that you copy/paste the license correctly.\nIf you are not a direct Trustgrid customer please work with your vendor to get these licenses generated and sent to you. Creating the Stack Create the stack. Check the box acknowledging that AWS CloudFormation might create IAM resources. This is required because we create an instance profile for the to-be-run EC2 instance. You can now manage the node as you would any other in the Portal UI. ","categories":"","description":"","excerpt":"Standing up a Trustgrid node in AWS is easy using an Amazon AMI. …","ref":"/tutorials/deployments/deploy-aws-ami/","tags":["aws"],"title":"Deploy a Trustgrid Node AMI in AWS"},{"body":" The TCP Port Test tool initiates a TCP session with a target IP address and port to confirm fully layer 4 connectivity. This would be similar to using netcat or telnet to test connectivity to a TCP port.\nUsage Login to the Trustgrid portal and navigate to the Node from which you want to test connectivity. Select Interfaces under the Network section. Click the Interface TCP Port Test button Selecting TCP Port Test Update the host with the target IP address and the port with the target TCP port. Click Execute to test connectivity. Configuring the TCP Port Test A new window will open with the results. If a new window does not open, check your browser’s pop-up blocker settings. A successful test will look like this: Successful TCP Port Test result A failed connection will depend on the nature of the failure. Examples include A connection actively refused (e.g. possibly firewall/ACL rejecting connections) Connection refused result A connection timeout or no route message if there is no response (e.g. firewall/ACL dropping connection, bad destination IP, or no route to destination) No route to host result ","categories":"","description":"Simple TCP port connectivity test tool on using local IPs","excerpt":"Simple TCP port connectivity test tool on using local IPs","ref":"/tutorials/interface-tools/tcp-port-test/","tags":"","title":"TCP Port Test"},{"body":" Trustgrid records information about changes users make to all configuration. This can be helpful when troubleshooting recent changes.\nChanges can be viewed for a specific node and for the entire organization. To view changes for a specific node, navigate to a node and select Changes under the History section. To view changes for the entire organization, navigate to Operations-\u003eChanges.\nThe following information is shown for each change:\nField Name Description Date When the change was made IP The IP address from which the change originated Event The type of change (delete/create/change/action). Note that for some entities where the entire entity is re-sent to the API, a change may show create instead of change. Details Information about the change. Typically will include the item’s ID and a brief summary of the changes made. User Name The user who made the change Item Type The type of item changed Viewing configuration changes requires audits::read:config permissions.\nConfiguration changes are stored for 90 days. The last 90 days’ worth of changes can be downloaded as a CSV by clicking the link at the bottom of the page.\nSearching for Changes The Advanced Search button allows you to search for changes by date, user, IP address, and event type. The search is case-sensitive.\n","categories":"","description":"","excerpt":" Trustgrid records information about changes users make to all …","ref":"/docs/operations/changes/","tags":"","title":"Configuration Changes"},{"body":" This feature collects traceroute-like data from all its connected peers and stores the results in the Trustgrid cloud for historical review.\nNetwork hop monitoring as described below requires the April 2025 major appliance release or later. Versions from 20220808 until that version had no payload and were sent every 20 seconds How it Works The node will send out TCP SYN packets to each peer’s public IP and port (if a gateway) with incrementing Time To Live (TTL) values every 5 seconds. The packets have a payload of 1440 bytes (or the smaller of 1440 or the WAN MTU minus 60 bytes) to attempt to spot any MTU issues. As the packets pass through each router (or hop) along the way the TTL is decreased by one. Any time a router receives a packet with a TTL value of 1 it will drop the packet and can reply with an ICMP packet saying “Time to Live has been exceeded” The node uses these ICMP packets to calculate the latency to each hop. Known Limitations There are several known limitations to gathering this data:\nRouters on the internet are not required to respond with ICMP. This will lead to gaps in the Hop numbers. Those that do respond sometimes deprioritize their response which leads to misleading latency numbers. If you see a hop with high values, but the values for higher hop numbers are normal this is not likely the cause of problems If a hop has high values and all subsequent hops have higher values this is likely the source of the latency/loss Firewall rules have to allow the packets and the responses. By utilizing the same TCP port as the gateway, all data collected from edge nodes should be allowed out. Some firewalls/routers have trouble correlating the TCP request with the ICMP response which leads to no data Gathering this data requires compute resources on the node and the gateway. Trustgrid recommends only enabling on edge nodes that have frequent latency or packet loss issues as a troubleshooting tool. Enabling Network Hop Monitoring There are two ways to enable hop monitoring:\nEnable on a Specific Edge Node This method will configure the node in question to attempt hop monitoring to all connected gateway peers.\nNavigate to the node you want to enable In the left side navigation bar select Gateway under the System section. Then click the Client panel. Navigating to the client panel Set the Monitor Hops to Gateway Servers to Always. Click Save Enable on a Gateway Node This method will tell all connected peers running the correct version of the node software to attempt hop monitoring to this specific gateway.\nNavigate to the gateway node you want to enable. In the left side navigation bar select Gateway under the System section. Then click the Server panel. Navigating to the server panel Set Request Clients Monitor Hops to Enabled. Click Save Special Considerations Azure Nodes If you enable this on an edge node running on an Azure VM, the default security group rules will prevent responses from intermediate hops on the path. You will still get data from the final hop, which is the target gateway.\nYou will need to add an inbound rule to the node’s public interface network security group.\nThe rule needs the settings shown below:\nThe rule has to allow the destination of any which is not without risk. Make you weight the risks and benefits and are aware what VMs in Azure are using the same security group. Viewing Network Hop Data Navigate to the node you want to view Select Data Plane on the left Select the peer you wish to view data for. You will see a table of hops appear in the bottom right. You can select a time point on the latency chart, and the hops table will update to show the data for that time point. ","categories":"","description":"","excerpt":" This feature collects traceroute-like data from all its connected …","ref":"/tutorials/gateway-tools/monitoring-network-hops-to-peers/","tags":"","title":"Monitoring Network Hops to Peers"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/operations/","tags":"","title":"Operations"},{"body":" Trustgrid records information for authentication attempts into the control plane. This information can be used to troubleshoot authentication issues, or to monitor for suspicious activity.\nAuthentication audits are available by navigating to Operations-\u003eAuthentication Audits. Only the most recent 25 records are shown, but the last 30 days of audits can be downloaded by clicking the link at the bottom of the page.\nSuccessful logins from external identity providers are logged, but failed attempts are not. Check your IDP’s documentation for information on how to view those. ","categories":"","description":"","excerpt":" Trustgrid records information for authentication attempts into the …","ref":"/docs/operations/authentication/","tags":"","title":"Authentication Audits"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/domain/","tags":"","title":"Domain"},{"body":" Thresholds provide a way to trigger events when different measurements exceed a given value. Thresholds configured at the domain level apply to all nodes in the domain, except when overridden. Events will be of type Metric Threshold Violation.\nTo view thresholds, a user will need domains::read permissions. To configure them, they will need domains::configure:threshold permissions.\nNavigate to your domain, and click Thresholds on the left.\nLoad Thresholds Load thresholds measure the health of the node itself.\nLoad Metrics Metric Type Description Default Value CPU Usage Monitors percent of CPU usage across all cores 95% for 10 minutes Memory Usage Monitors percent of total memory (RAM) used 90% for 30 minutes Disk Usage Monitors percent of total disk usage for the root partition 80% for 1 minute Embrionic Flows Monitors the number of TCP flows (connections) that are in the embryonic state (waiting for ACK) none JVM Heap Monitors the percent of allocated JVM memory used none Load Fields Field Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Options are CPU usage (%), memory usage (%), disk usage (%), and embryonic flows (absolute count). Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Network Thresholds Network thresholds measure the health of the network from the node’s perspective.\nNetwork Metrics Metric Type Description Latency (ms) Monitors the round trip tunnel latency between this node and the target Bandwidth IN Usage (Mbps) Monitor the amount of received bandwidth on the specified interface Bandwidth Out Usage (Mbps) Monitors the amount of sent bandwidth on the specified interfaces Network Fields Field Name Description Name The name of the threshold. This will be available in generated events. Telemetry The metric to monitor. Currently only latency (measured in milliseconds) is available. Threshold The value that must be exceeded for an event to be generated. Duration The time period to measure. If the threshold is exceeded for this duration, an event will be generated. Target For Latency - The target node to measure the latency to. Each node will measure the latency to the target node. For Bandwidth In/Out - The network interface to monitor usage on. ","categories":"","description":"","excerpt":" Thresholds provide a way to trigger events when different …","ref":"/docs/domain/thresholds/","tags":["domain","concepts"],"title":"Thresholds"},{"body":"Generating an API Key Navigate to User Management -\u003e API Access, and click Regenerate API keys. This will invalidate your existing API key, if it exists. The API key is tied to your user and will have the same permissions.\nThe client secret key will only be available at time of generation - if it’s lost, the key will need to be regenerated\nUsing the API Key To use the API key in a request, pass it in as an HTTP header, like Authorization: trustgrid-token client-id:client-secret Anything that can be done in the Trustgrid Portal can be done with the API (except for generating an API token).\nTo query the API for all nodes, for example, you could run:\ncurl -H \"Authorization: trustgrid-token YOUR-CLIENT-ID:YOUR-CLIENT-SECRET\" https://api.trustgrid.io/node\nIn the API documentation, clicking Authorize at the top right will prompt for the API header.\n","categories":"","description":"","excerpt":"Generating an API Key Navigate to User Management -\u003e API Access, and …","ref":"/docs/user-management/api-access/","tags":"","title":"API Access"},{"body":"The VPN feature enables routing of IP packets by utilizing a virtual IP space that is configured on the nodes. In this configuration, the node can be used as the next hop for route destined for the virtual IP space, or the node can be used as the default gateway for a network. The virtual IP space is used as a transit network with NAT being utilized to translate IP addresses on to/from the virtual IP space on either side. It is also possible to preserve the original source and destination by having the virtual IP space be identical to the LAN network.\nThe Trustgrid VPN feature provides the capability to securely route IP packets between remote networks. In this configuration, Trustgrid nodes can operate as a distributed mesh virtual private network (VPN) that can allow applications to access remote data and services at layer 3 (L3) of the network OSI model. This is done by defining a virtual L3 network (similar to an Amazon VPC) and then selecting how local node networks are exposed and translated into the the virtual address space.\nThe following steps illustrate how to configure the Trustgrid VPN feature and will need to be configured on all nodes/clusters that need to communicate across the virtual network.\nCreate the Virtual Network Under Domains -\u003e Domain -\u003e Virtual Networks create the Virtual Network. All gateway/edge nodes deployed and attached to this virtual network will need to be assigned a subnet out of this IP space. It is important to ensure the CIDR created is large enough to encompass all future node deployments. In this example the entire IPV4 space is being used. This IP space is only applicable to the individual virtual network therefore if there are multiple virtual networks there is no overlap or conflict in IP space allocation. Create Routes for the desired Virtual CIDR with the destination being either a single node or a cluster if an HA deployment. Create the appropriate ACL’s if desired for only allowing specific traffic to pass. An ACL is required for any traffic to pass as it is a zero trust model. If traffic is already filtered before reaching the Trustgrid nodes then at minimum an Any:Any rule will need to be created as seen below. Attach Virtual Network to Node / Cluster Select the node or cluster and under vpn attach the virtual network. Define the validation CIDR which should match the route created. NAT rules can only be created within this CIDR. Select the appropriate interface to attach the virtual network to. This can be a physical interface or a virtual vlan interface and should be whichever interface clients will be using as the next hop to reach the remote networks. Configure the appropriate Inside and Outside NATs and then save the configuration. NATs explained in further detail below. Inside NAT: An inside NAT defines how a local device IP address translates into a virtual network address. For instance, a local device may have a local IP address of 192.168.1.100, but you may want it to appear to other devices or applications on the virtual network as IP address 10.0.20.100. Or you may want an entire block of local IP addresses to show up on the virtual network as a different block. You can do this translation via Inside NATs. Inside NAT’s also control what local devices can participate on the virtual network. If a local device does not have an inside NAT configured that includes its IP address, it can’t access or be accessed by other devices on the network. To add an inside NAT you must enter the following information:\nLocal CIDR - The local IP address or address block that should be mapped into the virtual network. It should be entered in CIDR block format (eg - 192.168.100.0/24 or 192.168.100.51/32).\nVirtual CIDR - The network IP address or addresses that the local IP addresses should be mapped to, also entered in CIDR block format.\nNote that network addresses map 1x1 with local addresses, so the prefix length (the /xx number of the CIDR) should be the same in both the local and network CIDR blocks of the inside NAT entry.\nOutside NAT: By default, when a device on the local network of a node receives traffic from a remote device on the network, the remote device IP address will be the IP address that was entered in the local CIDR block for the remote node’s inside NAT entry for the remote device. For instance, if the remote device was mapped to network address 10.0.100.1, then its traffic on the local network will appear to come from IP address 10.0.100.1. However due to the local network configuration, there may be some situations where it is desirable to translate remote network addresses before egressing onto the local network. For instance on a local network of 192.168.0.0/16, a user may want the remote devices virtual network IP of 10.0.100.1 to be translated to 192.168.50.5 so that it fits better into the local network setup. This kind of translation can be achieved by adding outside nats. To add an outside NAT you must enter the following information:\nNetwork Group - The network IP address or addresses that should be translated before egressing onto the local network. This should be entered in CIDR block format.\nLocal CIDR - The local IP address or addresses that the network addresses should be mapped to, also entered in CIDR format.\nNote there are situations where it may be desirable to make multiple remote devices masquerade as one local IP address though the use of port address translation (PAT). This can be achieved by defining an outside nat in which the network CIDR contains a larger address space than the local CIDR. For instance, an entry with network CIDR 10.0.1.0/24 and local CIDR 192.168.100.10 would make all remote devices with network IP addresses in 10.0.1.0/24 appear as IP address 192.168.100.10 on the local network.\n","categories":"","description":"","excerpt":"The VPN feature enables routing of IP packets by utilizing a virtual …","ref":"/tutorials/config-l3-vpn/","tags":"","title":"Configure Layer 3 VPN"},{"body":"In Okta, switch to the Classic UI to be able to configure SAML applications.\nFurther Information on configuring SAML Application in Okta Classic UI: https://developer.okta.com/standards/SAML/setting_up_a_saml_application_in_okta/\nCreate an Application, then select Web and SAML 2.0.\nWhen configuring SAML, enter the Trustgrid Portal and select EmailAddress for Name ID format and Email for Application username.\nComplete the following survey questions and then download the IDP Metadata XML File by clicking on Identity Provider Metadata link. This will open up the xml file as shown below. Save this XML file and provide it to Trustgrid Support.\nAdditionally you will also need to provide a subdomain that will be used as the login URL only for SAML users. For example the subdomain must be subdomain.trustgrid.io. Any Okta Users going to https://subdomain.trustgrid.io will be directed to the Okta Login Page and authenticate with their Okta credentials. Once authenticated successfully they will be logged into the Trustgrid Portal. Note that if for any reason SAML authentication is failing you may always fall back to the Trustgrid portal local authentication by navigating to https://portal.trustgrid.io and using your Trustgrid portal user credentials. All users that are going to use Okta to login to the Trustgrid portal will need to be associated with the Trustgrid Okta SAML Application.\nReference for assigning users to Okta SAML Application: https://developer.okta.com/standards/SAML/setting_up_a_saml_application_in_okta\nOnce both the XML file and subdomain have been received by Trustgrid Support it will be configured in the Trustgrid Portal.\nAdding SAML Users After enabling SAML you can add users following the process below:\nIn Okta, add the user either to the Trustgrid application directly or to a group that includes access to the Trustgrid application In the Trustgrid portal, invite the Trustgrid user using their primary email address in Okta The users should receive an email with a link that directs them to https://subdomain.trustgrid.io but they can navigate there directly. Subdomain will be whatever was provided to Trustgrid support as they enabled SAML. ","categories":"","description":"","excerpt":"In Okta, switch to the Classic UI to be able to configure SAML …","ref":"/tutorials/saml-okta/","tags":"","title":"Enable SAML with Okta"},{"body":"\nField Name Description Issuer The OpenID issuer URL. This will be provided to you by your OpenID Identity Provider. Client ID The OpenID application client ID. This will be provided to you by your OpenID Identity Provider. Client Secret The OpenID application client secret. This will be provided to you by your OpenID Identity Provider. ","categories":"","description":"","excerpt":"\nField Name Description Issuer The OpenID issuer URL. This will be …","ref":"/docs/idps/open-idp-fields/","tags":"","title":"OpenID"},{"body":" User Management Policies define what an authenticated user is allowed to do within the Trustgrid system. Policies either allow or explicitly deny specific actions by the user.\nTypes of Policies Trustgrid Managed Policies These policies start with the prefix builtin-tg and are created and managed by Trustgrid to provide a starting level of permissions based on common user types. Descriptions of the user types for each role are listed below.\nAs Trustgrid adds new features or actions these policies will automatically be updated to include appropriate permissions. These policies cannot be edited by customers.\nCustomer Managed Policies These policies can be defined by customers to meet the specific needs of their teams.\nBest Practices Start by attaching the Trustgrid Managed Policies that best fit the user’s minimum, required needs following the principle of “least privilege.” If additional permissions are required, create a Customer Managed Policy that includes those specific rights rights. Then attach that policy to the user. Trustgrid Managed Policy Descriptions Below are the basic descriptions of the Trustgrid Managed Policies including an example role description. Trustgrid will use this description to guide if it is appropriate to add new permissions to the policies.\nThe policies are listed from lowest permissions to highest.\nbuiltin-tg-apps-user This policy provides minimal permission for a user to connect to the Trustgrid applications portal for using Remote access apps. The user has no rights within the Trustgrid management portal and should likely be given a landing page of /apps to be redirected straight to the applications portal.\nTarget User: End user for remote access applications with no knowledge of the Trustgrid system.\nbuiltin-tg-monitor This policy provides read-only access to non-sensitive resources in the Trustgrid management portal.\nTarget User: Project manager or executive sponsor that needs to view information in the portal, but does not require tools required to troubleshoot or resolve issues.\nbuiltin-tg-operator This policy provides mostly read-only access but also has the ability to view and use tools within the portal and perform actions to resolve common issues (e.g. restarting/rebooting nodes).\nTarget User: Entry-level technical resources responsible for initial triage of support issues.\nbuiltin-tg-node-admin This policy provides the ability to make changes to most resources but is restricted from making changes that can have a wide impact such as changing a gateway node server settings.\nTarget User: Mid-level technical resources that need to make changes to things like node VPN configuration and virtual network routes, but should be restricted from making changes that can impact an entire organization when possible.\nbuiltin-tg-admin This policy has permission to change almost all resources with the exceptions of Identity Providers and User Management.\nTarget User: Senior technical resources needing near full access.\nbuiltin-tg-access-admin This policy grants the ability to manage permissions and identity-related resources including configuring Identity Providers, Adding/Inviting Users, and creating and assigning policies\nTarget User: Management or access control-related resources responsible for granting access to the Trustgrid system.\nbuiltin-tg-upgrade-admin This policy grants all the permissions required to upgrade nodes using the Upgrade Manager system.\nTarget User: Users responsible for upgrading Trustgrid nodes.\nbuiltin-tg-provisioning-admin This policy grants the ability to create and manage orders in the provisioning section of the portal.\nTarget User: Project Managers and other team members involved in managing orders of new Trustgrid nodes.\nResource-Scoped Policies Policies have a Resources section that allows the permissions granted to be limited to specific Trustgrid resources, such as nodes and clusters. This can be used to present a user with an extremely limited view in the portal. For example, an edge site technical contact could be given a login that was only permitted to see the nodes at their site.\nIn order to grant users access to the portal a second policy is required granting the portal::access permission to the * resource. Trustgrid Resource Names or TGRN Trustgrid has adopted a resource naming convention that follows the basic format: tgrn:tg::\u003cservice\u003e:\u003cresource-type\u003e/\u003cresource-id\u003e\nWildcard TGRN By default, the Resources field is populated with * which grants permissions to all resources. This is included by default for new policies and would need to be removed to provide TGRN restricted permissions.\nNode TGRN A node’s TGRN will start with the below prefix: tgrn:tg::nodes:node/ Followed by the UID of the node. The node TGRN is accessible from the infovisor for a node by clicking on the “Copy” button to the right of the TGRN entry. TRGN entry in the Inforvisor panel A complete node TGRN looks like: tgrn:tg::nodes:node/ab3550cf-f3da-4d90-b4b1-b870fc85c9c7\nCluster TGRN Cluster TGRN start with the prefix: tgrn:tg::nodes:cluster/ This is followed by the cluster’s fully qualified domain name (fqdn) which is the combination of the cluster name and your organization’s Trustgrid domain.\nYou can copy the Cluster TGRN from a cluster’s Overview page by clicking the “Copy” button to the right of TGRN. Cluster TGRN on Overview page A complete cluster TGRN looks like: tgrn:tg::nodes:cluster/awscluster.training.trustgrid.io\nCondition-Scope Policies Conditions allow a policy to be scoped to objects that match specific conditions. This could be used in addition to or in place of resource-scoped policies. Policy Conditions Tag Conditions Tag conditions allow a policy to be scoped to objects that have a specific tag or combination of tags. This is useful for allowing users to see and manage objects that have a specific tag.\nThere are three sections to specify tag conditions:\nAll - When this section is used all conditions specified in this section must be present on the object. Any - When this section is used any conditions specified in this section must be present on the object. None - When this section is used no conditions specified in this section can be present on the object. Each section has two fields:\nTag Matches requires the tag to be present with the matching value. Tag does NOT Match requires the tag is NOT present or has a different value. Be Advised: Using tag based policies means any user with the permissions to change the tag of an object can change what policies apply to that object. Policy Management Creating/Editing Policies Navigate to User Management → Policies Policy Management Page For a new policy click Create Policy. To edit an existing find it in the list and click on its name. The policy wizard has two sections. The left section groups permissions by category and is where you allow or deny permissions. The right section shows the resulting JSON of the policy and is read only. As an example, we will create a role to grant users the ability to see, edit, and comment on Provisioning orders. Under Permissions, search for orders Click the green check box next to each of the desired permissions. (Clicking the X would explicitly deny that permission which will take precedent over any other policy that allows that permission) You will notice the Policy JSON updated as you select permissions Click Save Policy updated notification Clone Existing Policy To clone an existing policy click the copy button on the far right of the policy row. This will create a new policy with the same permissions pre-selected which can then be edited and named as desired. Policy table showing the clone/copy policy button Attaching Policies and Viewing Effective Permissions Policies can attached at either:\nThe User level which applies the permission to only the individual user The Group Level ","categories":"","description":"","excerpt":" User Management Policies define what an authenticated user is allowed …","ref":"/docs/user-management/policies/","tags":"","title":"Policies"},{"body":"When configuring a SAML IDP, the provider will often provide a metadata XML file to simplify configuration. If provided, you can upload that on the SAML configuration page, which will automatically populate the fields necessary for SAML authentication.\nField Name Description Issuer A URL that will point to the IDP, typically with some identifying information so the IDP can determine the source of the request. This will be provided by your SAML identity provider. Login URL A URL that will initiate the login process. This will be provided by your SAML identity provider. Identity Provider Signing Certificate A certificate used to authenticate requests between Trustgrid and the SAML IDP. This will be provided by your SAML identity provider. ","categories":"","description":"","excerpt":"When configuring a SAML IDP, the provider will often provide a …","ref":"/docs/idps/saml-idp-fields/","tags":"","title":"SAML"},{"body":"SNMP Standard OIDs Trustgrid exposes data through standard OIDs to provide information about the below resources. Most monitoring software will detect these automatically.\nCPU\nMemory\nDisk\nNetwork Interface\nTrustgrid Custom OIDs The following custom data points are made available under Trustgrid’s Enterprise OID .1.3.6.1.4.1.53560 which will need to be used as the prefix for the below OIDs\n.2.2.1 - Lists VPN Stats in a table each virtual network is a row in the table (signified with the suffix .# for that networks row number) with a value for each metric\n.1.# - Lists the interface name associated with the below Virtual network name.\n.2.# - Lists the Virtual Network names associated with this node.\n.3.# - Lists the Number of New Flows\n.4.# - Lists the Number of Active Flows\n.5.# - Lists the Inbound TCP Octets since last polling\n.6.# - Lists the Outbound TCP Octets since last polling\n.7.# - Lists the Inbound UDP Octets since last polling\n.8.# - Lists the Outbound UDP Octet since last polling\n.9.# - Lists the Inbound ICMP Octets since last polling\n.10.# - Lists the Outbound ICMP Octets since last polling\n.2.3.0 - Lists the Control Plane connectivity status. Returns UP if connected and DOWN if disconnected\n.2.4.0 - Lists Data Plane connectivity status. Returns a string based on the number of established data plane connections. Possible values are:\nUP - If all available peer connections are online DEGRADED - If some but not all peer connections are online DOWN - If no available peer connections are online .2.5.1 - Table with name and value of all tags associated with the node\n.2.6.0 - Integer showing the number of available data plane connections (known gateways if an edge node is queried, known edge node clients if a gateway node is queried)\n.2.7.0 - Integer showing the number of active data plane connections\n.2.8.0 - String showing the cluster status of the node. Possible values are PRIMARY, SECONDARY, or NOT_CLUSTERED\n.2.9.1 - JVM Memory Consumption Stats\n.1.1 - Committed Heap (bytes)\n.2.1 - Used Heap (bytes)\n.3.1 - Max Heap (bytes)\n.4.1 - Heap Load (percentage)\n.5.1 - Committed Non Heap (bytes)\n.6.1 - Used Non Heap (bytes)\n.7.1 - JVM Total Committed Memory (bytes)\nExample output The output below shows the device has two virtual networks (mesh \u0026 LRE-NETWORK) both attached to the same physical interface (enp0s20f1). The mesh network has no activity. The LRE-NETWORK has significant TCP traffic and a large number of flows.\niso.3.6.1.4.1.53560.2.2.1.1.1 = STRING: \"enp3s0\" iso.3.6.1.4.1.53560.2.2.1.1.2 = STRING: \"enp3s0\" iso.3.6.1.4.1.53560.2.2.1.1.3 = STRING: \"enp3s0\" iso.3.6.1.4.1.53560.2.2.1.2.1 = STRING: \"Default-Route\" iso.3.6.1.4.1.53560.2.2.1.2.2 = STRING: \"mesh\" iso.3.6.1.4.1.53560.2.2.1.2.3 = STRING: \"LRE-NETWORK\" iso.3.6.1.4.1.53560.2.2.1.3.1 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.3.2 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.3.3 = INTEGER: 6562 iso.3.6.1.4.1.53560.2.2.1.4.1 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.4.2 = INTEGER: 0 iso.3.6.1.4.1.53560.2.2.1.4.3 = INTEGER: -8328 iso.3.6.1.4.1.53560.2.2.1.5.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.5.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.5.3 = Counter64: 5821341 iso.3.6.1.4.1.53560.2.2.1.6.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.6.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.6.3 = Counter64: 132753210 iso.3.6.1.4.1.53560.2.2.1.7.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.7.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.7.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.8.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.8.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.8.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.9.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.9.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.9.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.10.1 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.10.2 = Counter64: 0 iso.3.6.1.4.1.53560.2.2.1.10.3 = Counter64: 0 iso.3.6.1.4.1.53560.2.3.0 = STRING: \"UP\" iso.3.6.1.4.1.53560.2.4.0 = STRING: \"UP\" iso.3.6.1.4.1.53560.2.5.1.1.1 = STRING: \"test\" iso.3.6.1.4.1.53560.2.5.1.1.2 = STRING: \"enviro\" iso.3.6.1.4.1.53560.2.5.1.2.1 = STRING: \"null\" iso.3.6.1.4.1.53560.2.5.1.2.2 = STRING: \"LRE\" iso.3.6.1.4.1.53560.2.6.0 = INTEGER: 8 iso.3.6.1.4.1.53560.2.7.0 = INTEGER: 8 iso.3.6.1.4.1.53560.2.8.0 = STRING: \"NOT_CLUSTERED\" iso.3.6.1.4.1.53560.2.9.1.1.1 = Counter64: 533725184 iso.3.6.1.4.1.53560.2.9.1.2.1 = Counter64: 176160768 iso.3.6.1.4.1.53560.2.9.1.3.1 = Counter64: 2863661056 iso.3.6.1.4.1.53560.2.9.1.4.1 = INTEGER: 6 iso.3.6.1.4.1.53560.2.9.1.5.1 = Counter64: 72351744 iso.3.6.1.4.1.53560.2.9.1.6.1 = Counter64: 69206016 iso.3.6.1.4.1.53560.2.9.1.7.1 = Counter64: 606076928 ","categories":"","description":"Explains SNMP OIDs exposed via the SNMP v3 service on appliance-based nodes","excerpt":"Explains SNMP OIDs exposed via the SNMP v3 service on appliance-based …","ref":"/docs/nodes/appliances/snmp/oids/","tags":"","title":"SNMP OIDs on Trustgrid Appliances"},{"body":" An Access Policy is comprised of several rules that determine whether a user is permitted to access a ZTNA application. If no rule matches a user’s access attempt, the attempt will be denied.\nEach rule has three types of criteria:\nField Name Description Include criteria in this section are logically OR’d together. For a rule to apply to an access attempt, at least one of the include criteria must match. Exception criteria in this section are logically NOT’d. If any exception criterion matches, the rule will not apply to the access attempt. Require criteria in this section are logically AND’d. ALL of the require criteria must match for the rule to apply to the access attempt. Rules also have an action:\nAllow - if the rule matches, allow access Block - if the rule matches, block access Rules are evaluated in the order they are listed in the policy. Rules may be moved higher or lower in the list by clicking the up or down arrows next to the rule.\nCriteria Field Name Description Emails a list of email addresses, comma separated. Eg, “user1@company.com, user2@company.com” Country the user’s country, determined by their IP address Emails ending in a required email suffix, like “@company.com” Everyone this rule always matches IDP Groups a list of groups that the user must be a member of IP Ranges a list of IP ranges either in CIDR notation or a single IP address, comma separated. Eg, “10.10.44, 10.10.8.0/24” ","categories":"","description":"","excerpt":" An Access Policy is comprised of several rules that determine whether …","ref":"/docs/applications/access-policy/","tags":["applications","ztna"],"title":"Access Policy"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/applications/","tags":"","title":"Applications"},{"body":" A RDP app is a ZTNA application that allows remote access to an internal RDP server. RDP servers can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type:\nlocal to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application\nDestination Node - only available if connectivity type is Remote Node. The edge node with access to the application\nVRF - only available if connectivity type is Remote Node. The VRF used to connect to the application.\nInternal server hostname or IP - the internal hostname or IP address of the RDP server and port number\nVirtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application\nClient Virtual IP - only available if connectivity type is Virtual Network -defaults to the virtual management IP of the ZTNA gateway if it exists. The source virtual IP address that will be used to connect to the application\nVirtual server hostname or IP - only available if connectifity type is Virtual Network. The destination virtual IP address and port number that will be used to connect to the application\nSecurity Identity Provider - the Identity Provider to authenticate users Click Add Application Click the Remote Desktop - RDP option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A RDP app is a ZTNA application that allows remote access to an …","ref":"/docs/applications/rdp-app/","tags":["applications","ztna"],"title":"RDP App"},{"body":" A SSH app is a ZTNA application that allows remote access to internal SSH servers. SSH servers can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type:\nlocal to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application\nDestination Node - only available if connectivity type is Remote Node. The edge node with access to the application\nVRF - only available if connectivity type is Remote Node. The VRF used to connect to the application.\nInternal server hostname or IP - the internal hostname or IP address of the SSH server and port number\nVirtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application\nClient Virtual IP - only available if connectivity type is Virtual Network -defaults to the virtual management IP of the ZTNA gateway if it exists. The source virtual IP address that will be used to connect to the application\nVirtual server hostname or IP - only available if connectifity type is Virtual Network. The destination virtual IP address and port number that will be used to connect to the application\nSecurity Identity Provider - the Identity Provider to authenticate users Click Add Application Click the Secure Shell option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A SSH app is a ZTNA application that allows remote access to internal …","ref":"/docs/applications/ssh-app/","tags":["applications","ztna"],"title":"SSH App"},{"body":" Trusted links allow a user to allow-list only specific URLs when accessed through a ZTNA application. This allows a user to access any URL on the internet through a ZTNA application, but only if the URL is explicitly allowed by the application.\nThis can be used to permit readonly or certain operations remotely, but still require local access for more sensitive operations.\n","categories":"","description":"","excerpt":" Trusted links allow a user to allow-list only specific URLs when …","ref":"/docs/applications/web-app/trusted-links/","tags":["applications","ztna"],"title":"Trusted Links"},{"body":" Visibility groups determine what applications a user can see on their application dashboard. A user must be a member of at least one selected group to see an application.\n","categories":"","description":"","excerpt":" Visibility groups determine what applications a user can see on their …","ref":"/docs/applications/visibility/","tags":["applications","ztna"],"title":"Visibility"},{"body":" A Web App is a ZTNA application that allows remote access to internal web applications. Services such as Jenkins or JIRA can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Hostname hostname of the internal web application External Address the public URL users will use to access the application Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type: local to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application Destination Node - only available if connectivity type is Remote Node. The edge node with access to the application VRF - only available if connectivity type is Remote Node. The VRF used to connect to the application. Virtual server URL - the internal URL of the application Virtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application Client Virtual IP - only available if connectivity type is Virtual Network - defaults to the virtual management IP of the ZTNA gateway if it exists. The virtual IP address that will be used to connect to the application TLS verification none - no TLS verification is performed custom CA - Trustgrid will validate the application’s certificate against the provided CA default key store - Trustgrid will validate the application’s certificate against the default key store TLS Custom CA - only available if using Custom CA TLS verification. The CA certificate used to validate the application’s certificate Security Identity Provider - the Identity Provider to authenticate users User session duration - How long a user’s session will last before they are required to re-authenticate Trust Mode: Discovery - all URLs accessed through the application will be permitted and listed in the Trusted Links section Zero Trust - only URLs explicitly trusted by the application will be permitted Click Add Application Click the Web Application option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A Web App is a ZTNA application that allows remote access to internal …","ref":"/docs/applications/web-app/","tags":["applications","ztna"],"title":"Web App"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/ztna/","tags":"","title":"Ztna"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/cluster/","tags":"","title":"Cluster"},{"body":" When the active (master) member of the cluster goes unhealthy the standby member will take over the active role. This process should be automatic and not require manual intervention. However, in certain circumstances, such as the unexpected failover of a public gateway, it is worth investigating to confirm traffic is in a healthy state.\nPossible Messages Master role assumed - failover\nIndicates the master role has moved from the designated master (primary) to the backup/secondary node Master role reclaimed by expected master\nIndicates the master role has returned to the designated master Failover Process Below is a brief description events that occur during a failover process:\nThe node assuming the master role will ARP to the network that it now owns the Cluster Virtual IP (VIP)\nThe Domain route table will update that the assuming node should receive all traffic for the cluster (clustername-master)\nThe assuming node will load all NAT entries associated with the cluster\nResponse Process After a failover or failback it is necessary to verify that traffic is flowing appropriately.\nLogin to the portal and navigate to the affected cluster’s page\nVerify that only a single node shows as master\nOn the Configuration → Network tab note the cluster VIP\nClick on the indicated current master\na. Verify the VPN Route Table shows\ni. Navigate to the `Configuration` → `VPN` tab ii. Launch the \"View Virtual Route Table\" tool iii. Verify that routes show as “available true” 1. If the cluster is a gateway cluster there may be many routes and not all be active, just confirm many show as available. 2. The route to the management VIP for the other node in the cluster will always be false. b. Verify traffic is flowing through the appropriate node.\ni. Navigate to the `Configuration` → `Network` tab ii. Confirm the interface associated with the Cluster VIP is selected 3. For single interface nodes: ETH0 / Network Adapter 1 - WAN Adapter 4. For dual interface nodes: ETH1 / Network Adapter 2 - LAN Adapter iii. Open the `Sniff Interface Traffic` tool. 5. Set the filter to “host clusterVIP” without quotes and replacing clusterVIP with the appropriate Cluster virtual IP. Click `start session`. 6. Confirm that you see traffic flowing through the interface. **Continue monitoring for several minutes to confirm the traffic is maintained.** 7. Leave the Sniff Interface Tool running while completing the next step iv. Repeat steps i-iii on the node that **is not** currently indicated as the master. 1.You want to verify there is **no traffic for the cluster VIP running through the non-master node**. 8. You may see a periodic ARP from the cluster master, but that should be it. Compare traffic volume before and after the failover\na. If the event was a failover and failback compare traffic from the current master\nb. If the event was a failover but has not failed back you will need to compare traffic volume on the current master to the volume on the previous master\ni. e.g if traffic failed from node1 to node2, compare node1’s traffic prior to the failover to the volume of traffic on node2 after the failover ","categories":"","description":"","excerpt":" When the active (master) member of the cluster goes unhealthy the …","ref":"/tutorials/operations-runbook/cluster-failover-response/","tags":["cluster","help","troubleshoot"],"title":"Cluster Failover Response"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/control-plane-disconnect/","tags":"","title":"Control Plane Disconnect"},{"body":" When the Control Plane is disconnected there is no way to utilize remote tools to resolve the issue so you will need to contact the End-user technical resource for the site to troubleshoot\nWhen troubleshooting the control plane it is a good idea to familiarize yourself with the Edge Node Startup Process.\nNetwork Requirements In order to connect to the Trustgrid Control Plane, the following outbound traffic must be allowed from the node’s configured primary interface IP address TCP Port 443 and TCP/UDP 8443 to: 35.171.100.16/28 34.223.12.192/28 TCP/UDP Port 53 to the configured DNS servers. These DNS servers must be able to resolve DNS requests for the trustgrid.io domain Troubleshoot from the Node Triage the total site connectivity to see if actions can be taken to restore functionality for the edge site while troubleshooting the specific node Confirm with the site tech: There are no known power or internet issues at the site No changes have been made to any firewalls between the Trustgrid node and the internet (if applicable). To connect the Trustgrid node must have access to the Network Requirements defined above. Have the site tech attempt to ping the inside interface IP address(es) to see if the device is showing as powered up and online. If the site is using a single-interface configuration this would be the Network Adapter 1 - WAN Interface IP(s) in the portal. If the ping is successful you have determined the device has power and that the operating system and Trustgrid software are running. In this case, you can focus on internet side issues. If the ping fails, work with the site tech to: Confirm the node is powered on Connect directly to the network of the inside interface and attempt ping from there. They should also connect directly to the inside interface and statically configure an IP in the same network. Attempt power cycling the node by removing power and reconnecting for physical devices, or using the hypervisor management tools for virtual nodes. Connect to the console of the device A normal node looks something like this: Normal node login screen Work with the onsite tech to log in to the Trustgrid Local Console Utility. This tool will display the connectivity status and allow you to alter the WAN/outside IP settings if needed. From the console, you can also use the Network Tools Shell to do additional troubleshooting including: Use ping to confirm you can ping the WAN interface’s default gateway IP. Note that not all default gateways will respond to ping but most do. Use dig @\u003cdns server IP\u003e zuul.trustgrid.io +short to confirm the DNS server is resolving to an IP address. Replace \u003cdns server IP\u003e with the DNS server configured on the WAN interfaces. If this does not work, work with the site tech to confirm the DNS server is configured correctly. Use openssl to confirm the TLS certificate chain to the Trustgrid Control Plane is valid. If you see a screen like below attempt rebooting the device to restore connectivity and contact Trustgrid support so we can investigate further. Kernel panic screen Troubleshoot from an Independent Device in place of Node If connectivity cannot be established from the node, you can attempt to connect from an independent device like a laptop plugged into the port the node was plugged into.\nDisconnect the cable from the WAN/Outside port of the Trustgrid node and connect to a laptop NIC. Statically assign the same IP and DNS settings that the Trustgrid node is using. Confirm DNS is functioning: Using nslookup (on Windows) or dig (Linux or MacOS) to confirm you can resolve zuul.trustgrid.io Open a browser and navigate to https://zuul.trustgrid.io:8443 If the device can connect to that server and port you should see a warning like this because Trustgrid uses its own Certificate Authority (CA) Certificate security warning Click Not Secure and then click Certificate (invalid) to view the certificate chain. Expanded certificate security warning You should expect to see a chain like the below example: If any different certificates or CAs indicate something like DPI-SSL/HTTPS Proxy is interfering with the TLS Certificate Chain. If the browser says it cannot connect this indicates a firewall or routing issue upstream. Troubleshoot from an Upstream Network Device If the site contact has management access to the device between the node and the internet, like a firewall or router, you can attempt to capture relevant traffic to determine where the issue lies. Specifically, look for the following common issues:\nWhen capturing traffic it is recommended to perform the capture on the interfaces closest to the Trustgrid node. This ensures you see the complete impact of firewall, routing, and NAT rules.\nFor example, if your firewall has a WAN interface connected to the internet and a LAN interface connected to the network the node is attached to, use the LAN interface for captures. Capturing from the WAN interface would give an incomplete picture. A WAN interface may receive a SYN/ACK response, but due to the firewall configuration that packet may not be put on the LAN network as expected. Blocked DNS Access - capture TCP \u0026 UDP on port 53 (DNS) to confirm DNS requests are being sent to the upstream DNS server and responses are being delivered to the node. Confirm Control Plane Traffic - capture TCP port 8443 to the Trustgrid Control Plane networks. Common issues seen include: Connection attempts are being blocked (access rules) or responses are not being put back on the network containing then node (routing or NAT rules) DPI-SSL or HTTPS altering the TLS certificate chain ","categories":"","description":"","excerpt":" When the Control Plane is disconnected there is no way to utilize …","ref":"/tutorials/operations-runbook/control-plane-disconnect/","tags":["control plane disconnect","help","troubleshoot"],"title":"Control Plane Disconnect"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/failover/","tags":"","title":"Failover"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/help/","tags":"","title":"Help"},{"body":" This security feature allows restricting full node functionality to the current public IP address. If the public IP changes the data plane connectivity will cease to function and no data plane traffic will pass. It is the equivalent to disabling a node in the trustgrid portal.\nThis feature should not be used on networks where the Public IP is controlled via DHCP. It should only be used where the public address is statically assigned to the node and is not expected to change. Process to Restrict Navigate to the node in the Trustgrid portal Click the Actions button in the top right corner of the page and select Lock Node IP Lock Node IP Process to Unlock Navigate to the node in the Trustgrid portal Click the Actions button in the top right corner of the page and select Unlock Node IP Lock Node IP Alerts Once locked changing the Public IP of the node will result in an alert being generated as seen belo. At this point no data plane traffic will be allowed. Alert generated when node attempts to connect from an unauthorized IP address. ","categories":"","description":"This tutorial will show you how to lock a node to the current public IP address.","excerpt":"This tutorial will show you how to lock a node to the current public …","ref":"/tutorials/management-tasks/limit-node-functionality/","tags":"","title":"Limit Node Functionality to Current Public IP"},{"body":" This process is intended to help customer support personnel quickly identify the scope of a node down problem and get services back online as quickly as possible.\nNode Down Triage Triage Checklist Determine Production Status of the Trustgrid Node\nConfirm High Availability or Disaster Recover is Functioning\nIf clustered, is the partner active and working\nIf there is a second site, confirm if it is active\nDetermine the type of outage (Control Plane, Data Plane or Both)\nDetermine Production Status of the Trustgrid Node Use the Production Status Tags to determine if the node is in use and expected to be online.\nConfirm High Availability or Disaster Recover is Functioning Before troubleshooting why a node is down we should determine if the services it provided can be provided in the interim by a cluster member or devices at a secondary/disaster-recovery site.\nIs the Node a Cluster Member Check if partner member is online:\nIf Yes:\n- Confirm partner member is now active and operating normally. - The issue is limited to this specific Node. This could be its power input, the hardware or operating system, configuration, or its internet connection (if different than partner member). If No:\n- Possible site-level issue including power or internet provider - Proceed to Secondary / DR Site Is there a Secondary / DR Site for this Node/Cluster? Are the nodes deployed at the secondary site online in the Trustgrid?\nIf No:\n- Confirm nodes for other end-user sites are not also offline which might indicate a wider spread issue. Escalate to Trustgrid Support if you suspect a major issue with the Trustgrid system. - If limited to a single customer it is recommended to contact that customer immediately. They may be experiencing an outage or performing maintenance. If Yes:\n- If the customer is configured for Automatic Failover between sites, verify that traffic is flowing through the active member at the secondary site. - If the customer is configured for Manual Failover you will need to adjust the route destination to point to the secondary site. Determine Connectivity Status of the Trustgrid Node Because Trustgrid provides independent control and data planes, there are a few ways it can manifest as “down”:\nField Name Description Control Plane Down The node appears offline from within the Trustgrid portal. This indicates that the node is disconnected from the control plane either because it has shutdown or has been unable to send a heartbeat notification to Trustgrid within the past 10 minutes. Data Plane Down The node appears online from within the portal but reports it is unable to connect to one or more gateway nodes. This can be indicated by the Data Plane Status indicator when viewing the node in the portal, or by receiving a “Gateway Connectivity Health Check” failure event notification. Both of these only work if the Control Plane is currently working. Both Control and Data Plane Down In this situation the node appears down in the Trustgrid Portal and users/applications are unable to reach services across the data plane between the Gateway and Edge sites. This is the most common scenario. While the Data Plane is most critical for the services provided across the device, first priority should be restoring the Control Plane connection so that additional troubleshooting tools are available. Often this process also uncovers the reason the data plane is down. ","categories":"","description":"","excerpt":" This process is intended to help customer support personnel quickly …","ref":"/tutorials/operations-runbook/node-down-response/","tags":["node","troubleshoot","help"],"title":"Node Down Response"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/rewrite/","tags":"","title":"Rewrite"},{"body":" The below processes should be used to move traffic between sites in event of a complete site down scenario. This is handled by the Virtual Network Route Table.\nIn the examples below, xxxEdgeCluster is the primary site and xxx-edge3 is the secondary/disaster recovery site. Manual Failover When a customer has selected manual failover, a portal user will need to adjust the destination of all routes currently pointed at the failed site.\nFailing Over There will usually be routes for the nodes’ Virtual Management IP. These should not be changed in this process.\nIn the portal, navigate to Domain → Virtual Networks and then select the appropriate Virtual network.\nSelect the Routes panel from the left navigation bar.\nFilter the route table either using the node/cluster names or network to be failed over (shown below).\na. If there is more than one network that needs to be routed to the secondary site using node/cluster names to filter is more efficient Clear the destination field and start typing the name of the secondary site node/cluster. Select the appropriate node/cluster from the list. Click Save. Then select Review Changes.\nYou should see a modified route for each network you adjusted showing the previous and current destination. If everything looks correct click Apply Changes.\nIt may take 1-2 minutes for nodes to pull down the updated routing table. Once that has completed any new flow or connection will automatically be sent to the new destination node. If the node/cluster is still online at the primary site, and there are existing flows/connections they will persist at that site. To clear them restart the active node at the primary site. See the last step in the Forcing Failover section below for instructions. Failing Back To send traffic back to the primary site reverse the changes in the routing performed during the failover.\nAutomatic Failover When a customer has selected automatic failover between sites there should be no intervention required if the primary site goes offline. The route table will be configured with multiple routes with different metrics. When determining where to send virtual traffic a node will select:\nThe most specific route - meaning if there is a route for 192.168.100.1/32 and another for 192.168.100.0/24, the /32 route will be preferred With the lowest metric that is currently available - meaning this node has an active tunnel to the destination node/cluster Below reflects a typical automatic failover configuration for a network\nForcing Failover or Prevent Auto-Failback If it is necessary to move traffic to the secondary site without the primary site going offline follow the below process.\nAlso, if a failure of the primary site has occurred and you want to ensure traffic does not automatically return to that site if it comes online (e.g. it is unstable) you can follow the same process.\nIn the portal, navigate to Domain → Virtual Networks and then select the appropriate Virtual network.\nSelect Routes from the left navigation bar.\nFilter the route table either using the node/cluster names or network to be failed over (shown below)\na. If there is more than one network that needs to be routed to the secondary site using node/cluster names to filter is more efficient Adjust the metric so that the primary site is a higher number than the secondary site. The maximum metric value is 200. Click Save and navigate to Review Changes\nYou should see a change like below for each route adjusted. Click Apply Changes if all looks correct.\nIt may take 1-2 minutes for nodes to pull down the updated route table. At that point, they will route new flows/connections to the new destination.\nBecause the primary site is still online, you will need to restart the active node at that site to clear out any existing flows/connections.\na. If it’s a cluster, navigate to the cluster and then select the currently active node from the overview page. If a single node site, navigate directly to that node.\nb. From the toolbar select Restart\nc. Enter the node’s name and click confirm\nRestore Traffic to Primary Site To restore traffic to the primary site repeat the above steps but set the route for the primary site to have the lowest metric.\n","categories":"","description":"","excerpt":" The below processes should be used to move traffic between sites in …","ref":"/tutorials/operations-runbook/site-failover/","tags":["failover","help","troubleshoot"],"title":"Site Failover"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/troubleshoot/","tags":"","title":"Troubleshoot"},{"body":" The Trustgrid node console allows local console access to a Trustgrid Node whether a physical or esx node for the purposes of IP reconfiguration or network level troubleshooting and verification.\nAccessing the Trustgrid Console Utility Connecting to Trustgrid Local Console The following physical nodes can be connected via Keyboard and Monitor Netgate - HDMI Monitor output, USB Keyboard Protectli RM8B - VGA Monitor output, USB Keyboard Dell Precision 3240 compact - DisplayPort Monitor Output, USB Keyboard The following devices support connecting a serial cable connected to a laptop/desktop with the settings in the table below Device Serial Port Type Speed (bps) Data Bits Parity Stop Bits Flow Control Lanner NCA-1210 RJ45 115200 8 None 1 None Lanner NCA-1515 RJ45 115200 8 None 1 None Lanner NCA-1010 RJ45 115200 8 None 1 None Lanner NCA-1513 RJ45 115200 8 None 1 None VMware and Hyper-V based nodes can utilize the native console tools for each respective platform AWS and Azure nodes can be accessed via each providers Serial Console option. This may require enabling additional feature on the EC2 instance/virtual machine Logging In Login with username tgadmin and password of mac address of the wan nic of the device all lowercase including colons. Example 82:f5:48:a9:14:05 Finding the MAC Address If registered, the mac address can be seen on the node’s interface panel as the Hardware Address For Lanner NCA-1210 devices the serial number is the WAN MAC address without the colons. You’ll need to add the colons. AWS and Azure list the MAC address in their management portals AWS shows the MAC under the IP addresses section on the ENI properties Azure shows the MAC under properties of the virtual network interface. Note that they show the MAC in all upper case and with - instead of :. You will need to convert to lowercase and : when entering as the password Determining the MAC will vary for other hardware models Trustgrid Local Console Dashboard As seen below the console dashboard displays information on the current version of software the node is currently running as well as the connectivity/network status.\nThe below settings are only available on registered nodes. See Remote Console Registration for working with unregistered nodes. Network Status The network status section displays information about the node (name, domain, version, etc) as well as the current WAN IP address in CIDR format. Beneath this information it will display the health of the node’s control plane connectivity Field Name Description DNS Status Can the node resolve DNS requests with the configured DNS servers Cloud Controller Can the node connect to zuul.trustgrid.io on port 8443 Software Repository Can the node connect to repo.trustgrid.io on port 443 Configuration Endpoint Can the node retrieve updated configurations gatekeeper.trustgrid.io on port 443 Below is what is shown with successful connectivity: Connectivity all control plane services And this shows a node unable to communicate: Failed connectivity to control plane services Changing a Trustgrid Node WAN IP via Trustgrid Console After the IP address is changed locally and it connects to the Trustgrid Cloud Controller, the new IP address must be saved in the portal to make the change permanent. If the device is rebooted prior to that it will revert to the previous configuration. To change the nodes WAN IP address:\nEnter the console utility and login with the username tgadmin and the password of the mac address of the WAN interface of the device. Select Network Configuration from the main menu. If the Trustgrid service is unreachable this option will not be available. Use the Advanced Network Configuration option to modify the IP settings. The current settings will be displayed and you will be presented with two options, DHCP or Static IP. Selecting DHCP will cause the device to attempt to obtain an IP address from the DHCP server and restart the Trustgrid service. Selecting Static IP will open a dialog box where you can enter the IP address, netmask, gateway, and DNS server information. Adjust the settings as desired and use TAB to select OK to save the settings. The device will apply the changes and ask if you wish to save the changes permanently. Select Yes to save the settings. The Trustgrid service will be restarted. Use Back to return to the main menu. Once returned to the main menu you should be able to see if the node was able to successfully communicate with the Trustgrid control plane. Changing the Default Password The tgadmin user’s password can be changed by selecting option 3.\nYou will then need to enter the current password (mac address of wan nic all lowercase with colons) followed by the new password.\nAfter this password is changed it can only be reset if the device successfully connects to the Trustgrid control plane. Please ensure the password is appropriately documented for future use.\n","categories":"","description":"","excerpt":" The Trustgrid node console allows local console access to a Trustgrid …","ref":"/tutorials/local-console-utility/","tags":"","title":"Trustgrid Local Console Utility"},{"body":" Users page The Users panel is the primary panel for managing user identities and the policies attached to them. All changes in this panel require either the builtin-tg-acess-admin policy or similar permissions.\nAdding or Inviting Users Users can either be invited to the Trustgrid portal and utilize Trustgrid’s native authentication system, or be added and be authenticated by a customer configured Identity Provider (IdP).\nInviting Users For users that will utilize Trustgrid’s native authentication system, you will need to invite them with a valid email address.\nNavigate to User Management → Users Under Actions select Invite User Invite User action Enter the user’s valid email address and select the desired base policy (more can be attached later). Click Send Invite. You should see a confirmation that the invite was sent like the one below. The user will receive an email with a link to the Trustgrid Portal or similar. They will need to click said link. Once at the Portal, the user will need to click the Start a free trial option. The user must use the same email address that was invited to get access to your account. Click Start a free trial The user will be prompted for their email, name, password, and company. The user must use the same email address that was invited to get access to your account.\nEnter required information and click Sign Up A verification email will then be sent to the invited user’s email address. They will need to click the link in the email to verify their email and complete registration. After verifying their email address the user will be prompted to configure Multi-Factor Authentication (MFA). Trustgrid recommends using a one-time password MFA such as Authy or Google Authenticator. Scan the QR code with your app. Enter the passcode and click the Submit button. The user is returned to the login screen. Login with the newly created email, password, and MFA code. You will then be redirected back to the Trustgrid portal. Adding Users (with Identity Providers) If your account has an Identity Provider (IdP) configured as a Portal Auth Provider, you use the Add User button to create an identity for them within Trustgrid.\nSome IdP’s allow for users to be synchronized automatically making this step unnecessary Navigate to User Management → Users Click the Add User button Enter in the user’s email address. This must be the same email address the IdP sends back to Trustgrid, if unsure consult with your IdP Admin. Select your Identity Provider (if more than one) Select the desired base policy. More can be attached later. Click Save Add User Prompt The user can then navigate to the portal authentication domain associated with the IdP. They will be redirected to the IdP page and required to enter their username, password and MFA (if configured), then automatically sent back to the Trustgrid portal. Manage User Policies/Permissions Attaching Policies To attach/detach policies attached to a user:\nUnder User Management → User search for the target user and click their name. To add a new policy: Click the Attach Policy button Search for the desired policy then select it. Click Attach Removing Policies To remove a policy from a user:\nUnder User Management → User search for the target user and click their name. Click Detach located to the right of policy you wish to remove. View Effective Permissions To see what permissions a user currently has and what policy is providing that permission:\nUnder `User Management` → `User search` for the target user and click their name. In the right `Effective Permissions` pane, find the permission in question. These permissions are grouped by category. Each entry will show: Example effective permissions If the permission is allowed ✅, explicitly denied ❌, or not defined (both icons gray) The action name A short description of what the permission allows what policy grants/denies the user the permission Change a User Landing Page The Landing Page allows you to designate where a user is directed within the portal on initial login.\nThis is most useful for users that only need access to ZTNA Remote Access application at the /apps page or if you want them to automatically land on a specific page like /nodes.\nUnder User Management → User search for the target user and click their name. Enter in the desired landing page path (e.g. /apps) and click Save Change user landing page Managing Group Membership View a User’s Group Membership You can view all the Groups a user is a member of from the Groups panel. To change memberships you will need to use the User Management → Groups page. To view:\nUnder User Management → User search for the target user and click their name. Select the Groups panel on the left. Groups will be listed in a table in the main panel. Example group membership table Adding a User to Groups You can add a user to one or more group by:\nNavigate to User Management \u003e Users and click on the name of the user to add to groups. Select the Groups panel from the left navigation bar. Click the “Add to Group(s)” button. From the prompt select the group or groups you want to add the user to. If there are many groups you can start typing the name to filter the options. Add Groups prompt Click Save Removing a User from Groups You can remove a user from a group by:\nSelect the radio checkbox next to the group you wish to remove. From Actions, select Delete. Deleting a group membership When prompted confirm you want to delete the user. View a User’s Associated Identity Provider (IdP) If an Identity Provider is configured a user maybe associated with one or more IdP.\nTo view:\nUnder User Management → User search for the target user and click their name. Select the Identity Provider panel on the left. The identity Providers will be listed in a table in the main panel. If no IdP is listed this indicates the user is using the Trustgrid native authentication system. Example User Identity Provider table ","categories":"","description":"","excerpt":" Users page The Users panel is the primary panel for managing user …","ref":"/docs/user-management/users/","tags":"","title":"Users"},{"body":" Virtual networks define an overlay network and routes for layer 3 connectivity. Trustgrid nodes are then assigned to networks. Virtual network overlays work similarly to Amazon’s VPCs but can span between clouds, data centers, and the edge.\nVirtual Networks Concepts Overlay Example Virtual Networks - Layer 3 Trustgrid uses a virtual network to traffic between nodes. This avoids common challenges like conflicting subnets in large, non-centralized networks.\nInside and outside NATs are used to expose hosts for traffic\nRoutes may be configured on the nodes\nACLs can be applied\nSimple Host Communication An inside Nat on the edge node that maps 10.0.5.250 to 172.16.3.250 would allow the data center host (10.0.1.150) to communicate with 172.16.3.250 host using the address 10.0.5.250\nAn outside Nat on the edge node that maps 10.0.1.150 to 10.0.5.150 would allow the edge host (172.16.3.250) to communicate the data center host at 10.0.5.150.\nA route would have to be added to the default gateway of 172.16.3.0/24 for 10.0.5.150 to route traffic for 10.0.5.0/24 through the gw of the edge node (172.16.0.5) data interface.\nVirtual IP Addresses Through the use of inside and outside NAT rules, local IP addresses to the Trustgrid node may be exposed on the network through a Virtual IP Address. For instance, a local device may have a local IP address of 192.168.1.100, but you may want it to appear to other devices or applications on the virtual network as IP address 10.0.20.100. Virtual IP Subnets are also supported where each IP in a subnet is mapped to the corresponding IP in a virtual subnet.\nInside NAT Inside NATs are added to a network to expose hosts in the private network to authorized traffic in the virtual network. For example a host at 192.168.1.184/32 could be exposed as 172.16.1.184/32. Traffic from authorized edge nodes could then communicate with 172.16.1.184.\nOutside NAT The use of an outside NAT can eliminate the need to create routes on internal gateways. Outsides NATs translate address in edge (remote) private networks to a privately addressable local IP. For example a host at 172.16.10.184/32 could be translated to 192.168.1.184/32.\nRoutes Routes are used to specify the network interface to be used when accessing specific subnets.\nVirtual Network Attributes Field Name Description Name A unique name for the network. Can contain letters, numbers and - characters. Network CIDR Network CIDR that includes all desired virtual IP addresses.\nVirtual network defined routes can only point to destination CIDRs within this Network CIDR. This restriction can be overridden by defining routes at the node or cluster VPN \u003e Static routes level. Description A user friendly description of the virtual network NO-NAT Mode Enabled - Nodes attached to the this virtual network will not require traffic match defined inside and outside NATs to allow traffic to ingress from or egress to the local network. Disabled (default) - Nodes attached to this virtual network will require traffic match defined inside and outside NATs to allow traffic to ingress from or egress to the local network. Or, will require the traffic matching mode be set to allow either Inbound or Outbound traffic that does not match. ","categories":["concepts"],"description":"","excerpt":" Virtual networks define an overlay network and routes for layer 3 …","ref":"/docs/domain/virtual-networks/","tags":["domain","concepts","rewrite"],"title":"Virtual Networks"},{"body":" Create EC2 Target Group and add both Trustgrid gateways with the target being wireguard server port (Default UDP 51820) The health check should be set to http with a path of /status and override traffic port to be port 80.\nOnly the active member of the Trustgrid Cluster will respond as healthy to the health check.\nCreate NLB (Network Load Balancer) with listener set to configured UDP wireguard server port (Default 51820) and forwarding to the target group created above. The load balancer should be created as internet facing IPV4 and mapped to the Public facing subnets of the Trustgrid gateways. ","categories":"","description":"","excerpt":" Create EC2 Target Group and add both Trustgrid gateways with the …","ref":"/tutorials/deployments/aws-ha-cluster/","tags":"","title":"AWS Requirements for HA Wireguard Cluster"},{"body":" Create EC2 target group and add both Trustgrid application gateways with the target being TCP port 80. The health check should be for http and the path should be /status\nOnly the active member of the Trustgrid Cluster will respond as healthy to this check.\nCreate an ALB (Application Load Balancer) with the listener set to HTTPS and forwarding to the target group created above. Under secure listener settings apply the SSL Certificate provided by Trustgrid for the application gateways. ELBSecurityPolicy-2016-08 is recommended as the default security policy by AWS. The load balancer should be created as internet facing IPV4 and mapped to the Public facing subnets of the Trustgrid gateways.\n","categories":"","description":"","excerpt":" Create EC2 target group and add both Trustgrid application gateways …","ref":"/tutorials/deployments/aws-ha-ztna-gateway-cluster/","tags":"","title":"AWS Requirements for HA ZTNA Gateway Cluster"},{"body":" A VNC app is a ZTNA application that allows remote access to an internal VNC server. VNC servers can be hosted internally but exposed to authorized users.\nGeneral Field Name Description Name app name Description app description Icon the application’s icon (optional) to show in the application dashboard Connectivity Connectivity type:\nlocal to gateway - the application is hosted on the same network as the gateway remote node - the application is hosted on an edge node’s network virtual network - the application is accessible over the Trustgrid virtual network from the ZTNA gateway ZTNA Gateway - the ZTNA gateway node that will be used to connect to the application\nDestination Node - only available if connectivity type is Remote Node. The edge node with access to the application\nVRF - only available if connectivity type is Remote Node. The VRF used to connect to the application.\nInternal server hostname or IP - the internal hostname or IP address of the VNC server and port number\nVirtual Network - only available if connectivity type is Virtual Network. The virtual network that will be used to connect to the application\nClient Virtual IP - only available if connectivity type is Virtual Network -defaults to the virtual management IP of the ZTNA gateway if it exists. The source virtual IP address that will be used to connect to the application\nVirtual server hostname or IP - only available if connectifity type is Virtual Network. The destination virtual IP address and port number that will be used to connect to the application\nSecurity Identity Provider - the Identity Provider to authenticate users Click Add Application Click the Remote Desktop - VNC option Fill out all details in the sheet provided, then click Save when satisfied with the information entered ","categories":"","description":"","excerpt":" A VNC app is a ZTNA application that allows remote access to an …","ref":"/docs/applications/vnc-app/","tags":["applications","ztna"],"title":"VNC App"},{"body":"View the status of all Trustgrid services on our Statuspage Account\nWithin the Trustgrid Portal, hover over the username in the upper right corner and then select Status.\n","categories":"","description":"","excerpt":"View the status of all Trustgrid services on our Statuspage Account …","ref":"/help-center/trustgrid-service-status/","tags":"","title":"Check Trustgrid Services Status"},{"body":"The public IP address refers to the source IP address observed by the Trustgrid cloud when the control plane connections are established. This is the IP address after any NATs are applied to outbound internet traffic on the node’s WAN interface.\nNodes Table The public IP address is a default column in the Nodes table list. You can use search to filter the list to see the public IP of the desired node.\nExample Nodes table with public IP column Node Infovisor The public IP address is also listed in the infovisor panel accessible from the node detail page.\nPublic IP listed in infovisor ","categories":"","description":"How to find the public IP address of a Trustgrid node","excerpt":"How to find the public IP address of a Trustgrid node","ref":"/tutorials/find-ip-node/","tags":"","title":"Find the Public IP Address of a Node"},{"body":"","categories":"","description":"","excerpt":"","ref":"/release-notes/cloud/archive/2022/","tags":"","title":"2022"},{"body":"","categories":"","description":"","excerpt":"","ref":"/release-notes/cloud/archive/","tags":"","title":"Cloud Release Archive"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/architecture/","tags":"","title":"Architecture"},{"body":"Trustgrid is an edge platform that provides secure, reliable, and high-performance connectivity between distributed systems and applications. The platform is designed to simplify networking for distributed enterprises by providing a software-defined network (SDN) that operates as a virtual overlay on top of existing networks, enabling organizations to build and manage private virtual networks with ease.\nWith Trustgrid you can:\nDeploy nodes worldwide to establish private network connectivity between sites, data centers, and public clouds Provide simplified, secured, and compliance-friendly edge connectivity for your remote sites, customers, vendors, or partners requiring only outbound connectivity Manage fleets of edge devices from a centralized cloud-based console for configuration, monitoring, updates, and more Gain visibility into traffic across your network with integrated flow logs and live troubleshooting tools ","categories":"","description":"","excerpt":"Trustgrid is an edge platform that provides secure, reliable, and …","ref":"/getting-started/","tags":"","title":"Getting Started"},{"body":"\nUser Management Groups defined can be used to make Remote Access applications visible to users.\nTypes of Groups Trustgrid-Native Groups These groups are created in the Portal via the Add Group button. Membership is managed directly within the Portal by administrators.\nIdentity Provider-Synchronized Groups These groups are created based on Identity Provider (IdP) configuration for select IdPs (currently G Suite and Azure OpenID). The IdP can be configured to sync all or select groups, and the sync process will update the group membership automatically.\nif users are added to an IdP-synced group in the Trustgrid portal they will automatically be removed the next time they sync runs.\nGroup Management Manage Group Members (Trustgrid-native groups) The members of a group can be viewed from the group details page under the “Users” tab.\nThis tab can also be used to add or remove group members for Trustgrid-native groups.\nAdd Users to Group Navigate to the group’s detail page by going to User Management \u003e Groups and selecting the desired group. The Users tab should already be selected. Click the +Add Member button. Search for and select the email address of the desired user. Click Save. Optionally, repeat with additional users. Remove Users from Group Navigate to the group’s detail page by going to User Management \u003e Groups and selecting the desired group. The Users tab should already be selected. Select the radio button to the left of the desired users. From the Actions drop-down menu select Delete. When prompted confirm the removal by clicking Ok. Optionally, repeat with additional users. Manage Group Permissions Permissions can be granted to members of a group by attaching a policy to the group. This is done on the group details page under the “Permissions” tab.\nThe permissions tab will also show the effective permissions of all policies attached to a group.\nAttach Policy to Group Navigate to the group’s detail page by going to User Management \u003e Groups and selecting the desired group. Select the Permissions tab. Click the +Attach Policy button. Select the desired group. Click Attach Optionally, repeat with additional policies. Detach Policy from Group Navigate to the group’s detail page by going to User Management \u003e Groups and selecting the desired group. Select the Permissions tab. Locate the policy you wish to remove from the table of attached policies and click the Detach button to the right. ","categories":"","description":"","excerpt":"\nUser Management Groups defined can be used to make Remote Access …","ref":"/docs/user-management/groups/","tags":"","title":"Groups"},{"body":" Management logs document changes made to Trustgrid configurations and settings through the management API or portal. They can help with auditing, troubleshooting issues, and ensuring compliance.\n","categories":"","description":"","excerpt":" Management logs document changes made to Trustgrid configurations and …","ref":"/help-center/mgmt-logs/","tags":"","title":"Management Activity Logs"},{"body":" Operational logs show events related to the functioning of Trustgrid nodes including:\nEvents reported by the node via the control plane including state changes or issues that need investigation. Debug Logs that can be used to troubleshoot advanced issues with the assistance of Trustgrid support. ","categories":"","description":"","excerpt":" Operational logs show events related to the functioning of Trustgrid …","ref":"/help-center/ops-logs/","tags":"","title":"Node Operational Logs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/overview/","tags":"","title":"Overview"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/overview/","tags":"","title":"Overview"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/security/","tags":"","title":"Security"},{"body":" Changes to the following configurations are audited: API Cluster Node Domain Certificate Org Profile Invite Audits record the event type (add/remove/change), the user name, the IP address, and the date of the change Audits are kept for 30 days Audits can be downloaded as CSV on the operations page ","categories":"","description":"","excerpt":" Changes to the following configurations are audited: API Cluster Node …","ref":"/help-center/mgmt-logs/config-changes/","tags":"","title":"View Configuration Changes"},{"body":" View node update events on the Operations page Node update events are kept for 30 days You can download a CSV of the node updates from the Operations page All Trustgrid node agent updates and OS package updates are logged ","categories":"","description":"","excerpt":" View node update events on the Operations page Node update events are …","ref":"/help-center/mgmt-logs/node-update-events/","tags":"","title":"View Node Update Events"},{"body":" For every authentication event, we log: user agent user id user name IP address User authentication events include: Failed login attempts Successful login attempts API interactions Successful sign ups You can download all of the events for a 30 day period in the Operations page Authentication events are kept for 30 days If your organization is utilizing a third-party identity provider via SAML or OpenID, that provider is responsible for providing and storing authentication log records ","categories":"","description":"","excerpt":" For every authentication event, we log: user agent user id user name …","ref":"/help-center/mgmt-logs/user-authentication/","tags":"","title":"View User Authentication Events"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/alarm-filters/","tags":"","title":"Alarm Filters"},{"body":" Alarm Filters are used to determine which events trigger notifications and to define which channels should receive those notifications.\nAlarm filters have the following fields:\nField Name Description Name The name should be unique. Description The description is displayed in the alarm filters table. Enabled An alarm filter must be enabled for matching event to be sent to the selected channel. Deselecting the check box can be handy if you wish to suppress a specific type of alarm. Channels This section determines which channels matching alarms will be sent to. Criteria The criteria determine which events will match the filter. These conditions can be set as:\nAll (default) - All specified criteria must be true to match. Equivalent to a boolean AND condition. Any - Only one criteria must be true to match. Equivalent to a boolean OR condition. None - The specified criteria must be false to match. Equivalent to a boolean NOT of the criteria ANDed together. Node Name The “Node Name” criteria llows you to select one or more specific node names. Note, even if the filter is set to All, the filter will match any of the selected node names is associated with the event. Event Type The “Event Type” criteria determines which events will match the filter. Note, even if the filter is set to All, the filter will match any of the selected event types. Tag Matches The “Tag Matches” criteria allows you to use tag name/value pairs to determine if the filter should match events. For examples, you may what production devices to send to a high priority channel such as PagerDuty or OpsGenie. If your nodes have a tag to indicating “prod_status=production”, you can select that name/value pair from the list to properly filter your alarms.\nTag Match Any/All You can choose if multiple tags must match ALL or ANY of the selected tag criteria for the filter to match. For example:\nany would cover a scenario where you want to match say Environment=Prod OR Environment=Test. all would cover if you wanted a filter to match something like Environment=Prod AND Region=EAST Severity Each event type has a severity level associated with it. This filter will match any event with the selected severity type or higher. This is the only mandatory criteria.\nThe severity levels are:\nINFO WARNING ERROR CRITICAL For example, if you select the severity level of WARNING the filter will match WARNING, ERROR and CRITICAL events.\nSome events have a corresponding event that will automatically resolve the alert in the portal and in some channels such as PagerDuty. The corresponding event may have a different severity level, so make sure you select the lower severity for the criteria. e.g. Node Disconnect is a WARNING but Node Connect which resolves it is only INFO. So you’d need to select both Event Types and set the severity to INFO.\nContains Text This field will accept any single string of text to match to the contents of an event. For example, if all your gateways include -gw in the name you could enter that without quotes in the field and it would match any event that includes that text in the event payload. This criteria can also be used if there is another aspect of the node included in the event payload that doesn’t match the criteria above. To see the entire payload of an event configure a less specific payload and send to an email channel to see the JSON.\nThe event payload includes the node’s unique identifier (UID) which is a string of generated text and numbers. If your “Contains Text” criteria is too short, there is a chance a node UID will also match unexpectedly.\nCEL Expression CEL expressions allow logical expressions that evaluate to true or false to determine if a filter should match an alarm. See here for a detailed explanation. CEL Expressions CEL (Common Expression Language) is a simple expression language that allows more complex tests than simple equality checks.\nWhen an alarm filter has a CEL expression set, it will be compiled when saved. If the compilation fails, a validation error will appear at the top of the page.\nCEL expressions allow numerical comparisons, arithmetic, boolean operators, regular expressions, string matching, presence testing and list evaluation.\nEvents are provided inside a ctx object.\n{ \"details\": { \"alertId\": \"40e4a030-440a-4703-b33a-172416da4be2\" }, \"domain\": \"demo.dev.trustgrid.io\", \"eventType\": \"Data Plane Disruption\", \"expires\": 1699234335, \"level\": \"WARNING\", \"message\": \"Node demo-node via Internet path abnormally disconnected\", \"nodeId\": \"ccd5a29e-fdc0-43d6-9408-b4184100287e\", \"nodeName\": \"demo-node\", \"node\": { \"uid\": \"59838ae6-a2b2-4c45-b7be-9378f0b265f5\", \"org\": \"aad89024-5927-4ebd-97e2-3cc605c1da5f\", \"domain\": \"dev.dev.trustgrid.io\", \"fqdn\": \"demo-node.demo.dev.trustgrid.io\", \"lastip\": \"64.17.3.164\", \"last_connect\": 1699158287000, \"name\": \"demo-node\", \"state\": \"ACTIVE\", \"cluster\": \"\", \"tags\": { \"autoupdate\": \"true\", }, \"online\": true, \"shadow\": { \"reported\": { \"nic.ens160.duplex\": \"full\", \"node-core.version\": \"20231103-171711.d16963a\", \"node.upgrade.state\": \"COMPLETED\", \"repoConnectivity\": \"true\", \"dnsResolution\": \"healthy\", \"nic.ens160.mac\": \"00:50:56:8e:8a:03\", \"ztna-enabled\": \"true\", \"nic.ens192.mtu\": \"1500\", \"profile.name\": \"default\", \"nic.ens192.speed\": \"10000\", \"ssh.local\": \"false\", \"os.distro.id\": \"ubuntu\", \"nic.ens192.dhcp\": \"false\", \"netplan.saved\": \"true\", \"nic.ens192.ip\": \"10.20.10.50/24\", \"nic.ens192.duplex\": \"full\", \"nic.ens160.speed\": \"10000\", \"publishTime\": 1699210399513, \"package.version\": \"1.5.20231103-1880\", \"os.distro.version\": \"18.04.3 LTS (Bionic Beaver)\", \"domain.info.lastUpdate\": 1699145917, \"nic.ens192.gateway\": \"10.20.10.1\", \"os.arch\": \"amd64\", \"updateTime.enabled\": \"true\", \"nic.ens160.dns1\": \"172.16.11.4\", \"nic.ens160.mtu\": \"1500\", \"nic.ens160.ip\": \"172.16.22.50/24\", \"nic.ens160.gateway\": \"172.16.22.1\", \"nic.ens192.mac\": \"00:50:56:8e:c9:74\", \"version\": 1699145622, \"kvm-enabled\": \"false\", \"tpm.enabled\": \"false\", \"node.upgrade.completed.tstamp\": 1699034170, \"startup.error\": \"true\", \"nic.ens160.dhcp\": \"false\" } }, \"device\": { \"mac\": \"00:50:56:8E:AA:28\", \"model\": \"esx\", \"vendor\": \"vmware\" }, \"location\": { \"continent_name\": \"North America\", \"zip\": \"80301\", \"calling_code\": null, \"city\": \"Boulder\", \"ip\": \"64.17.3.164\", \"latitude\": 40.04801940917969, \"continent_code\": \"NA\", \"type\": \"ipv4\", \"country_code\": \"US\", \"country_flag_emoji_unicode\": null, \"country_name\": \"United States\", \"is_eu\": false, \"connection\": { \"asn\": 27325, \"isp\": \"Zcolo\" }, \"country_flag_emoji\": null, \"location\": { \"Languages\": [ { \"name\": \"English\", \"native\": \"English\", \"code\": \"en\" } ], \"capital\": \"Washington D.C.\", \"geoname_id\": 5574991 }, \"region_name\": \"Colorado\", \"country_flag\": null, \"longitude\": -105.20680236816406, \"region_code\": \"CO\" }, \"type\": \"Node\", \"tgrn\": \"tgrn:tg::nodes:node/59838ae6-a2b2-4c45-b7be-9378f0b265f5\", \"created_at\": 1552940922, \"config\": { \"cluster\": { \"master\": true }, \"gateway\": { \"clients\": [], \"monitorHops\": true, \"maxmbps\": 1001, \"cert\": \"proxy.dev.trustgrid.io\", \"type\": \"private\", \"connectToPublic\": true, \"udpPort\": 8443, \"enabled\": false, \"master\": false, \"port\": 8442, \"paths\": [], \"udpEnabled\": true, \"host\": \"12.244.52.245\", \"maxClientWriteMbps\": 1000 }, \"snmp\": { \"port\": 161, \"interface\": \"ens160\", \"authProtocol\": \"SHA\", \"enabled\": true, \"privacyProtocol\": \"DES\", \"engineId\": \"7779cf92165b42f380fc9c93c\", \"username\": \"myuser\" } } }, \"orgId\": \"aad89024-5927-4ebd-97e2-3cc605c1da5\", \"receivedTime\": 1699147935, \"subject\": \"Node\", \"timestamp\": 1699147935, \"_ct\": \"2023-11-05T01:32:15.471Z\", \"_md\": \"2023-11-05T01:32:15.471Z\" } Nested values can be referenced using a ..\nSome common tests include:\nCheck if a node is a gateway: has(ctx.node.config.gateway) \u0026\u0026 ctx.node.config.gateway.enabled Check if a node has production in the name: ctx.node.name.contains(\"prod\") Check if a node is not clustered: !has(ctx.node.cluster) || ctx.node.cluster == \"\" Check if a node is in Texas or Colorado: ctx.node.location.region_code == \"TX\" || ctx.node.location.region_code == \"CO\" Check if a node is a virtual machine: ctx.node.device.vendor == \"vmware\" Check if a node is up to date: ctx.node.shadow.reported[\"package.version\"] \u003e= \"1.5.20231103-1880\" The full CEL definition can be found at GitHub.\nYou can use this CEL playground to test out expressions.\n","categories":"","description":"","excerpt":" Alarm Filters are used to determine which events trigger …","ref":"/docs/alarms/alarm-filters/","tags":["alarms","alarm filters"],"title":"Alarm Filters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/alarms/","tags":"","title":"Alarms"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/alert-suppression/","tags":"","title":"Alert Suppression"},{"body":" Maintenance and other planned disruptive activity can generate a large amount of alerts and notifications for no value. The Trustgrid system allows you to define alert suppression windows during which no alerts are triggered.\nDefine Alert Suppression Window Navigate to Alarms -\u003e Alert Suppression.\nEnter a message to users. During the window this will be displayed on the dashboard when users first log in.\nSelect a duration between 1 and 4 hours for your window. From the calendar select the date that you want the window to start. From the drop down, select the hour that you want the window to begin. This time will be set based off your browser’s current timezone setting. This uses the 24 hour clock (e.g. 0 = 12 am, 14 = 2pm, etc.) Click the Schedule button. You will see a notification that the window has been scheduled and a notice of when it will begin. To update a scheduled window, make the desired changes and click the Update button.\nCancel Alert Suppression Window Navigate to Alarms -\u003e Alert Suppression.\nYou should see a notification with the scheduled window at the top. Confirm this is the window you wish to cancel.\nClick the Cancel Schedule button.\nYou should be notified that the window has been canceled. Limitations Only a single window can be scheduled at any one time.\nSuppression windows apply to all devices across the entire organization.\n","categories":"","description":"","excerpt":" Maintenance and other planned disruptive activity can generate a …","ref":"/docs/alarms/alert-suppression/","tags":["alert suppression","alarms"],"title":"Alert Suppression"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/channels/","tags":"","title":"Channels"},{"body":" A channel defines one or more method of delivering alert notifications to external systems.\nNotification Delivery Channels Email Channel One or more email address (comma separated) that will receive messages from alerts@trustgrid.io\nPagerDuty Channel Trustgrid will generate an incident via the PagerDuty API if provided a valid API routing key. To procure a routing key, create a service in PagerDuty and add an Events API V2 integration. After adding the integration, the Integration Key is your API routing key.\nCopy the routing key to the Trustgrid channel definition.\nOpsGenie Channel Trustgrid will generate an incident via the OpsGenie API if provided a valid API key with read and create and update permissions.\nFor both PagerDuty and OpsGenie the integration will automatically resolve issues if an event occurs that negates the initial triggering event. For example, if an event is triggered by a Node Disconnect and the node reconnects, the Node Connect event will resolve the incident via the API. Slack Channel Trustgrid can post the event data to a configured channel via an incoming webhook. First, create the webhook, and then copy the webhook URL into the Trustgrid channel definition.\nOptionally, you can configure the slack event to be posted with formatting to make it easier to read as opposed to raw JSON. Slack format option checkbox Microsoft Teams Channel Trustgrid can post event data to a configured Teams channel via an incoming webhook. First, create the webhook, and then copy the webhook URL into the Trustgrid channel definition.\nGoogle Chat Channel Trustgrid can post event data to a configured Google Chat (gChat) space via an incoming webhook. First create the webhook and then copy the webhook URL into the Trustgrid channel definition.\nOnly a single Slack or Teams channel, or Google Chat Space can be targeted by a Trustgrid channel definition. However, you can create multiple Trustgrid channels if you wish to post the event data to more than one Slack/Teams channel. Example Event Data The event data is delivered in JSON, as shown below, which depending on the integration can allow for additional parsing.\nExample Event JSON { \"nodeName\": \"edge1\", /* Name of the node that the event relates to */ \"expires\": 1604801325, /* Unix epoch timestamp when this event will expire and automatically resolve */ \"level\": \"INFO\", /* Alert severity */ \"eventType\": \"Node Disconnect\", /* Matches to the event types */ \"source\": \"EKG\", \"message\": \"Node disconnected\", \"type\": \"Alert\", \"orgId\": \"8e1c2c05-2c86-4b1b-a0cc-############\", \"GS1PK\": \"Org#8e1c2c05-2c86-4b1b-a0cc-############\", \"_ct\": {}, \"uid\": \"1jwV1R2R6itQUjPza9yqTE8a8zu\", \"GS1SK\": \"Alert#1jwV1R2R6itQUjPza9yqTE8a8zu\", \"_md\": {}, \"domain\": \"example.trustgrid.io\", \"SK\": \"Alert#Node Disconnect\", \"_tp\": \"Alert\", \"PK\": \"Node#0895b104-5434-447b-8577-############\", \"state\": \"UNKNOWN\", \"nodeId\": \"0895b104-5434-447b-8577-############\", \"timestamp\": 1604714923, /* Unix epoch timestamp when the event was first triggered */ \"channelID\": \"bc47ca84-1d04-454b-bedc-a55d1a917c0e\", /* The unique id of the channel used to deliver this message. */ \"notes\": [\"Text from Description Field\"], \"alarmIDs\": [ /* A list of alarm filters that matched the event */ \"be324011-4bea-4392-a06a-541646decd39\" ] } Example Formatted Slack Event Below is an example of a formatted Slack event. Example Slack Event ","categories":"","description":"","excerpt":" A channel defines one or more method of delivering alert …","ref":"/docs/alarms/channels/","tags":["alarms","channels"],"title":"Channels"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/cluster-health/","tags":"","title":"Cluster Health"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/cluster-management/","tags":"","title":"Cluster Management"},{"body":" A healthy cluster should have two online Trustgrid nodes in a healthy state. The Trustgrid control plane can monitor the member nodes and generate events when their state changes such that the health of the cluster is impacted.\nBasics These events are based on the information reported by each member node to the control plane. Because of this:\nThere can be a delay between a change and the Cluster Site Health events. Use the Validate Health action to get the most up-to-date health status.) If member nodes have issues preventing control plane connections but not impacting data plane or other services the events may not accurately reflect the state of the cluster. Cluster Health State The Trustgrid will now display one of three states in the portal:\nState Meaning Healthy Both members are online with a single member active. Unhealthy There is at least one online and healthy member of the cluster with the active role AND one or more of these conditions is true:\nOne of the cluster members is offline, unhealthy or disabled There are two cluster members with the active role Offline Both nodes are offline, unhealthy or disabled.\nForce Health Validation The cluster health state is evaluated when certain events occurs, such as a member disconnecting/reconnecting or the member health state changes. Occasionally this can lead to the state being reported incorrectly or a delay before the proper state is displayed.\nIf you wish to force the health state to be re-evaluated you can use the “Validate Health” command under Actions on the Cluster Overview panel.\nValidate Health action ","categories":"","description":"","excerpt":" A healthy cluster should have two online Trustgrid nodes in a healthy …","ref":"/docs/clusters/cluster-health/","tags":["concepts","clusters","cluster health","cluster management"],"title":"Cluster Site Health State"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/clusters/","tags":"","title":"Clusters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/event-types/","tags":"","title":"Event Types"},{"body":"This page lists all event types that can be generated by Trustgrid nodes. Events are alphabetized and grouped by their filter type. For events that have both trigger and resolution states, the trigger severity and resolution severity are shown.\nContents All Gateways Disconnected All Peers Disconnected BGP Peer Connectivity Certificate Expiring Cluster Failover Configuration Update Failure Connection Flapping Connection Timeout Data and Control Plane Disruption Data Plane Disruption Deregister DNS Resolution Gateway Connectivity Health Check Gateway Ingress Limit Reached Gateway UDP Tunnel Error Metric Threshold Violation Network Error Network Health Check Networking Framework Memory Management Node Connect/Disconnect Node Delete Node Stop Error Order Commented Order Created Repo Connectivity SSH Lockdown Unauthorized IP Event Types All Gateways Disconnected Trigger Severity: WARNING\nDescription: This event will be triggered if an edge node loses connectivity to all its available gateways.\nAll Peers Disconnected Trigger Severity: WARNING\nDescription: This event will be triggered if a node is configured as a gateway and it loses connectivity to all its configured edge nodes.\nBGP Peer Connectivity Trigger Severity: ERROR\nResolution Severity: INFO\nTrigger Message: BGP peer has disconnected\nResolution Message: BGP peer has re-connected\nDescription: This event is triggered when a BGP peer disconnects, and resolved when the BGP peer reconnects.\nCertificate Expiring Trigger Severity: WARNING\nDescription: Alerts when a certificate uploaded via Portal → Certificates will expire within 3 months.\nCluster Failover Severity: INFO\nMessages:\nNode is the active cluster member Node is no longer the active cluster member Description: Sent by a node when it claims or releases the active role in a cluster.\nConfiguration Update Failure Severity: INFO\nMessage: Unexpected error pulling the most recent configuration from the cloud endpoint\nDescription: Indicates the node is unable to connect to the configuration REST API endpoint within the Trustgrid Control Plane. Verify all required communication is allowed to Control Plane.\nConnection Flapping Trigger Severity: WARNING\nResolution Severity: INFO\nDescription:\nTrigger: Alerts when a node disconnects and reconnects 10 times within 5 minutes. A follow up alert will be sent after each subsequent 120 disconnect/reconnects. Resolution: This alert will be sent when a node’s “Connection Flapping” issue has been resolved. Connection Timeout Trigger Severity: ERROR\nDescription: Alerts when a node does not reconnect after a profile update has been pushed to the node.\nData and Control Plane Disruption Trigger Severity: ERROR\nMessage: Data and Control plane connection is up/down\nDescription: Generated when a node cannot establish a connection to the Trustgrid control plane and all its configured data plane gateways. If clustered this will mark the node as unhealthy triggering a cluster failover.\nData Plane Disruption Trigger Severity: WARNING\nMessages:\n(No specific message for unexpected tunnel termination) Gateway nodename removed from the domain Description:\nThis event will be triggered if a data plane tunnel is terminated unexpectedly. If a node acting as a gateway (public, private or hub) is disabled or the gateway service is disabled all other nodes in the domain will log this event. Deregister Severity: INFO\nMessage: Device was deregistered from the console\nDescription: Event is sent if a user with console access runs the deregistration process\nDNS Resolution Trigger Severity: ERROR\nMessage: DNS resolution failed/re-established\nDescription: Once per hour the node will attempt to resolve a trustgrid.io DNS address using the configured DNS servers. This event is triggered if the node is unable to resolve the requested address.\nGateway Connectivity Health Check Trigger Severity: CRITICAL\nResolution Severity: INFO\nDescription:\nTrigger: Alerts when an edge node is unable to communicate with a gateway node. Resolution: Alerts when an edge node reestablishes connectivity to a gateway node after a failure is reported. Gateway Ingress Limit Reached Trigger Severity: ERROR\nDescription: Alerts when a gateway node’s ingress limit is above 95 percent utilization for two minutes straight.\nGateway UDP Tunnel Error Trigger Severity: ERROR\nResolution Severity: INFO\nTrigger Message: UDP Tunnel has timed out for node=\u003cpeer-node\u003e and endpoint=\u003cpeer-ip\u003e:\u003cpeer-port\u003e\nResolution Message: UDP Tunnel connection has been re-established for node=\u003cpeer-node\u003e and endpoint=\u003cpeer-ip\u003e:\u003cpeer-port\u003e\nDescription:\nTrigger: Alerts when a UDP tunnel times out after not receiving the keep alive packet for 2 minutes (default gateway timeout). Resolution: Event generated when a previously disconnected UDP tunnel is re-established and traffic should flow through it again. Metric Threshold Violation Trigger Severity: ERROR\nResolution Severity: INFO\nDescription:\nTrigger: Alerts when a node cpu, ram, disk, or latency configured metric threshold is violated. Resolution: Alerts when a previously reported threshold violation has been cleared. Network Error Severity Levels: CRITICAL, ERROR, WARNING\nMessages and Descriptions:\nCRITICAL: Stale ARP detected - Alerts when the active node in a cluster detects another MAC address responding to ARPs for a configured cluster IP address. This can occur briefly during a failover if the standby node begins arping before the previous active node releases that role. Other causes include an IP conflict, proxy ARP configured on another device on that network, or the attached switch not updating its ARP cache. ERROR: Unable to create/update Azure IP configuration for nic=LAN. Error Code=\u003cAzure error code\u003e - Alerts when a node is unable to create or update an Azure Cluster IP configuration. The error from the Azure API is included in the event. WARNING: Interface {OS interface name} is running with half-duplex - Alerts if an interface has been detected running at half-duplex. This is almost always a result of a failure to auto-negotiate the speed/duplex and can result in poor performance. Network Health Check Trigger Severity: ERROR\nMessage: Interface {OS interface name} is down / All interfaces are up\nDescription: Generated when link is lost on a configured interface. This is generated even if the interfaces is set with the “Ignore Health Check” setting enabled. Note: Interfaces with APIPA addresses are ignored.\nNetworking Framework Memory Management Trigger Severity: ERROR\nMessage: The networking framework has exhausted all allocated memory. Please contact support@trustgrid.io to notify of this issue.\nDescription: Alerts if the Java Virtual Machine the Trustgrid node service uses runs out of available memory.\nNode Connect/Disconnect Trigger Severity: WARNING (Disconnect)\nResolution Severity: INFO (Connect)\nDescription:\nTrigger (Disconnect): Alerts when a node disconnects from the control plane. Resolution (Connect): Alerts when a node connects to the control plane. Node Delete Severity: WARNING\nMessage: Node deleted\nDescription: Event generated whenever a node is deleted.\nNode Stop Error Severity: ERROR\nMessage: Failed to stop the Node service cleanly\nDescription: Indicates that the Trustgrid service did not stop normally prior to this instance starting.\nOrder Commented Severity: INFO\nDescription: Alerts when a provisioning order case has been commented.\nOrder Created Severity: INFO\nDescription: Alerts when a new provisioning order has been created.\nRepo Connectivity Trigger Severity: ERROR\nResolution Severity: INFO\nTrigger Message: Repo connectivity failed\nResolution Message: Repo connectivity re-established\nDescription:\nTrigger: Alerts when a node cannot connect to the Trustgrid update repository. Resolution: Alerts when a node re-establishes connectivty to the Trustgrid update repository. This event clears the Repo Connectivity error alert. SSH Lockdown Trigger Severity: ERROR\nResolution Severity: INFO\nTrigger Message: SSH allowing connections from non local address and port\nResolution Message: SSH listening only on local address and port\nDescription:\nTrigger: Alerts when SSH on an appliance-based node is configured to listen on any IP other than local host (127.0.0.1). Resolution: Alerts when SSH on an appliance-based node is properly locked down. This event clears the SSH Lockdown error alert. Unauthorized IP Trigger Severity: WARNING\nDescription: Alerts when a node’s public IP has been locked but the connection to the control plane comes from a different IP.\n","categories":"","description":"","excerpt":"This page lists all event types that can be generated by Trustgrid …","ref":"/docs/alarms/event-types/","tags":["event types","events","alarms"],"title":"Event Types"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/events/","tags":"","title":"Events"},{"body":" Production status tags are used for for organizing large Trustgrid deployments.\nIt is recommended that customers use a tag to indicate if nodes are currently in production or not. For example, you may wish to have a tag such as prod_status with possible values like\ndeploying for devices still being deployed production for devices actively in user decommission for devices that are being removed It’s important to have these tag names and values be consistent within the organization including case. Production and production would be viewed as two different values, as an example. ","categories":"","description":"","excerpt":" Production status tags are used for for organizing large Trustgrid …","ref":"/docs/nodes/shared/tags/prod-status-tag/","tags":"","title":"Production Status Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/tag/","tags":"","title":"Tag"},{"body":" Events are emitted from nodes and from the Trustgrid control plane when actionable things happen. Events are the basis for alarms and notifications.\nEvents can be viewed for individual nodes by navigating to Events under the History section.\nEvents for the entire organization can be viewed by navigating to Events under the Alarms section.\nClicking the Test button will send the event through your configured alarms to help verify channels are configured as expected.\nEvent Times Field Name Description Generated Time The time the event was created. Received Time The time the event was received by the control plane. This can be later than the generated time in the event of a network disruption, for eample. ","categories":"","description":"","excerpt":" Events are emitted from nodes and from the Trustgrid control plane …","ref":"/docs/alarms/events/","tags":["events","alarms"],"title":"Events"},{"body":"","categories":"","description":"","excerpt":"","ref":"/release-notes/cloud/archive/2021/","tags":"","title":"2021"},{"body":"\u003c!DOCTYPE html\u003e Redirecting... If you are not redirected automatically, follow this link to the new page.\n","categories":"","description":"","excerpt":"\u003c!DOCTYPE html\u003e Redirecting... If you are not redirected …","ref":"/docs/api/","tags":"","title":""},{"body":"Nodes are available in two form factors:\nAppliance - This is a combination of a fully managed operating system and Trustgrid software pre-installed. Agent - This is a software package that can installed on supported operating systems. Users can install additional software and configure the operating system as needed. Functionality Agent Appliance Gateway Capabilities None Data Plane or ZTNA Operating System Multiple Supported OS, install additional software Fully managed OS and Trustgrid service, no additional software permitted Updates Managed by user via OS native tools OS and Trustgrid updates managed via Trustgrid Interface IP Management Managed by user via OS native tools Configurable via Trustgrid portal or local console Layer 3 VPN Single Virtual Network connectivity Support for multiple Virtual Networks Layer 4 Proxy Full Support Full Support Compute Commands only Commands, Containers or VMs supported ","categories":"","description":"","excerpt":"Nodes are available in two form factors:\nAppliance - This is a …","ref":"/docs/nodes/agent-v-app/","tags":"","title":""},{"body":"Below shows how to manage password and MFA settings for organizations relying on native Trustgrid user accounts, instead of a custom Identity Provider. These instructions assume you can authenticate successfully with your Trustgrid account. If not you will need to work with Trustgrid support.\nChange Password To change your Trustgrid password:\nLogin to the Trustgrid portal using your current password and provide your MFA code From your user profile dropdown, select “Security” Security menu option Provide your current password, enter a new password twice, and click submit. Change password prompt Change MFA To change your multi-factor authentication (MFA) application:\nLogin to the Trustgrid portal using your current password and provide your MFA code From your user profile dropdown, select “Security” Security menu option Scan the provided QR code with your new MFA application Enter the Authenticator Code provided by your new MFA application Enter your current password and click submit. Change MFA prompt If you are unable to login to the Trustgrid portal you will need to work with Trustgrid support to regain access Reset MFA Users with the users::modify permission, such as those with the builtin-tg-access-admin policy, can reset another user’s MFA by following the steps below:\nLogin to the Trustgrid portal using your current password and provide your MFA code Navigate to User Management \u003e Users Select the user you want to reset and select the “Reset MFA” option from the Actions drop down. Reset MFA prompt The user will be required to reconfigure MFA on their next login. This action only impacts MFA configured for users in the Trustgrid user database. It does not impact MFA configured for users in your identity provider. ","categories":"","description":"Managing your password and MFA settings for your Trustgrid user account.","excerpt":"Managing your password and MFA settings for your Trustgrid user …","ref":"/docs/user-management/users/account-mgmt/","tags":"","title":"Trustgrid User Account Management"},{"body":" The setting below should be changed via the Trustgrid portal interface configuration if at all possible. These tools should only be used if the correct configuration is preventing successful communication to the control plane.. Modify Network Settings If the Trustgrid service is unreachable the normal Network Configuration will be unavailable and it may be necessary to manually edit the network settings on the device to change the IP and DNS configuration. This can be done via the Advanced Network Configuration \u003e Modify Network Settings option.\nThe file you are editing is a netplan configuration file. Only the WAN/outside interface should be configured via Netplan as all other interfaces are managed by Trustgrid. The file format is YAML so it is important that all sections are indented correctly. Each level is two spaces.\nFrom the Advanced Network Configuration select the Modify Network Settings option Modify Network Settings option The file will be opened in a basic text editor. Use the arrow keys to navigate to the correct section and edit as needed. Once complete use TAB to move to OK (or Cancel to exit without saving). Edit the file You will be prompted to apply the changes. Select Yes to apply the changes. Apply the changes You will then be asked if you want to save the changes permanently. Select Yes to save the changes. Save the changes The system will apply the changes and wait about 20 seconds for the network to stabilize. Wait for the network to stabilize After editing the file the change must be applied and then the Trustgrid service restarted. Deleting the runtime file A temporary file is created when the network settings are changed but not permanently saved. If this file exists you will see an option to delete it from the Advanced Network Configuration menu. Selecting this option will delete the file and the changes will be lost. Delete the Netplan Runtime File Change Interface Speed/Duplex By default all interfaces are set to auto-negotiate speed and duplex settings. However, if the other interface is also set for auto negotiate it is common to end up with mismatched settings. (e.g. the port is configured for 100 full and the interface negotiates to 100 half) This can lead to performance problems and interface errors until the correct settings are hard set on the interface.\nFrom the Advanced Network Configuration select the Change Interface Speed/Duplex option Select the desired interface from the list. Select the desired speed from the list. Select the desired duplex from the list. Select save to apply the changes. Change Interface MTU By default all interfaces set themselves to the typical MTU size for their environments (1500 for physical, VMware and Hyper-V, 9000 for AWS and Azure). However, if any device between the Trustgrid node and the resources it connects to (both control and data plane) is configured to use a smaller MTU size then this can cause problems.\nTo make the below change permanent it will be necessary to update the interface settings in the Trustgrid portal/api.\nIf the node is rebooted prior to updating this setting the change will be lost. If the node service is restarted a prompt will appear on the interface panel to import and save the current configuration. To change the MTU size of the interface:\nFrom the Advanced Network Configuration select the Change Interface MTU option Select the desired interface from the list. Enter the desired MTU size and select OK to apply the changes. ","categories":"","description":"For changing IP, Speed/Duplex and MTU when not possible via control plane","excerpt":"For changing IP, Speed/Duplex and MTU when not possible via control …","ref":"/tutorials/local-console-utility/advanced-network-config/","tags":"","title":"Advanced Network Configuration"},{"body":"The arping tool allows you to send an ARP request to a specific IP address on a local interface. This tool is useful for troubleshooting connectivity issues such as confirming if the interface is in the same layer 2 broadcast domain as the target IP address.\nUsing ARP Ping Login to the Trustgrid portal and navigate to the Node from which you want to send an ARP request. Select Interfaces under the Network section. Then from the dropdown select the interface you want to send the ARP request from. Click the ARP Ping button. Confirm the interface ID and set the IP address to ping. Click Execute to send the ARP request. The output will display the ARP response. If an ARP response is returned you should see a single MAC address returned. If multiple MAC addresses are returned this indicates an IP conflict on the network. Example output of successful arping If no ARP response is returned you will see a timeout message. This indicates that the IP address is not in the same layer 2 broadcast domain as the interface. Example output of arping timeout ","categories":"","description":"Address Resolution Protocol (ARP) Ping","excerpt":"Address Resolution Protocol (ARP) Ping","ref":"/tutorials/interface-tools/arping/","tags":"","title":"ARP Ping Interface Tool"},{"body":"Deploying the Trustgrid appliance requires certain resources to be created in Azure before the appliance VM can be deployed. This guide will walk through deploying those prerequisite resources using the Azure CLI (az) commands and then deploying the Trustgrid appliance VM itself.\nSee AZ CLI Example Walkthrough to see the output of running the below commands, and see how you could create the Azure Appliance Requirements with the az cli in advance if they do not exist.\nPrerequisites In addition to the Azure Appliance Requirements you will need:\nAzure CLI installed or access to Azure Cloud Shell and logged in with az login SSH public key Deploy Azure VM as Trustgrid Appliance First, Ensure you are authenticated to Azure and have selected the desired subscript using az account set --subscription \"MySubscription\" and ensure all the Azure Appliance Requirements exist before proceeding.\nDeclare Required Variables The below commands are presented in Bash syntax for compatibility with other operating systems. The Azure Cloud Shell can be changed to Bash mode, but if you prefer Powershell you’ll need to remove the export part of the command and add a $ to each variable name. e.g. export location=\"centralus\" needs to be input as $location=\"centralus\" Variable Example Bash Command Description location export location=\"centralus\" Change centralus to the desired Azure region for deploying resourcesSee the table of supported regions for locations with the required Trustgrid image published resourceGroup export resourceGroup=\"myResourceGroup\" Change myResourceGroup to the name of your target resource group vNetName export vNetName=\"myVnet\" Change myVnet to the name of your target virtual network where the Trustgrid appliance will be connected outsideSubnet export outsideSubnet=\"outside\" Change outside to the name of your target WAN subnet. This must exist in the virtual network defined by myVnetName insideSubnet export insideSubnet=\"inside\" Change inside to the name of your target LAN subnet. This must exist in the virtual network defined by myVnetName name export name=\"myNode\" Change myNode to the desired name of your Trustgrid appliance virtual machine being created size export size=\"Standard_B2s\" Change Standard_B2s to the desired VM size. See Instance sizes for supported options and sizing recommendation. osDiskSize export osDiskSize=30 Change 30 to the desired size in GB for the OS disk. Minimum recommended is 30GB. Here are all the commands together without values so that you can copy (a button will appear if you hover in the top right), edit and paste into your terminal.\nexport location=\"\" export resourceGroup=\"\" export vNetName=\"\" export outsideSubnet=\"\" export insideSubnet=\"\" export name=\"\" export size=\"Standard_B2s\" export osDiskSize=30 Capture Latest Trustgrid Image ID export imageID=$(az sig image-version list-community \\ --public-gallery-name trustgrid-45680719-9aa7-43b9-a376-dc03bcfdb0ac \\ --gallery-image-definition trustgrid-node-2204-prod \\ --location $location \\ --output json 2\u003e/dev/null | jq -r 'sort_by(.name)| reverse | .[0].uniqueId') The above command sets imageID to the latest Trustgrid image ID from the Trustgrid image gallery in the Azure region specified by location.\nYou can use the command echo $imageID to see the result. it should look something like the below:\nsales@Azure:~$ echo $imageID /CommunityGalleries/trustgrid-45680719-9aa7-43b9-a376-dc03bcfdb0ac/Images/trustgrid-node-2204-prod/Versions/2.17.1 Prepare SSH Key in Azure After registration, SSH is only accessible via the Trustgrid portal, but Azure requires an SSH key to be associated with the VM to allow SSH access on creation.\nThere are a few ways to handle this in Azure, but it is important you end up with a variable sshKeyName containing the name of an existing SSH key resource in Azure.\nThe SSH public keys in the examples below are not valid and are for demonstration purposes only. Reference an Existing Azure SSH key resource If you have an existing SSH key resource in Azure you can export its name as a variable:\nexport sshKeyName=\"MyKeyName\" Create new key and Azure SSH key resource The below example creates a new SSH key pair and uses that to create a new Azure SSH key resource associated with the resource group:\nsales@Azure:~$ export sshKeyName=\"myNewSSHKey\" az sshkey create --name $sshKeyName --resource-group $resourceGroup --location $location No public key is provided. A key pair is being generated for you. Private key is saved to \"/home/sales/.ssh/1698355223_61326\". Public key is saved to \"/home/sales/.ssh/1698355223_61326.pub\". { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DOCSEXAMPLE/providers/Microsoft.Compute/sshPublicKeys/myNewSSHKey\", \"location\": \"eastus\", \"name\": \"myNewSSHKey\", \"publicKey\": \"ssh-rsa ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6fak3eFAKEKEY8uRMxw+GfkT4xFGkUlFakeyDTNeM59C3z7g1cTtABCDEF12345678910ABCDksVaNfFakeKeyInHere+UoXUQtDZghF38I6t7S58xvZX7Gdr+W4qvlhLP7YYQXdMwFakEyXoS+ZrmdFakeyZZFakeKeyi2V8U1tzlvF5M= generated-by-azure\", \"resourceGroup\": \"DOCSEXAMPLE\", \"tags\": null, \"type\": null } Note the location where the Private key was saved and ensure you save that key somewhere secure just in case SSH access is required later. Without the Private key, the public key is unusable. Here is the command without output or values\naz sshkey create --name $sshKeyName --resource-group $resourceGroup --location $location Create new Azure SSH Key resource with existing public key If you have an existing SSH key pair already, you can import the public key to create a new Azure SSH key resource:\nsales@Azure:~$ az sshkey create --name $sshKeyName --resource-group $resourceGroup --location $location --public-key \"ssh-rsa ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6fak3eFAKEKEY8uRMxw+GfkT4xFGkUlFakeyDTNeM59C3z7g1cTtABCDEF12345678910ABCDksVaNfFakeKeyInHere+UoXUQtDZghF38I6t7S58xvZX7Gdr+W4qvlhLP7YYQXdMwFakEyXoS+ZrmdFakeyZZFakeKeyi2V8U1tzlvF5M= existing-key\" { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DOCSEXAMPLE/providers/Microsoft.Compute/sshPublicKeys/myNewSSHKey\", \"location\": \"eastus\", \"name\": \"myNewSSHKey\", \"publicKey\": \"ssh-rsa ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6fak3eFAKEKEY8uRMxw+GfkT4xFGkUlFakeyDTNeM59C3z7g1cTtABCDEF12345678910ABCDksVaNfFakeKeyInHere+UoXUQtDZghF38I6t7S58xvZX7Gdr+W4qvlhLP7YYQXdMwFakEyXoS+ZrmdFakeyZZFakeKeyi2V8U1tzlvF5M= existing-key\", \"resourceGroup\": \"DOCSEXAMPLE\", \"tags\": null, \"type\": null } Here is the command without output or values\naz sshkey create --name $sshKeyName --resource-group $resourceGroup --location $location --public-key \"\" Create Network Interfaces This step will create the network interfaces for the Trustgrid appliance VM to connect to the subnets. As part of this process, we will create these additional resources:\nPublic IP for the outside interface. Network Security Group for the outside interface and an explicit Outbound rule for the required connectivity to the Trustgrid Control Plane. Additional rules will need to be added to allow the node to connect to: Outbound rules for data plane gateway IPs and ports if the appliance is acting as an edge/client device Inbound rules if the appliance will be acting as a data plane or ZTNA gateway Network Security Group for the inside interface with no additional rules. After deployment, this security group could be extended to allow for required communication to internal resources. Both security groups will be created with the default security group rules Here are the commands without output\naz network public-ip create --name $name-pubIP \\ --resource-group $resourceGroup --location $location \\ --sku \"Standard\" --allocation-method \"Static\" az network nsg create --name $name-outside \\ --resource-group $resourceGroup --location $location az network nsg rule create --name \"TGControlPlaneTCP\" \\ --nsg-name $name-outside \\ --resource-group $resourceGroup \\ --priority 1000 \\ --access 'Allow' \\ --description 'TCP ports required Trustgrid Control Plane networks' \\ --destination-address-prefixes '35.171.100.16/28' '34.223.12.192/28' \\ --destination-port-ranges 443 8443 \\ --direction 'Outbound' \\ --protocol 'Tcp' az network nsg create --name $name-inside \\ --resource-group $resourceGroup --location $location az network nic create --resource-group $resourceGroup \\ --location $location --name $name-outside \\ --vnet-name $vNetName --subnet $outsideSubnet \\ --accelerated-networking false --public-ip-address $name-pubIP \\ --network-security-group $name-outside az network nic create --resource-group $resourceGroup \\ --location $location --name $name-inside \\ --vnet-name $vNetName --subnet $insideSubnet \\ --accelerated-networking false --ip-forwarding true \\ --network-security-group $name-inside See the example output for all of the above commands in the AZ CLI Example Walkthrough\nCreate Trustgrid Appliance VM Finally, we can deploy the actual VM with the two below commands\nThis command creates the VM:\naz vm create \\ --resource-group $resourceGroup \\ --name $name \\ --image $imageID \\ --accept-term \\ --admin-user 'ubuntu' \\ --assign-identity '[system]' \\ --authentication-type 'ssh' \\ --nics $name-outside $name-inside \\ --nic-delete-option 'Delete' \\ --os-disk-size-gb $osDiskSize \\ --os-disk-delete-option 'Delete' \\ --size $size \\ --ssh-key-name $sshKeyName This command enables boot diagnostics so that the serial console can be accessed.\naz vm boot-diagnostics enable --name $name --resource-group $resourceGroup See the example output in the AZ CLI Example Walkthrough\nGet MAC Address To make Console login easier run the below command to get the outside interface’s MAC address:\naz network nic show --name $name-outside \\ --resource-group $resourceGroup | jq '.macAddress' | \\ sed 's/-/:/g' | tr 'A-F' 'a-f' Example output:\nsales@Azure:~$ az network nic show --name $name-outside \\ --resource-group $resourceGroup | jq '.macAddress' | \\ sed 's/-/:/g' | tr 'A-F' 'a-f' \"00:0d:3a:9d:a3:2d\" Register the VM You can now start the console registration process and if you have portal access complete the activation process.\nAdditional Steps for HA Clusters If deploying an HA cluster there are additional steps required:\nCreate Additional VM Appliance Repeat the steps above to deploy a second VM appliance using different names but in the same resource group and vNet. This will be the secondary node in the HA cluster.\nAssuming you still have the same variables declared from the above deployment you will just need to update the $name variable to a new value like shown in the example below.\nexport name=\"newName\" Then you can proceed with creating the network interface resources and then create the vm appliance.\nCreate Role for Route Management The steps below create a custom role that has permission to manipulate route tables:\nFirst, download the template JSON file to your environment.\ncurl -o tg-route-role.json https://raw.githubusercontent.com/trustgrid/trustgrid-infra-as-code/main/azure/resources/cluster-role-template/tg-route-role.json Use the command below to get your subscription ID:\naz account show --query id -o tsv Use an editor such as vi or nano to modify the template and replace the placeholders REPLACE in the template with your subscription ID.\nOr, you can perform both the above steps in a single command:\nsed -i \"s/REPLACE/$(az account show --query id -o tsv)/g\" tg-route-role.json Optionally, you can edit the Name and Description fields as well.\nThen create the role using:\naz role definition create --role-definition @tg-route-role.json See AZ CLI Example Walkthrough for output.\nThe role created above can only be assigned to resources in the current subscription. If your Azure account topology requires the Trustgrid appliance to be able to manage route tables in other subscriptions you’ll need to create the role in those accounts as well and assign (see below) the role accordingly. Assign Role for Route Management Finally, we need to assign this role. Below are the commands to perform this process without values for the names of the two VMs (vm1 and vm2) for the resource group.\nexport vm1=\"\" export vm2=\"\" export resourceGroup=\"\" export roleName=\"Trustgrid HA Route Role\" export subscription=$(az account show --query id -o tsv) export vm1ID=$(az vm show --name $vm1 --resource-group $resourceGroup --query 'identity.principalId' -o tsv) export vm2ID=$(az vm show --name $vm2 --resource-group $resourceGroup --query 'identity.principalId' -o tsv) export roleID=$(az role definition list --query \"[?roleName=='$roleName'].name | [0]\" -o tsv) az role assignment create --role \"Trustgrid HA Route Role\" --assignee $vm1ID --scope \"/subscriptions/$subscription/resourceGroups/$resourceGroup\" az role assignment create --role \"Trustgrid HA Route Role\" --assignee $vm2ID --scope \"/subscriptions/$subscription/resourceGroups/$resourceGroup\" The above assumes you didn’t change the Name settings in the tg-route-role.json file when creating the role definition. If you did you need to update the roleName variable before exporting. See AZ CLI Example Walkthrough for output. The above commands scope the role to the resource group that contains the node appliance VMs. If your Azure account and resource group topology requires the nodes to be able to update route tables in other resources groups you’ll need to repeat the role assignment commands either at a higher level (like subscription) or with a different value for resourceGroup. ","categories":"","description":"Details how to deploy a Trustgrid appliance and related resources using the Azure CLI (az) commands.","excerpt":"Details how to deploy a Trustgrid appliance and related resources …","ref":"/tutorials/deployments/deploy-azure/azure-cli-deployment/","tags":"","title":"Azure CLI (az) Deployment"},{"body":"Below walks through creating a brand new resource group, virtual network, subnets and associated resources needed to deploy a Trustgrid appliance using Azure CLI commands. This is rarely appropriate for production environments but demonstrates the process.\nIt then walks through all the steps listed on the AZ CLI Deployment and shows the output of running the commands.\nThe output below may be modified to obscure unique ids for security purposes and truncated due to the verbosity of some response. Create Resource Group First you’ll need to decide on the location to deploy\nsales@Azure:~$ export location=\"eastus\" sales@Azure:~$ export resourceGroup=\"DocsExample\" sales@Azure:~$ az group create --resource-group $resourceGroup --location $location { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample\", \"location\": \"eastus\", \"managedBy\": null, \"name\": \"DocsExample\", \"properties\": { \"provisioningState\": \"Succeeded\" }, \"tags\": null, \"type\": \"Microsoft.Resources/resourceGroups\" } Create Virtual Network Create a virtual network with two subnets - one for the outside interface and one for the inside interface of the appliance. In this example we are using the 192.168.0.0/16 address space but you can customize as needed.\nsales@Azure:~$ export vNetName=\"TrustgridvNet\" export outsideSubnet=\"tg-outside\" export insideSubnet=\"tg-inside\" sales@Azure:~$ az network vnet create --name $vNetName --resource-group $resourceGroup --location $location --address-prefix 192.168.0.0/16 { \"newVNet\": { \"addressSpace\": { \"addressPrefixes\": [ \"192.168.0.0/16\" ] }, \"enableDdosProtection\": false, \"etag\": \"W/\\\"1#######-####-####-####-#########\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/virtualNetworks/TrustgridvNet\", \"location\": \"eastus\", \"name\": \"TrustgridvNet\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"resourceGuid\": \"#######-####-####-####-#########\", \"subnets\": [], \"type\": \"Microsoft.Network/virtualNetworks\", \"virtualNetworkPeerings\": [] } } sales@Azure:~$ az network vnet subnet create --name $outsideSubnet --resource-group $resourceGroup --vnet-name $vNetName --address-prefix 192.168.1.0/24 { \"addressPrefix\": \"192.168.1.0/24\", \"delegations\": [], \"etag\": \"W/\\\"#######-####-####-####-#########\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/virtualNetworks/TrustgridvNet/subnets/tg-outside\", \"name\": \"tg-outside\", \"privateEndpointNetworkPolicies\": \"Disabled\", \"privateLinkServiceNetworkPolicies\": \"Enabled\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"type\": \"Microsoft.Network/virtualNetworks/subnets\" } sales@Azure:~$ az network vnet subnet create --name $insideSubnet --resource-group $resourceGroup --vnet-name $vNetName --address-prefix 192.168.2.0/24 { \"addressPrefix\": \"192.168.2.0/24\", \"delegations\": [], \"etag\": \"W/\\\"468e9585-daa2-4908-9484-9708e4cac8d4\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/virtualNetworks/TrustgridvNet/subnets/tg-inside\", \"name\": \"tg-inside\", \"privateEndpointNetworkPolicies\": \"Disabled\", \"privateLinkServiceNetworkPolicies\": \"Enabled\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"type\": \"Microsoft.Network/virtualNetworks/subnets\" } Here are the actual commands again without values or output to make it easier to copy and paste for your use:\nexport vNetName=\"\" export outsideSubnet=\"\" export insideSubnet=\"\" az network vnet create --name $vNetName --resource-group $resourceGroup --location $location --address-prefix 192.168.0.0/16 az network vnet subnet create --name $outsideSubnet --resource-group $resourceGroup --vnet-name $vNetName --address-prefix 192.168.1.0/24 az network vnet subnet create --name $insideSubnet --resource-group $resourceGroup --vnet-name $vNetName --address-prefix 192.168.2.0/24 Optional - Create Route Table for Inside Subnet When Trustgrid appliances are deployed in an HA cluster the inside interface will need a route\nCreate Remaining Resources and VM At this point we have all the prerequisites to proceed with the steps outlined above to deploy the Trustgrid appliance. Below shows the commands being run with example output.\nDeclare Variables First, declare all the variables and capture the Image ID:\nexport location=\"eastus\" export resourceGroup=\"DocsExample\" export vNetName=\"TrustgridvNet\" export outsideSubnet=\"tg-outside\" export insideSubnet=\"tg-inside\" export name=\"docs-node\" export size=\"Standard_B2s\" export osDiskSize=30 Capture Latest Trustgrid Image ID export imageID=$(az sig image-version list-community \\ --public-gallery-name trustgrid-45680719-9aa7-43b9-a376-dc03bcfdb0ac \\ --gallery-image-definition trustgrid-node-2204-prod \\ --location $location \\ --output json 2\u003e/dev/null | jq -r 'sort_by(.name)| reverse | .[0].uniqueId') Prepare SSH Key Resource Using the steps defined in the Prepare SSH Key we will create a new key pair. If you have an existing public key you want to use the output and commands will be different.\nsales@Azure:~$ export sshKeyName=\"myNewSSHKey\" az sshkey create --name $sshKeyName --resource-group $resourceGroup --location $location No public key is provided. A key pair is being generated for you. Private key is saved to \"/home/sales/.ssh/1698355223_61326\". Public key is saved to \"/home/sales/.ssh/1698355223_61326.pub\". { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DOCSEXAMPLE/providers/Microsoft.Compute/sshPublicKeys/myNewSSHKey\", \"location\": \"eastus\", \"name\": \"myNewSSHKey\", \"publicKey\": \"ssh-rsa ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6fak3eFAKEKEY8uRMxw+GfkT4xFGkUlFakeyDTNeM59C3z7g1cTtABCDEF12345678910ABCDksVaNfFakeKeyInHere+UoXUQtDZghF38I6t7S58xvZX7Gdr+W4qvlhLP7YYQXdMwFakEyXoS+ZrmdFakeyZZFakeKeyi2V8U1tzlvF5M= generated-by-azure\", \"resourceGroup\": \"DOCSEXAMPLE\", \"tags\": null, \"type\": null } Create Network Interfaces Using the steps in Create Network Interfaces above we create a Public IP and two NICs and associated Network Security Groups.\nsales@Azure:~$ az network public-ip create --name $name-pubIP \\ --resource-group $resourceGroup --location $location \\ --sku \"Standard\" --allocation-method \"Static\" [Coming breaking change] In the coming release, the default behavior will be changed as follows when sku is Standard and zone is not provided: For zonal regions, you will get a zone-redundant IP indicated by zones:[\"1\",\"2\",\"3\"]; For non-zonal regions, you will get a non zone-redundant IP indicated by zones:null. { \"publicIp\": { \"ddosSettings\": { \"protectionMode\": \"VirtualNetworkInherited\" }, \"etag\": \"W/\\\"d976ed14-bf3d-4f1a-964d-9ff7dd0783b4\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/publicIPAddresses/docs-node-pubIP\", \"idleTimeoutInMinutes\": 4, \"ipAddress\": \"20.168.241.169\", \"ipTags\": [], \"location\": \"eastus\", \"name\": \"docs-node-pubIP\", \"provisioningState\": \"Succeeded\", \"publicIPAddressVersion\": \"IPv4\", \"publicIPAllocationMethod\": \"Static\", \"resourceGroup\": \"DocsExample\", \"resourceGuid\": \"73fc5b1b-bc3e-4670-9af2-65545bb381b6\", \"sku\": { \"name\": \"Standard\", \"tier\": \"Regional\" }, \"type\": \"Microsoft.Network/publicIPAddresses\" } } sales@Azure:~$ sales@Azure:~$ az network nsg create --name $name-outside \\ --resource-group $resourceGroup --location $location { \"NewNSG\": { \"defaultSecurityRules\": [ { \"access\": \"Allow\", \"description\": \"Allow inbound traffic from all VMs in VNET\", \"destinationAddressPrefix\": \"VirtualNetwork\", ...Truncated.... \"sourceAddressPrefixes\": [], \"sourcePortRange\": \"*\", \"sourcePortRanges\": [], \"type\": \"Microsoft.Network/networkSecurityGroups/defaultSecurityRules\" } ], \"etag\": \"W/\\\"57d825f4-e5eb-407f-8eec-ad9f3be06486\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkSecurityGroups/docs-node-outside\", \"location\": \"eastus\", \"name\": \"docs-node-outside\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"resourceGuid\": \"3796f81b-d50c-4d43-89ed-f41da1523fd8\", \"securityRules\": [], \"type\": \"Microsoft.Network/networkSecurityGroups\" } } sales@Azure:~$ az network nsg rule create --name \"TGControlPlaneTCP\" \\ --nsg-name $name-outside \\ --resource-group $resourceGroup \\ --priority 1000 \\ --access 'Allow' \\ --description 'TCP ports required Trustgrid Control Plane networks' \\ --destination-address-prefixes '35.171.100.16/28' '34.223.12.192/28' \\ --destination-port-ranges 443 8443 \\ --direction 'Outbound' \\ --protocol 'Tcp' { \"access\": \"Allow\", \"description\": \"TCP ports required Trustgrid Control Plane networks\", \"destinationAddressPrefixes\": [ \"35.171.100.16/28\", \"34.223.12.192/28\" ], \"destinationPortRanges\": [ \"443\", \"8443\" ], \"direction\": \"Outbound\", \"etag\": \"W/\\\"a26f3973-ed39-4990-a87e-657815c43721\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkSecurityGroups/docs-node-outside/securityRules/TGControlPlaneTCP\", \"name\": \"TGControlPlaneTCP\", \"priority\": 1000, \"protocol\": \"Tcp\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"sourceAddressPrefix\": \"*\", \"sourceAddressPrefixes\": [], \"sourcePortRange\": \"*\", \"sourcePortRanges\": [], \"type\": \"Microsoft.Network/networkSecurityGroups/securityRules\" } sales@Azure:~$ sales@Azure:~$ az network nsg create --name $name-inside \\ --resource-group $resourceGroup --location $location { \"NewNSG\": { \"defaultSecurityRules\": [ { \"access\": \"Allow\", \"description\": \"Allow inbound traffic from all VMs in VNET\", \"destinationAddressPrefix\": \"VirtualNetwork\", ...truncated... \"type\": \"Microsoft.Network/networkSecurityGroups/defaultSecurityRules\" } ], \"etag\": \"W/\\\"4d057391-2af0-468d-87b3-482eaafd6ef9\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkSecurityGroups/docs-node-inside\", \"location\": \"eastus\", \"name\": \"docs-node-inside\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"resourceGuid\": \"a8f23fcc-6460-4642-aa12-ac5f54a75108\", \"securityRules\": [], \"type\": \"Microsoft.Network/networkSecurityGroups\" } } sales@Azure:~$ az network nic create --resource-group $resourceGroup \\ --location $location --name $name-outside \\ --vnet-name $vNetName --subnet $outsideSubnet \\ --accelerated-networking false --public-ip-address $name-pubIP \\ --network-security-group $name-outside { \"NewNIC\": { \"auxiliaryMode\": \"None\", \"auxiliarySku\": \"None\", \"disableTcpStateTracking\": false, \"dnsSettings\": { \"appliedDnsServers\": [], \"dnsServers\": [], \"internalDomainNameSuffix\": \"w0n1hkdkbiyu1mglxakd4jdtth.bx.internal.cloudapp.net\" }, \"enableAcceleratedNetworking\": false, \"enableIPForwarding\": false, \"etag\": \"W/\\\"3ddba8ac-99b2-41a8-8ca3-47138ba69b58\\\"\", \"hostedWorkloads\": [], \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkInterfaces/docs-node-outside\", \"ipConfigurations\": [ { \"etag\": \"W/\\\"3ddba8ac-99b2-41a8-8ca3-47138ba69b58\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkInterfaces/docs-node-outside/ipConfigurations/ipconfig1\", \"name\": \"ipconfig1\", \"primary\": true, \"privateIPAddress\": \"192.168.1.4\", \"privateIPAddressVersion\": \"IPv4\", \"privateIPAllocationMethod\": \"Dynamic\", \"provisioningState\": \"Succeeded\", \"publicIPAddress\": { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/publicIPAddresses/docs-node-pubIP\", \"resourceGroup\": \"DocsExample\" }, \"resourceGroup\": \"DocsExample\", \"subnet\": { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/virtualNetworks/TrustgridvNet/subnets/tg-outside\", \"resourceGroup\": \"DocsExample\" }, \"type\": \"Microsoft.Network/networkInterfaces/ipConfigurations\" } ], \"location\": \"eastus\", \"name\": \"docs-node-outside\", \"networkSecurityGroup\": { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkSecurityGroups/docs-node-outside\", \"resourceGroup\": \"DocsExample\" }, \"nicType\": \"Standard\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"resourceGuid\": \"e863aac3-a69c-489d-9b1e-64bf61028f52\", \"tapConfigurations\": [], \"type\": \"Microsoft.Network/networkInterfaces\", \"vnetEncryptionSupported\": false } } sales@Azure:~$ sales@Azure:~$ az network nic create --resource-group $resourceGroup \\ --location $location --name $name-inside \\ --vnet-name $vNetName --subnet $insideSubnet \\ --accelerated-networking false --ip-forwarding true \\ --network-security-group $name-inside { \"NewNIC\": { \"auxiliaryMode\": \"None\", \"auxiliarySku\": \"None\", \"disableTcpStateTracking\": false, \"dnsSettings\": { \"appliedDnsServers\": [], \"dnsServers\": [], \"internalDomainNameSuffix\": \"w0n1hkdkbiyu1mglxakd4jdtth.bx.internal.cloudapp.net\" }, \"enableAcceleratedNetworking\": false, \"enableIPForwarding\": true, \"etag\": \"W/\\\"7918658f-76fa-4462-ab5e-bbbabf387016\\\"\", \"hostedWorkloads\": [], \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkInterfaces/docs-node-inside\", \"ipConfigurations\": [ { \"etag\": \"W/\\\"7918658f-76fa-4462-ab5e-bbbabf387016\\\"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkInterfaces/docs-node-inside/ipConfigurations/ipconfig1\", \"name\": \"ipconfig1\", \"primary\": true, \"privateIPAddress\": \"192.168.2.4\", \"privateIPAddressVersion\": \"IPv4\", \"privateIPAllocationMethod\": \"Dynamic\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"subnet\": { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/virtualNetworks/TrustgridvNet/subnets/tg-inside\", \"resourceGroup\": \"DocsExample\" }, \"type\": \"Microsoft.Network/networkInterfaces/ipConfigurations\" } ], \"location\": \"eastus\", \"name\": \"docs-node-inside\", \"networkSecurityGroup\": { \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Network/networkSecurityGroups/docs-node-inside\", \"resourceGroup\": \"DocsExample\" }, \"nicType\": \"Standard\", \"provisioningState\": \"Succeeded\", \"resourceGroup\": \"DocsExample\", \"resourceGuid\": \"08488814-0337-4742-9751-fd125ea1acb3\", \"tapConfigurations\": [], \"type\": \"Microsoft.Network/networkInterfaces\", \"vnetEncryptionSupported\": false } } Create Trustgrid Appliance VM Finally, we can run the command to create the azure VM\nsales@Azure:~$ az vm create \\ --resource-group $resourceGroup \\ --name $name \\ --image $imageID \\ --accept-term \\ --admin-user 'ubuntu' \\ --assign-identity '[system]' \\ --authentication-type 'ssh' \\ --nics $name-outside $name-inside \\ --nic-delete-option 'Delete' \\ --os-disk-size-gb $osDiskSize \\ --os-disk-delete-option 'Delete' \\ --size $size \\ --ssh-key-name $sshKeyName No access was given yet to the 'docs-node', because '--scope' was not provided. You should setup by creating a role assignment, e.g. 'az role assignment create --assignee \u003cprincipal-id\u003e --role contributor -g DocsExample' would let it access the current resource group. To get the pricipal id, run 'az vm show -g DocsExample -n docs-node --query \"identity.principalId\" -otsv' { \"fqdns\": \"\", \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Compute/virtualMachines/docs-node\", \"identity\": { \"systemAssignedIdentity\": \"27f3a3a1-a7f2-462f-a697-844eb9f5c249\", \"userAssignedIdentities\": {} }, \"location\": \"eastus\", \"macAddress\": \"00-0D-3A-9D-A3-2D,00-0D-3A-9D-A2-32\", \"powerState\": \"VM running\", \"privateIpAddress\": \"192.168.1.4,192.168.2.4\", \"publicIpAddress\": \"20.168.241.169\", \"resourceGroup\": \"DocsExample\", \"zones\": \"\" } sales@Azure:~$ az vm boot-diagnostics enable --name $name --resource-group $resourceGroup sales@Azure:~$ The warning that “No access was given yet” can be ignored. Additional Steps for HA Clusters For high availability clusters, additional steps would be needed.\nFirst, you’d need to create a second VM with a new name. The output should be similar to the above.\nCreate Role for Route Management The steps below will show creating the custom role required for the VMs to be able to modify the route tables in their resource group.\nsales@Azure:~$ curl -o tg-route-role.json https://raw.githubusercontent.com/trustgrid/trustgrid-infra-as-code/main/azure/resources/cluster-role-template/tg-route-role.json % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1007 100 1007 0 0 7407 0 --:--:-- --:--:-- --:--:-- 7459 sales@Azure:~$ sed -i \"s/REPLACE/$(az account show --query id | tr -d '\\\"')/g\" tg-route-role.json sales@Azure:~$az role definition create --role-definition @tg-route-role.json Readonly attribute type will be ignored in class \u003cclass 'azure.mgmt.authorization.v2022_05_01_preview.models._models_py3.RoleDefinition'\u003e { \"assignableScopes\": [ \"/subscriptions/#######-####-####-####-#########\" ], \"createdBy\": null, \"createdOn\": \"2023-10-30T18:29:30.705079+00:00\", \"description\": \"Allows clustered Trustgrid nodes to perform HA routing actions\", \"id\": \"/subscriptions/#######-####-####-####-#########/providers/Microsoft.Authorization/roleDefinitions/a06d4811-1d33-42ef-b7dc-c92e038246f6\", \"name\": \"a06d4811-1d33-42ef-b7dc-c92e038246f6\", \"permissions\": [ { \"actions\": [ \"Microsoft.Network/networkWatchers/nextHop/action\", \"Microsoft.Network/networkInterfaces/effectiveRouteTable/action\", \"Microsoft.Network/routeTables/routes/delete\", \"Microsoft.Network/routeTables/routes/write\", \"Microsoft.Network/routeTables/routes/read\", \"Microsoft.Network/routeTables/join/action\", \"Microsoft.Network/routeTables/delete\", \"Microsoft.Network/routeTables/write\", \"Microsoft.Network/routeTables/read\", \"Microsoft.Network/networkInterfaces/read\", \"Microsoft.Network/virtualNetworks/read\", \"Microsoft.Compute/virtualMachines/read\" ], \"condition\": null, \"conditionVersion\": null, \"dataActions\": [], \"notActions\": [], \"notDataActions\": [] } ], \"roleName\": \"Trustgrid HA Route Role\", \"roleType\": \"CustomRole\", \"type\": \"Microsoft.Authorization/roleDefinitions\", \"updatedBy\": \"bcc767f1-e232-4cdf-8144-5dcc3d2ae88b\", \"updatedOn\": \"2023-10-30T18:29:30.705079+00:00\" } Assign Role for Route Management After you’ve created the above custom role it needs to be assigned to the virtual machines managed system identities.\nFor this example we will assume the role was created with the name “Trustgrid HA Route Role” and the VMs are named docs-node and docs-node2. We will export a new variable for each and also make sure we have variables for the resource group and subscription values.\nsales@Azure:~$ export vm1=\"docs-node\" sales@Azure:~$ export vm2=\"docs-node2\" sales@Azure:~$ export resourceGroup=\"DocsExample\" sales@Azure:~$ export subscription=$(az account show --query id -o tsv) sales@Azure:~$ export vm1ID=$(az vm show --name $vm1 --resource-group $resourceGroup --query 'identity.principalId' -o tsv) sales@Azure:~$ export vm2ID=$(az vm show --name $vm2 --resource-group $resourceGroup --query 'identity.principalId' -o tsv) sales@Azure:~$ az role assignment create --role \"Trustgrid HA Route Role\" --assignee $vm1ID --scope \"/subscriptions/$subscription/resourceGroups/$resourceGroup\" { \"condition\": null, \"conditionVersion\": null, \"createdBy\": null, \"createdOn\": \"2023-10-30T18:56:44.664663+00:00\", \"delegatedManagedIdentityResourceId\": null, \"description\": null, \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Authorization/roleAssignments/0799638c-57ce-4c3b-8aec-d20de77b449d\", \"name\": \"0799638c-57ce-4c3b-8aec-d20de77b449d\", \"principalId\": \"27f3a3a1-a7f2-462f-a697-844eb9f5c249\", \"principalType\": \"ServicePrincipal\", \"resourceGroup\": \"DocsExample\", \"roleDefinitionId\": \"/subscriptions/#######-####-####-####-#########/providers/Microsoft.Authorization/roleDefinitions/a06d4811-1d33-42ef-b7dc-c92e038246f6\", \"scope\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample\", \"type\": \"Microsoft.Authorization/roleAssignments\", \"updatedBy\": \"bcc767f1-e232-4cdf-8144-5dcc3d2ae88b\", \"updatedOn\": \"2023-10-30T18:56:45.306683+00:00\" } sales@Azure:~$ az role assignment create --role \"Trustgrid HA Route Role\" --assignee $vm2ID --scope \"/subscriptions/$subscription/resourceGroups/$resourceGroup\" { \"condition\": null, \"conditionVersion\": null, \"createdBy\": null, \"createdOn\": \"2023-10-30T18:56:44.664663+00:00\", \"delegatedManagedIdentityResourceId\": null, \"description\": null, \"id\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample/providers/Microsoft.Authorization/roleAssignments/0799638c-57ce-4c3b-8aec-d20de77b449d\", \"name\": \"0799638c-57ce-4c3b-8aec-d20de77b449d\", \"principalId\": \"27f3a3a1-a7f2-462f-a697-844eb9f5c249\", \"principalType\": \"ServicePrincipal\", \"resourceGroup\": \"DocsExample\", \"roleDefinitionId\": \"/subscriptions/#######-####-####-####-#########/providers/Microsoft.Authorization/roleDefinitions/a06d4811-1d33-42ef-b7dc-c92e038246f6\", \"scope\": \"/subscriptions/#######-####-####-####-#########/resourceGroups/DocsExample\", \"type\": \"Microsoft.Authorization/roleAssignments\", \"updatedBy\": \"bcc767f1-e232-4cdf-8144-5dcc3d2ae88b\", \"updatedOn\": \"2023-10-30T18:56:45.306683+00:00\" } az role assignment create –role $roleName –assignee $vm1ID –scope “/subscriptions/$subscription/resourceGroups/$resourceGroup”\n","categories":"","description":"Shows how to create all prerequisite resources and the output of running the deployment commands","excerpt":"Shows how to create all prerequisite resources and the output of …","ref":"/tutorials/deployments/deploy-azure/azure-cli-deployment/az-cli-example/","tags":"","title":"Example Walkthrough  of Azure CLI (az) Deployment"},{"body":"Setup Setting up the Azure AD integration requires the configuration of an Azure App registration. See Azure App registration configuration.\nField Name Description Issuer Specifies the Azure App OpenID metadata endpoint. Client ID Specifies the Azure App client ID. Secret Specifies the Azure App secret value (not the secret ID). This is the value that appears only once when you create a new client secret. Before being able to save the configuration, validation of the Issuer needs to be performed by pressing the Test button. Once the validation has been performed and the configuration saved, the sync section will be available.\nSync all users - Syncs all available users along with all the groups associated to the users. Sync users from specific groups - Syncs all users from the selected groups. At any given point the sync selection can be changed and saved, and the sync will automatically start. Azure App registration configuration The following information is only partial Azure AD reference for configuring an App registration via the Microsoft Azure Portal. Information presented in the following images might have changed. Create a new App Registration Once you’ve registered your application you need to make a note of the Application Client ID and Metadata endpoint that provides the Open ID metadata. You can find it by click on Endpoints at the top of the application. The Application Client ID will be used for the Client ID configuration parameter of the Identity Provider in Trustgrid Portal. The metadata endpoint goes in the Issuer configuration parameter of the Identity Provider in Trustgrid Portal. It should be something like https://login.microsoftonline.com/\u003capp_id\u003e/v2.0 Ignore what comes after the /.well-known part. Configure the Authentication piece of the Azure app Add a platform by selecting the “Web” type and add the corresponding redirect uri and logout url, and select both Access Tokens and ID tokens checkboxes. Field Name Description Trustgrid Redirect URL https://id.trustgrid.io/auth/openid/callback Trustgrid Logout URL https://id.trustgrid.io/logout You need to create a secret for authentication. You can select the expiration to be any of the selections but it is recommended to give at least 1 year for expiration. Once you create the secret make sure to make a note of the “value” since that piece of information is what is going to be used under the Secret configuration parameter of the Identity Provider in Trustgrid Portal. Once you’ve created the client secret, navigate to “Token Configuration” and add the “email” optional claim Updating Expired App Secrets When your Azure AD client secret expires, you’ll need to create a new secret and update it in the Trustgrid Portal. To create a new client secret:\nSign in to the Azure portal and navigate to your App registration Select “Certificates \u0026 secrets” from the left menu Under “Client secrets”, click “New client secret” Provide a description and select an expiration period Click “Add” Important: Copy the new secret’s “Value” (not the secret ID) immediately, as it will only be shown once Update the Secret field in the Trustgrid Portal with this new value For more detailed instructions, refer to the official Microsoft documentation on managing app secrets.\n","categories":["idps"],"description":"","excerpt":"Setup Setting up the Azure AD integration requires the configuration …","ref":"/docs/idps/azure-idp-fields/","tags":"","title":"Azure AD"},{"body":" The WAN interface of a Trustgrid node is used to build connections to both the Control Plane and any Data Plane connectivity. Any change to this IP address is disruptive and presents a risk that the device will go offline if incorrect information is provided. This could potentially require a technical resource to go onsite to reconnect physical devices.\nTo make the below changes via the Trustgrid portal the user must have the Node Administrator or Administrator role. The node must also be connected to the Trustgrid Control Plane to make this change via the portal. The document details the process of updating the ETH0 - WAN Interface IP via the Trustgrid portal. This change can also be performed via the Trustgrid LocalUI .\nNetwork Adapter 1 - WAN IP Change - Try Method Nodes must be running version 20200331 or newer to use the Try method Trustgrid nodes have the ability to test a new IP configuration before permanently applying the configuration to the device. The process works like this:\nThe user will enter the new IP configuration into the portal and click Try\nThe user will select the duration to try the new configuration (10, 30 or 60 minutes)\na. If the device successfully reconnects to the control plane after the select time the user will have the option of importing and saving this new configuration permanently, or reverting to the previous configuration.\nb. If the device does not reconnect within the chosen duration, the device will automatically revert to its previous IP address configuration.\nThe device will revert to the original IP if it is rebooted or power cycled after initiating the “try” option and before importing and saving those changes in the portal.\nChanging Network Adapter 1 - WAN via Try - Detail Process Login to the portal and navigate to the Node that you wish to reconfigure.\nConfirm the node is actively connected to the cloud\nNote: If the device is not online when the below IP change is made it cannot pull this config from the device. Until it reconnects to the cloud it will continue using the original IP address.\na. First confirm there is a green dot next to the node name\nb. Confirm that you can open an interactive tool such as Terminal or Sniff Interface traffic. Leave this tool open so you know it when the device\nNavigate to the Configuration \u003e Network section and confirm Network Adapter 1 - WAN Interface is selected.\nSet the IP settings to the desired new configuration a. Not that the IP adress and the subnet mask are to be entered in CIDR notation SCroll down and select Try Select the duration of time the device should be allowed to be disconnected before reverting to the prior IP configuration and click Confirm The below warning will be presented for confirmation. You will need to type in the word ‘yes’ to confirm. At this point the device will apply the new IP address and attempt to reconnect.\na. If the device cannot connect for the chosen duration the settings will revert to the original IP settings.\nb. If the device successfully reconnects you will be presented with the below options. You may need to refresh the page to see these options.\ni. Import - This option will update the portal to show the new IP address information. ii. Revert - This option will revert the portal to show the original IP address information. c. Select the desired option and then scroll down and select Save. Again you will be prompted to confirm the change.\nNetwork Adapter 1 - WAN IP Change - Save Method This process is very similar to the above with the exception that the change is permanent. The device will continue to use the configured IP address until either:\nThe device connects to the cloud using the newly saved IP, at which point this process or the above Try method can be used to reconfigure the IP remotely\nThe device is reconfigured locally using either the Trustgrid Local UI or console (contact Trustgrid Support)\nChanging Network Adapter 1 - WAN via Try - Detail Process Login to the portal and navigate to the Node that you wish to reconfigure.\nConfirm the node is actively connected to the cloud\nNote: If the device is not online when the below IP change is made it cannot pull this config from the device. Until it reconnects to the cloud it will continue using the original IP address.\na. First confirm there is a green dot next to the node name b. Confirm that you can open an interactive tool such as Terminal or Sniff Interface traffic. Leave this tool open so you know it when the device Navigate to Configuration -\u003e Network section and confirm Network Adapter 1 - WAN Interface is selected. Set the IP settings to the desired new configuration a. Note that the IP address and subnet mask are to be entered in CIDR notation. After setting the IP address click Save\nYou’ll be presented with a warning like the below. Type ‘yes’ and click Confirm.\nThe device will be notified it has an updated configuration. It will pull this configuration down and automatically restart the Trustgrid service using the new IP address.\na. The restart usually takes less than a minute.\nb. What ever interactive service you were using (Terminal, etc) should disconnect.\nAfter the local site networking is updated (either physically by moving a cable, or logically by updating the connected switch port config) so that the new IP address can connect the device should come back online.\nAddition Post-IP Change Verification After the WAN IP has been changed there are a few areas where the WAN interface IP may have been used:\nGateway Nodes If the Trustgrid node is acting as either a public or private gateway, you may also need to update the Public IP field under System -\u003e Gateway -\u003e Server Settings. If your gateway is using DNS instead you will need to update that DNS record accordingly.\nClustered Nodes If the Trustgrid node is clustered and the WAN interface IP was being used for the cluster heartbeat you will need to adjust the IP address it is listening.\nThe heartbeat IP and port is visible under System -\u003e Cluster of each cluster member’s node detail page.\nIf the Host field is using the old WAN interface IP address, change it to the new IP and click Save.\nIf the nodes has two or more interfaces, it is typical that those LAN interface IPs will be used for the cluster heartbeat. In that case no change is required on this page.\n","categories":"","description":"","excerpt":" The WAN interface of a Trustgrid node is used to build connections to …","ref":"/tutorials/wan-interface-ip/","tags":"","title":"Changing the WAN Interface IP"},{"body":"Symptoms Changes made via the portal or api are not implemented on the actual node In versions after 20240719, the Configuration Update Failure event will be sent by appliance nodes Example Configuration Update Failure event Causes Possible causes include:\nThe node is unable to resolve Trustgrid.io DNS names, in this case specifically gatekeeper.trustgrid.io The node is unable to connect to the the entire Trustgrid Control Plane networks on port 8443 Troubleshooting These steps should be performed via the Terminal or the appliance console Network Tools Shell.\nTest DNS Resolution Determine the configured DNS server by viewing the WAN interface in the portal. Use dig @\u003cDNS IP\u003e gatekeeper.trustgrid.io +short to confirm you get a response from each of your DNS servers. E.g. if the appliance is configured to use 8.8.8.8 and 1.1.1.1 use the commands dig @8.8.8.8 gatekeeper.trustgrid.io +short and dig @1.1.1.1 gatekeeper.trustgrid.io +short If the above does not resolve, make sure any firewall or access control list between the node and the WAN interface IP allows the IP to make DNS connections to the configured DNS servers on TCP \u0026 UDP port 53. If it successfully resolves, continue to the next step. Confirm Network connectivity to the rest api endpoint with the command nc -vz gatekeeper.trustgrid.io 8443 Copy If this succeeds as shown in this image proceed to the next troubleshooting step. If this fails, confirm any firewall or access control list allows connectivity to all required control plane networks on TCP port 8443. Follow these instructions to verify nothing is interfering with the TLS certificate chain. Attempt to run the command: curl https://gatekeeper.trustgrid.io:8443/domain-info Copy The expected output is {\"error\":\"node not authorized\"} Copy If you receive no response this indicates the connection is still failing. If you receive a different response Trustgrid support will likely need to assist in troubleshooting. ","categories":"","description":"Troubleshooting nodes that are unable to pull their latest configurations","excerpt":"Troubleshooting nodes that are unable to pull their latest …","ref":"/help-center/kb/startup-process/config-update-failure/","tags":"","title":"Configuration Update Failure Troubleshooting"},{"body":" Example use cases for utilizing the Trustgrid Compute ability to run containers on a Trustgrid Node appliance. ","categories":"","description":"","excerpt":" Example use cases for utilizing the Trustgrid Compute ability to run …","ref":"/tutorials/containers/","tags":"","title":"Container Deployment Walkthrough"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/containers/","tags":"","title":"Containers"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/data-store/","tags":"","title":"Data Store"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/data-store/","tags":"","title":"Data Store"},{"body":"Azure Requirements An Azure subscription. If you don’t have one, create a free account An Azure resource group to deploy the resources into An Azure Virtual Network (vNet) with at least two subnets: An “outside” subnet for the appliance to connect to the Trustgrid control plane and data plane gateways, and accept incoming connections if the Azure Trustgrid appliance will be acting as a data plane gateway An “inside” subnet for communicating with other virtual machines and services within the Azure vNet (For Clustered Appliances) An Azure routing table associated with the “inside” subnet. VM Requirements Requirement Description Disk Size At least 30 GB Interfaces 1 Public with a Public IP address1 Private CPU \u0026 RAM See Instance Type below for recommendations Instance Size Trustgrid has validated using the B-series burstable - Azure Virtual Machines instance type.\nVPN throughput is tied to CPU the recommended size depends on roles, expected throughput.\nFor Gateway nodes expecting up to ~200Mbps throughput, Trustgrid recommends the Standard_B4ms or larger For Edge nodes expecting less than 100Mbps throughput, Trustgrid recommends the Standard_B2s or Standard_B2ms or larger Interfaces One WAN interface with a public IP and one LAN interface on a private subnet. The nodes will need to be able to route to all required hosts/applications that need to communicate across the Trustgrid virtual network.\nThe LAN interface needs to have IP Forwarding Enabled in order to forward the traffic across the tunnel.\nSee Azure virtual network traffic routing.\nSupported Regions The Trustgrid official community image, trustgrid-node-2204-prod, in the public gallery trustgrid-45680719-9aa7-43b9-a376-dc03bcfdb0ac is currently published in the following regions. If you need to deploy in another region, please contact Trustgrid support. If you are not a direct customer of Trustgrid, please check with your vendor that is utilizing Trustgrid to have them contact support.\nRegion Display Name Region Name East US eastus East US 2 eastus2 Central US centralus North Central US northcentralus South Central US southcentralus West US westus West US 2 westus2 West US 3 westus3 Network Access For gateways:\nOutbound internet access to the Trustgrid control plane networks and ability to resolve public DNS names. Inbound access required is the TCP port defined for the Trustgrid gateway service to listen on. Edge nodes will connect to the gateways public IP and port defined. The default port used is 8443. For edge nodes:\nOutbound internet access to the Trustgrid control plane networks, outbound access to the IP and ports of the Trustgrid gateways, and ability to resolve public DNS names. No inbound access is required on the public interface. For all clustered nodes:\nThe cluster heartbeat runs on the LAN/inside interface on TCP Port 9000. This port will need to be open between both Trustgrid Gateways for failover to work correctly. Other VM Requirements System-assigned Managed Identity needs to be enabled for both VMs in the cluster. Boot Diagnostics needs to be enabled to allow access via the Serial Console Deployment Process One of more Virtual Machines will need to be deployed into the target Azure subscription to act as the Trustgrid nodes using the official community image. Then the remote registration process can be used to activate the nodes in the Trustgrid portal.\nParticipants Site Tech - User(s) with permissions and skills to deploy new instances in Azure, create the required Managed System Identity shown above, and make changes in Azure to allow the required network connectivity Trustgrid User - User with permissions to Activate nodes in the Trustgrid portal (or API) If the Site Tech is not part of the organization that is a Trustgrid’s direct customer, Trustgrid’s professional service team will need documented approval from that customer before proceeding with assisting in the deployment.\nHigh-Level Process The Site Tech should be able to complete the following steps independently: Build out prerequisite resources including Resource Groups, vNets, subnets and routing tables in Azure For single node deployments: Create VM Instances based of the official Trustgrid community image For clustered deployments: Create a routing table for the in LAN interface subnet if it does not already exist Create two VM Instances based of the official Trustgrid community image Create the Azure IAM role as defined above Use the Azure VM Serial Console to start the registration process, this code then needs to be communicated securely to the Trustgrid User. Trustgrid Tech - Activate the device with the target organization Confirm healthy functionality and connectivity to the required gateways Configure the nodes as needed (e.g. clustering, VPN, L4proxy) Deployment Methods Deploy via Azure command line tool Deploy with Bicep Modules - This is a collection of Bicep modules that can be used to deploy Trustgrid nodes in Azure. It includes modules for deploying the virtual machines as well as creating IAM roles and networking resources. Deploy with Terraform - This is a collection of Terraform modules that can be used to deploy Trustgrid nodes in Azure. It includes modules for deploying the virtual machines as well as creating IAM roles and networking resources. High Availability Trustgrid supports two methods for supporting high availability networking connectivity via clustered Trustgrid nodes in Azure. These methods can be used together or independently.\nMethod Description Common Use Cases Route failover Publishes routes to the Azure route table associated an interface or specified route tables. Automatically adjusts the Next hop IP address to point to the active node. Environments with only a few route tables that need to be adjusted IP failover Assigns a floating IP address to the interface of the active Trustgrid node. Environments with many route tables.1Environments using Azure Virtual WAN.Using connectors on the Azure cluster. 1 Route based failover requires the nodes to have correct Azure permission to modify each route table. Environments with many route tables would have to grant permission to the containers (resource groups, subscriptions) for each table which makes maintaining least-privilege access difficult.\n","categories":"","description":"","excerpt":"Azure Requirements An Azure subscription. If you don’t have one, …","ref":"/tutorials/deployments/deploy-azure/","tags":"","title":"Deploy to Azure"},{"body":"Requirements Hardware Resources 4 vCPU 4 GB RAM 30 GB disk space Software Requirements vSphere 6.7 or newer (with VMWare support) Configuration Best Practices Backups Trustgrid recommends against backing up virtualized Nodes. Backups that utilize VMware’s Data Protection API will initiate a VM Snapshot that will pause all traffic through the VM for a short period of time. This can cause issues such as master failover in a cluster and disruption of existing network flows.\nIn place of backups Trustgrid recommends deploying clustered nodes on different ESX hosts if possible. Nodes can be redeployed and rapidly configured as the configuration is stored in our cloud management system.\nDynamic Resource Scheduling (DRS) and Storage DRS Automation Level Trustgrid recommends setting the DRS level for a VM to either Partially Automated or Disabled. Even the temporary loss of network connectivity during vMotion migrations can disrupt some network flows.\nSet a Custom Automation Level for a Virtual Machine Change Storage DRS Automation Level for a Virtual Machine (Recommended) Anti-Affinity If you have Trustgrid nodes clustered within a vSphere Cluster with DRS enabled you should create an anti-affinity rule. This rule should keep the nodes running on independent hosts for additional hardware redundancy.\nCreate VM Anti-Affinity Rules Deployment Process The Trustgrid gateway node can be deployed in a vSphere environment (v6.7 and higher) using a custom VM template provided by Trustgrid. Follow the instructions below to deploy the OVF template in your environment.\nDownload \u0026 Extract the customized VM template from the link sent to you by Trustgrid\nOpen \u0026 log in to your vSphere web client\nNavigate to Host \u0026 Clusters\nRight click on vSphere ESX host in the Navigator pane and select Deploy OVF Template\nSelect Local File and then click Browse\nSelect all of the files included in the zip file and click open, then click Next\nConfirm the name and desired location for your VM and click Next\nSelect a resource to place your VM on and click Next\nClick Next on the Review Details pane\nSelect your preferred storage options and click Next\nSelect the proper networks for your network interfaces.\nThe destination network for the first network interface will be the network designated for the node’s management interface. If you opted for a single interface configuration, you will only need this interface connected. The destination network for the second network interface will be the network designated for the node’s data interface. If you opted for a single interface configuration you will still need to provide a port group for this to complete the deployment but it can be disconnected after deployment Verify the configuration data and click Finish to deploy the VM\nOnce your VM Template has finished deployment, power on the VM\nDeployment of your Trustgrid gateway node VM is now complete. If configuring this Node as a gateway, the next step will be to allow inbound TCP port 8443 to your gateway VM to allow remote nodes to connect back to it.\n","categories":"","description":"","excerpt":"Requirements Hardware Resources 4 vCPU 4 GB RAM 30 GB disk space …","ref":"/tutorials/deployments/deploy-vsphere/","tags":"","title":"Deploy to vSphere"},{"body":" Data store directory creation allows you to add new directories to organize your files in a hierarchical, tree-like structure.\nThe destination where the directory will be created can be changed by selecting a particular directory as the parent from the File Explorer sidebar. Field Name Description Parent Directory The data store location where this directory will created. Name The name of the directory to create. ","categories":["data store"],"description":"Create new directories in the Trustgrid data store","excerpt":"Create new directories in the Trustgrid data store","ref":"/docs/nodes/appliances/datastore/mkdir/","tags":["containers","s3","virtual machines"],"title":"Directory Creation"},{"body":"Symptoms Node does not connect to the Portal Packet captures show repeated DNS queries for gatekeeper.trustgrid.io but no response Cause DNS servers configured on edge node are not accessible A firewall is blocking TCP/UDP port 53 between the edge node and the configured DNS DNS servers configured on edge node cannot resolve public DNS entries for the trustgrid.io domain Troubleshooting Steps Determine the configured DNS Servers - Connecting a monitor to the node will display the current IP configuration including the DNS Servers as shown below: (If possible) Capture traffic between the edge node and the internet and confirm you see both a DNS query (usually for gatekeeper.trustgrid.io) AND response Resolution Ensure the edge node can make TCP/UDP connection on port 53 to the configured DNS server If using private DNS server ensure they have forwarders configured that can resolve trustgrid.io DNS records If configured DNS servers are incorrect the node will need to be manually reconfigured. Contact Trustgrid Support for assistance ","categories":"","description":"","excerpt":"Symptoms Node does not connect to the Portal Packet captures show …","ref":"/help-center/kb/startup-process/dns-failure/","tags":"","title":"Edge Node Behavior When DNS Resolution Fails"},{"body":"Symptoms Node will not connect to the portal Packet capture shows the following behavior: DNS request and response for gatekeeper.trustgrid.io and zuul.trustgrid.io TCP connection attempt to port 8443 on the returned IP address with no response A 2 minute delay before the above cycle repeats Cause The Trustgrid edge node cannot connect to the Trustgrid control plane over 8443 Verification Place a device in the same network (or assume the IP address of) the edge node. Confirm you can make a successful connection to gatekeeper.trustgrid.io:8443 using telnet, netcat or similar tool Resolution Adjust firewall settings to ensure TCP traffic over port 8443 is allowed to all of the Trustgrid control plane ","categories":"","description":"","excerpt":"Symptoms Node will not connect to the portal Packet capture shows the …","ref":"/help-center/kb/startup-process/8443-blocked/","tags":"","title":"Edge Node Behavior When Port 8443 is blocked"},{"body":" Products that alter SSL/TLS certificate chains will prevent the node from functioning normally.\nSymptoms Node will not connect - This will occur if the SSL/TLS chain is altered on port 8443 Node will not update - This will occur if the SSL/TLS chain is altered on port 443 Packet captures will show something like the below repeating: TLS “Client Hello” Server (Trustgrid IP) will send a reset (RST) Cause The integrity of communication is a critical feature of Trustgrid’s network solution. Any product that alters the SSL certificate chain will prevent the node from functioning normally.\nTypically this is caused by a security appliance (Next Generation Firewall or Web Proxy) doing some form of SSL Decryption (e.g. DPI-SSL, HTTPS inspection)\nVerification To verify this is indeed occurring you can run the below command from the Trustgrid terminal:\nopenssl s_client -connect repo.trustgrid.io:443 -showcerts This example is testing connectivity to the Trustgrid repository used for updates. You can replace repo.trustgrid.io:443 with gatekeeper.trustgrid.io:8443 to test connectivity to a Trustgrid service over 8443.\nAfter running you will need to scroll back to the top to see the first certificate in the chain\nIf the certificate chain is being altered you will see something like the below where Trustgrid is not the first entry:\nThe correct certiticate chain should look like:\nResolution Traffic on ports 443 and 8443 between the Trustgrid node and the Trustgrid public IPs and/or *.trustgrid.io must be excluded from any SSL/TLS decryption/inspection After excluding the traffic, restart the edge node ","categories":"","description":"","excerpt":" Products that alter SSL/TLS certificate chains will prevent the node …","ref":"/help-center/kb/startup-process/ssl-tls-tampering/","tags":"","title":"Edge Node Behavior When SSL / TLS Certificate is Altered"},{"body":" File syncing allows a user to transfer files to the data store as well as upload files from the data store.\nTransfer Files A user can populate the data store by transferring files from an Amazon S3 bucket or from an HTTP endpoint.\nThe destination where the file will be stored can be changed by selecting a particular directory from the File Explorer sidebar. Amazon S3 Transfer A user can select to transfer a file from an S3 URI.\nSync File Field Name Description S3 URI The S3 URI for the location of the file to transfer. Datastore Destination The data store location where the file will be transferred to. Configure Authentication In order to be able to utilize the S3 File Sync option, valid AWS credentials need to be configured on the node for the applicable S3 buckets.\nConfigure Bandwidth Throttling The S3 File Sync service will always try to utilize as much bandwidth as possible to perform the transfer of the file. If the amount of bandwidth needs to be limited, a user can configure the amount of bandwidth allowed to be utilized in Kbps/Mbps/Gbps.\nField Name Description Max Concurrent Requests The maximum number of concurrent requests allowed. Max Bandwidth The maximum bandwidth that will be consumed for uploading and downloading data to and from Amazon S3. Bandwidth Rate Rate associated to the Max Bandwidth specified. Supported values are Kbps, Mbps, and Gbps. In general, it is recommended to first use Max Concurrent Requests to lower transfers to the desired bandwidth consumption. The Max Bandwidth setting would then be used to further limit bandwidth consumption if setting Max Concurrent Requests is unable to lower bandwidth consumption to the desired rate. HTTP Endpoint Transfer A user can select to transfer a file from an HTTP endpoint. The endpoint has to be unauthenticated since the node currently doesn’t support providing credentials.\nSync File Field Name Description HTTP URI The HTTP URI for the location of the file to transfer. Datastore File Name The transferred file will be saved with this name under the datastore destination. Hash (Optional) Optional fields used to validate the integrity of the transferred file. Hashing Algorithm If a hash is specified, this specifies the hashing algorithm used during validation of the file. Upload Files\nA user can extract files from the datastore by uploading them to an Amazon S3 bucket or to an HTTP endpoint.\nA file needs to be selected first before the File Upload button gets enabled on the File Explorer menu bar. Amazon S3 Upload A user can select to transfer a file to an S3 URI.\nFile Upload Field Name Description S3 Bucket URI The S3 bucket URI for the location where the file will be uploaded. Datastore File The data store file to upload. For configuration of AWS authentication and Bandwidth Throttling refer to Configure Authentication and Configure Bandwidth Throttling HTTP Endpoint Upload A user can select to upload a file to an HTTP endpoint. The endpoint has to be unauthenticated since the node currently doesn’t support providing credentials.\nFile Upload Field Name Description HTTP URI The HTTP URI for the location where the file will be uploaded. Datastore File The data store file to upload. Use Multipart Used to denote if multipart should be used when uploading the file. True for use multipart and false otherwise. The node uses the POST method to perform the HTTP upload ","categories":["data store"],"description":"Transfer files between the data store and external locations like S3","excerpt":"Transfer files between the data store and external locations like S3","ref":"/docs/nodes/appliances/datastore/sync/","tags":["containers","s3","virtual machines"],"title":"File Sync"},{"body":" This page shows Flow Logs from all nodes in an organization. See this page for more info on Flow Logs\nFlow Log Export Trustgrid can export flow logs to any S3 bucket. Set your bucket name and apply the policy provided, and then Trustgrid will configure replication for your flow logs into your bucket.\nFields for configuring S3 replication Field Name Description AWS Account ID This is the AWS Account ID that contains the bucket you wish to have Flow Logs replicated to. S3 Bucket The bucket name. You must own the S3 bucket and apply the policy in AWS to allow Trustgrid to replicate files to the bucket. After submitting the above information, Trustgrid will complete their required configuration within 2 business days Requirements Enable Bucket Versioning You must enable bucket versioning on the target S3 bucket for replication to work.\nConfigure Bucket Policy Below is an example Bucket Policy with the required permissions to push flow logs to your S3 bucket. Be sure you replace example-flowlogs in lines 19 \u0026 20 with the name of your bucket and add this bucket policy to your S3 bucket. A customized policy is automatically generated in the portal for ease of use after you populate the Account ID and Bucket Name.\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"allow-tg-writes\", \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"arn:aws:iam::078223296091:root\" }, \"Action\": [ \"s3:ReplicateObject\", \"s3:ReplicateDelete\", \"s3:ReplicateTags\", \"s3:List*\", \"s3:GetBucketVersioning\", \"s3:PutBucketVersioning\" ], \"Resource\": [ \"arn:aws:s3:::example-flowlogs\", \"arn:aws:s3:::example-flowlogs/*\" ] } ] } ","categories":"","description":"","excerpt":" This page shows Flow Logs from all nodes in an organization. See this …","ref":"/docs/operations/flow-logs/","tags":"","title":"Organization Flow Logs"},{"body":"Setup Setting up the G Suite integration requires a G Suite administrator to perform the configuration.\nOnce the integration has been successful, the user sync selection will be presented:\nSync all users - Syncs all available users along with all the groups associated to the users. Sync users from specific groups - Syncs all users from the selected groups. Disconnect G Suite - Deletes all users and groups and removes the G Suite integration. Once the initial manual sync has occurred, automatic synchronization will happen once a day. Automatic synchronization guarantees up to date view of users and their corresponding groups. At any given point the sync selection can be changed and saved, and the sync will automatically start. ","categories":["idps"],"description":"","excerpt":"Setup Setting up the G Suite integration requires a G Suite …","ref":"/docs/idps/gsuite-idp-fields/","tags":"","title":"G Suite"},{"body":" Trustgrid supports configuring GRE tunnels that can be used to establish connectivity to any appliance that supports the GRE protocol. A GRE tunnel interface is created which can then be attached to an interface on a node. VRFs can then be used to control the flow of traffic and how it should appear on the network.\nConfigure GRE Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu, select Add Tunnel, and then select GRE\nGRE Tunnel Configuration Parameters Field Name Description Name The name of the GRE tunnel interface that will be created on the Trustgrid node Description (optional) Used to document the purpose of the tunnel IP the IP address assigned to the node’s tunnel interface in CIDR notation Peer the remote IP address of the device the tunnel is being established with VRF existing VRF on the node the tunnel is being associated with MTU the maximum transmission unit (MTU) of the tunnel interface. Typically should be set to 1476 or lower. ","categories":["node"],"description":"Configure GRE tunnels to establish connectivity between nodes and external devices","excerpt":"Configure GRE tunnels to establish connectivity between nodes and …","ref":"/docs/nodes/appliances/tunnels/gre/","tags":["tunnels","networking"],"title":"GRE"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/idps/","tags":"","title":"Idps"},{"body":"The images section shows the container images that have been downloaded to the node. They may be deleted to free up space.\n","categories":"","description":"Manage container images stored on nodes","excerpt":"Manage container images stored on nodes","ref":"/docs/nodes/appliances/containers/images/","tags":"","title":"Images"},{"body":"The images section allows a user to add/delete virtual machine images.\nThe Downloaded column shows whether or not an image is present on the node. Field Name Description Display Name Friendly name associated to the image. Description Description for the image. Image File Image file selected from the node data store. Operating System Operating System for the image. This is rather important to optimize the virtual machine configuration. If an incorrect Operating System is selected for the image, the virtual machine might not be able to detect install media or perform critical device controller operations Delete Image If the image is present on the node, executing a delete of the image will prompt the deletion of the image from the node.\nYes - The image will be attempted to be deleted from the node first before the image entry is removed. No - The image will not be deleted from the node and the image entry will be removed. ","categories":["virtual machines"],"description":"Manage KVM images","excerpt":"Manage KVM images","ref":"/docs/nodes/appliances/kvm/images/","tags":"","title":"Images"},{"body":"How it works Trustgrid provides the ability for a floating IP address to be assigned to a Trustgrid cluster. When failover occurs, the floating IP address will automatically be assigned to the active appliance in the cluster. This feature works by creating a new Azure IP Configuration and associating it with the interface of the active cluster node.\nGraceful Failover This describes the process of a graceful failover when the active member of the node is changed but both members are online and working normally.\nThe Trustgrid appliance that is relinquishing the active role will remove the Azure IP Configuration from the interface. The Trustgrid appliance that is gaining the active role will create a new Azure IP Configuration and associate it with the interface. Ungraceful Failover This describes the process of an ungraceful failover when cluster health conditions prevent the active member of the node from functioning.\nAfter the specified Cluster Timeout period has elapsed the Trustgrid appliance that is taking the active role will remove the Azure IP Configuration from the interface on the prior active node. The now active Trustgrid appliance will create a new Azure IP Configuration and associate its own interface. Requirements for HA IP Failover Permissions to create and manage the Azure IP Configuration An unused private IP address in the subnet of the interface where the Azure IP Configuration is defined Permissions Required for Cluster IP Failover Below details how to create a custom role definition with the minimum required permissions, that can be assigned to the Trustgrid appliance via the Azure Portal. Alternatively, you can use the Build-In Role “Network Contributor” role.\nThe Trustgrid appliances need permissions to:\nCreate a new IP Configuration for themselves. This requires permissions to the resource group where the Trustgrid appliances and the attached subnet are deployed. Delete an IP Configuration for their cluster peer. Associate the IP Configuration with their interface. Associate the IP Configuration with any Security Group or Application Security Groups that are associated with the interface/virtual machine. The assignableScopes section will need to be modified to represent the subscription or resource group where the Trustgrid appliances and their attached subnets are deployed. { \"properties\": { \"roleName\": \"tg-cluster-ip-failover\", \"description\": \"Manage Trustgrid Cluster IP Failover\", \"assignableScopes\": [ ], \"permissions\": [ { \"actions\": [ \"Microsoft.Network/networkInterfaces/read\", \"Microsoft.Network/networkInterfaces/write\", \"Microsoft.Network/networkInterfaces/ipconfigurations/read\", \"Microsoft.Network/networkInterfaces/ipconfigurations/join/action\", \"Microsoft.Network/networkSecurityGroups/join/action\", \"Microsoft.Network/virtualNetworks/subnets/read\", \"Microsoft.Compute/virtualMachines/read\", \"Microsoft.Network/virtualNetworks/subnets/join/action\", \"Microsoft.Network/applicationSecurityGroups/joinIpConfiguration/action\" ], \"notActions\": [], \"dataActions\": [], \"notDataActions\": [] } ] } }\nCreate and Assign Custom Role via Azure Portal A custom role needs to be created in the Azure subscription that allows the Trustgrid nodes to update the IP Configuration when failover occurs\nCreate the custom role In the Azure portal search for “Subscriptions” and select the Subscriptions service Select the subscription that contains the Trustgrid VMs Select “Access control (IAM),” then click “+Add”, then “Add custom role” Save the JSON above to a file named azure-custom-role-sample.json. Select “Start from JSON” and from the file selector, select the downloaded json file. Optionally, update the role name to meet your internal naming conventions. Click Next. On the Permissions page you will see the permissions that will be granted. Click Next again. On the Assignable Scopes page click +Add Assignable Scope From the Type select Resource Group From the Subscription, select the subscription containing your VMs. From the Select pane on the right search for and select the Resource Group containing you VM’s Click Select and then Next. Repeat for the resource group containing the VMs’ virtual network (if different than the VMs). Alternatively, you can set the assignable scopes to the entire subscription that contain the VMs and virtual network. On the JSON page, click the Next button. Click Review + Create, then click Create. Assign the custom role to your Trustgrid VM’s system-assigned In the Azure portal search for Resource Groups and select the service Select your target Resource Group (start with the group containing your Trustgrid VMs) Select the Access Control (IAM) panel, then click +Add, then “Add role assignment” Search for and select the desired role and click Next Under “Assign access to” select “Managed Identity” then click +Select members From the Managed Identity dropdown select Virtual Machine Select the identity for your first Trustgrid VM Click select. Click +Select members again and repeat with your second Trustgrid VM Click “Review + Assign” then “Review + Assign” a second time If the VMs’ virtual network is in a different resource group, repeat the above steps for the virtual network resource group. Azure permission changes can take a few minutes to go into effect and a reboot of the VMs is required to pickup. ","categories":"","description":"IP Failover for Azure appliances","excerpt":"IP Failover for Azure appliances","ref":"/tutorials/deployments/deploy-azure/ip-failover/","tags":"","title":"Azure IP Failover"},{"body":" Trustgrid supports configuring traditional IPSec tunnels that can be used to establish connectivity to any appliance that supports the IPSec protocol. Once an IPSec tunnel is configured an IPSec virtual interface is created that can be attached to a node interface. VRFs can be used in conjunction to explicitly control what traffic is allowed (VRF ACLs) to pass and how it should look on the network (VRF NATs or Traffic Rules).\nConfigure IPSec Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu, and select Add Tunnel and then select IPSEC\nIPsec Tunnel Configuration Parameters Required Parameters Name - the name of the IPSec tunnel interface that will be created on the node and displayed in the Trustgrid Portal Description - used to document the purpose of the tunnel Interface - the network interface the tunnel will be listening on. Typically this will be network adapter 1 which is the WAN interface Interface IP - the IP address the tunnel will be created to use in CIDR. Typically this would be a /30. Interface VRF - the VRF the tunnel will be associated with in order to apply ACLs / NATs / Routes or Traffic Rules Interface MTU - the specified MTU of the tunnel interface. Typically this can be left to the default of 1436 IKE Version - select version 1 or version 2 Peer IP - The remote IP address of the appliance the tunnel is being established with IKE Cipher - The cipher used for phase 1 IKE DH Group - The Diffie-Hellman Group used for phase 1 IPSEC Cipher - the cipher used for phase 2 PFS - The Diffie-Hellman Group used for phase 2 perfect forward secrecy DPD Interval - seconds for dead peer detection DPD Retries - number of dead peer detection retries before the tunnel is re-keyed / torn down Rekey Interval - time in seconds before a re-key of the tunnel is initiated Replay Window - the size of the replay window which is used to prevent replay attacks. Typically set between 64 and 128 Local Subnet - the local subnet in CIDR that will be considered interesting traffic and be allowed to forward over the tunnel Remote Subnet - the remote subnet in CIDR will be considered interesting traffic and be received on the tunnel Auto Add - the connection is added and then waits for the remote peer to initiate the tunnel establishment Auto Start - the connection is added and then attempts to initiate the tunnel to the remote peer PSK - the pre-shared key used by both peers to establish the tunnel Optional Parameters Virtual Network - associate the tunnel to a Trustgrid Virtual Network IKE Local ID - The IP address that will be seen by the remote peer to establish the tunnel. Typically this would be the public-facing WAN IP of the Trustgrid Node. IKE Remote ID - Used for identity validation. Typically this is the same address as the Peer IP ","categories":["node"],"description":"Configure IPSEC tunnels to establish secure connectivity between nodes and external devices","excerpt":"Configure IPSEC tunnels to establish secure connectivity between nodes …","ref":"/docs/nodes/appliances/tunnels/ipsec/","tags":["tunnels","networking"],"title":"IPSec"},{"body":" These settings only apply to appliance-based Trustgrid nodes Memory Settings The Java Virtual Machine (JVM) is responsible for managing the memory used by the Trustgrid service on appliances. Two key parameters that control this memory management are the minimum (min) and maximum (max) memory values.\nMinimum Memory: This is the initial memory allocation for the JVM. When your Java application starts, the JVM allocates this amount of memory right away. It’s like setting a base size for the memory footprint of your application.\nMaximum Memory: This is the maximum amount of memory the JVM is allowed to use. If your application needs more memory than the initial amount (set by min), it will continue to use more up to this maximum limit.\nParameter Default Recommendations Minimum 512MB 512MB is the recommended smallest value Maximum 1GB - Start with the total available system memory - Subtract ~ 1G for OS and other processes - If running containers or virtual machines on the appliance subtract their expected memory usage - Set the value so that it does not exceed about 75% of remaining memory Why Increase the Max Memory? Handling Larger Workloads: If your Trustgrid appliance is managing a large number of flows or processing large amounts of data, increasing the maximum memory can help accommodate spikes in memory usage without triggering garbage collection as frequently.\nPerformance Optimization: Increasing the max memory can reduce the frequency of garbage collection (a process that frees up memory by removing unused objects), which can improve performance.\nRemember, while increasing max memory can help, it’s important to balance it with the available system resources to avoid starving other processes or causing system-wide issues.\nJava Garbage Collection The Java Garbage Collection system:\nAutomatically frees up memory by removing unused objects. Essential for managing memory in the JVM. There are multiple different garbage collectors, each with its own strategy and performance characteristics. The default garbage collector on Trustgrid appliances is the Parallel GC. Optionally, we also support using the G1 Garbage Collector.\nSwitching to G1 Garbage Collector Better Performance: G1 offers more predictable garbage collection pauses, reducing latency. Handling Large Memory: Efficient for applications with large heaps. Despite these advantages, Trustgrid has not yet been able to see significant performance improvements by switching to G1 over Parallel GC in most customer environments. Unless you are experiencing specific performance issues, we recommend leaving the default Parallel GC.\nContact Trustgrid support if you need to adjust these settings ","categories":"","description":"Default settings for the Java Virtual Machine (JVM) running on Trustgrid appliances\n","excerpt":"Default settings for the Java Virtual Machine (JVM) running on …","ref":"/help-center/kb/default-settings/jvm/","tags":"","title":"Java Virtual Machine (JVM)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/layer-4/","tags":"","title":"Layer 4"},{"body":"Add Member This will add the selected node to the cluster and gain any configuration defined at the cluster level.\nClick Actions \u003e Add Node. Action \u003e Add Node Select the desired node from the list. This is a type-ahead field that will filter the list as you type. Click Add Node. Member node selection list You are prompted if you want to configure cluster heartbeat settings. Prompt to configure heartbeat settings No - The node is added to the cluster and you will manually need to navigate to the node’s cluster settings and configure the heartbeat before it will be healthy. Yes - The configuration prompt allows you to set the Heartbeat and, optionally, the Status Endpoint settings. Heartbeat and Status Endpoint settings Remove Member Removing a node from a cluster will remove the cluster heartbeat and endpoint settings defined on the node and any cluster-level configuration.\nSelect the desired node from the member table. Click Action \u003e Remove Node. Remove Node option from Actions Confirm you want to remove the node by clicking Yes. ","categories":"","description":"","excerpt":"Add Member This will add the selected node to the cluster and gain any …","ref":"/docs/clusters/manage-members/","tags":"","title":"Manage Cluster Members"},{"body":"Timeouts The table below details the time the Trustgrid network process waits before terminating a flow. Flows are matched based on the IP tuple (source ip, source port, destination ip, destination port).\nProtocol States Time(seconds) Description TCP SYN_SENT, SYN_RECEIVED 15 Covers flows that have not yet completed a 3-way TCP handshake. e.g. (SYN, SYN/ACK, ACK) TCP CLOSE_WAIT, TIME_WAIT, FIN_WAIT 60 Covers flows that have started the TCP close process. TCP ESTABLISHED 900 Covers established flows. The connection must be idle for the entire 15 minutes (900 s) for this timeout to be applied. UDP not applicable 60 Covers all UDP flows as the protocol is stateless ICMP not applicable 5 Covers all ICMP flows as the protocol is stateless Virtual Network Routes are only evaluated when a flow is first created. If you modify VPN routes after a flow is established, it will not impact existing flows. If you have an application that reuses the same IP tuple then you will need to make sure it is inactive long enough for the appropriate timeout to occur.\nContact Trustgrid support if you need to adjust these settings ","categories":"","description":"Default settings impacting network flows traversing Trustgrid devices\n","excerpt":"Default settings impacting network flows traversing Trustgrid devices\n","ref":"/help-center/kb/default-settings/network-flows/","tags":"","title":"Network Flow Default Settings"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/networking/","tags":"","title":"Networking"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/node/","tags":"","title":"Node"},{"body":"Invited users utilize Trustgrid’s native authentication provider for password complexity and multi-factor authentication.\nUsers authenticating via a custom identity provider will use that system’s password complexity and MFA requirements.\nPassword Complexity At least 10 characters in length Lower case (a-z), upper case (A-Z) and numbers (0-9) Special characters (-!@#$%^\u0026*) No more than 2 identical characters in a row Cannot reuse the last 5 passwords Cannot be in the list of the 10,000 most common passwords Cannot include the user’s name, username, or email address Multi-factor Authentication Requirements The Trustgrid native provider utilizes a One-time Password via applications such as Google Authenticator or similar to provide multi-factor authentication during login.\n","categories":"","description":"","excerpt":"Invited users utilize Trustgrid’s native authentication provider for …","ref":"/docs/user-management/users/password-complexity-requirements/","tags":"","title":"Password Complexity and MFA Requirements"},{"body":"Prerequisites Both the source and destination nodes should have a virtual management IP configured There should be a unique IP under Node \u003e Configuration \u003e VPN \u003e Virtual Management IP In the virtual network route configuration in your domain, a route should exist with the following settings: Destination: node name (even if part of a cluster) Destination CIDR: virtual management IP with a /32 suffix Metric: 1 Use the View Virtual Route Table tool to verify both the source and destination nodes have valid, available routes to each other’s virtual management IP Need to know the virtual IP address of the inside NAT if targeting a local IP on the destination network Need to know the virtual management IP address of the destination node if only verifying VPN network connectivity The Ping Remote Node tool allows you to verify data plane communication by node name Usage Login to the Trustgrid portal and navigate to the Node from which you want to test connectivity.\nSelect VPN under the Network section.\nClick the Tools button and select the Ping Remote Virtual Host option from the Select a service dropdown.\nModify the host parameter to the target virtual IP address and click Execute.\nA window will pop up with the content like below.\nResponses There are several configuration elements that need to be configured and working for a VPN deployment to be successful. When something is not configured correctly, the trustgrid node responds to an ICMP ping with a variety of different “Destination Unreachable” error messages that can indicate what exactly appears to be wrong. Here are the error responses the node may give when attempting to ping a remote machine through the VPN when something is amiss.\nDestination Net Unknown This error means that the node cannot find an interface network binding with an inside and outside nat that match the requests source and destination IP. You should re-examine the inside and outside nats for the node interface that is receiving the packet, and make sure that an inside nat is defined that matches the source machines local IP and an outside nat that matches the virtual destination IP (or that no outside nat is present, which defaults to 1x1).\nDestination Net Unreachable This error means that the node cannot find a route defined at the domain/network level for the destination IP in this request. You should examine the domain route definitions and make sure that one is included for the virtual destination IP address you are trying to ping. Use the View Virtual Route Table tool using the target IP as a filter to confirm the route exists and is available.\nDestination Host Unreachable This error indicates that there is a route defined for the ping dest IP, but that the destination node associated with the route is not currently connected to this node. You should look at the routes in the source node’s detail page in the portal and make sure that there is one included for the destination node that should be receiving the request.\nPacket Filtered This error results when the ping request could not be performed do to the lack of a domain network ACL allowing the request. While this itself only indicates that ICMP traffic is not allowed between these two hosts in this direction, it can be used as a valuable indicator of a bigger policy issue. Check your ACL list in the portal to ensure that icmp are allowed between these to hosts.\nDestination Host Unknown This error happens when the ping packet made it to the destination node, but no set of inside/outside nats could be found that include the source and destination IPs of this request. Check the destination node VPN settings to ensure an inside NAT is present for the virtual destination IP of the request, and either an outside NAT exists and includes the virtual source IP, or no outside NAT is present, which defaults to 1x1.\nNo Ping Response Error When a ping sits there and no response is received, usually the best way to troubleshoot further is to sniff interface traffic with a filter of icmp and host \u003ctarget-ip\u003e on the source and dest nodes.\nWhen troubleshooting, keep in mind that the lack of an error likely means one of the following:\nThe local node VPN interface that should be receiving the packet hasn’t been configured correctly. The local firewall, router or target machine isn’t correctly routing packets to the source node. There is an ARP issue on either the source or destination node where the node isn’t responding correctly (tcpdump -i \u003cdata_nic\u003e arp) There is no responding machine on the remote side! ","categories":"","description":"Ping a remote virtual host from a node","excerpt":"Ping a remote virtual host from a node","ref":"/tutorials/remote-tools/ping-remote-virtual-host/","tags":"","title":"Ping Remote Virtual Host"},{"body":"Symptoms Node will not update either automatically or when manually triggered Node will not be able to pull down container images from the organization repository Node cannot send up debug logs Cause The Trustgrid node cannot connect to repo.trustgrid.io on port 443 to update packages Troubleshooting Connectivity Either of the below methods can be used to verify connectivity:\nUse the Interface TCP Port Test tool. Make sure the WAN interfaces IP is the source, repo.trustgrid.io is the Host, and 443 is the target Successful interface port test From the terminal run the command nc -vz repo.trustgrid.io 443 Copy Successful TCP connection test from terminal If the above tests are successful but the device still exhibits the symptoms listed above, the issue is likely that something is interfering with the TLS certificate\nIf unsuccessful:\nFirst confirm repo.trustgrid.io is resolvable by the configured DNS servers. In this example, we will assume the DNS server is 8.8.8.8, replace this with the configured DNS server IPs. From the terminal run the command: dig @8.8.8.8 repo.trustgrid.io Copy Successful DNS resolution. Note: returned IP address will vary. Repeat the above process with the second configured DNS server if available. If either fails to confirm: Any firewall rules are not blocking TCP and UDP port 53 to the configured DNS server Confirm there is not an interface route on any LAN interface for CIDR that includes the DNS server’s IP. This will cause requests to route out the LAN interface instead of WAN and only after the Trustgrid service has started and brought up the LAN interfaces. If DNS returns an IP address but the connection still fails, confirm any firewall between the node and the internet allows port 443 and port 8443 to the Trustgrid control plane public IP ranges. Resolution Confirm the node can resolve repo.trustgrid.io Ensure the node can connect to repo.trustgrid.io:443 ","categories":"","description":"Details the symptoms, potential causes, and resolution steps when port 443 to the Trustgrid Control Plane is blocked.","excerpt":"Details the symptoms, potential causes, and resolution steps when port …","ref":"/help-center/kb/upgrade-process/443-blocked/","tags":"","title":"Node Behavior When Port 443 is blocked"},{"body":" This feature is currently available as a preview and requires Trustgrid support to grant portal users access to activate nodes. Overview The remote console registration process allows for a Trustgrid Node running a generic image to be registered with a valid Trustgrid account.\nRequirements Console access to the Trustgrid Node. This could be achieved via: For physical devices either keyboard and monitor connections or serial console For VMware or Hyper-V remote console access For Azure and AWS serial console access via each providers management portal Portal access with the appropriate permissions to activate nodes. Note: It is not necessary for a single person to have both console and portal access. This would allows a Trustgrid customer to ship their clients a generically imaged device or access to a virtual machine image.\nOnce the node is deployed with the required network access the Trustgrid customer can work together with their client to complete the activation process.\nHigh-Level Process The user with console access to a Trustgrid node logs in: If necessary they can configure a static IP address from the console. They then initiate the registration process. This triggers a process that generates unique certificates for the node, upgrades to the latest version, and generates a short activation code. The node will then begin checking with the Trustgrid control plane to see if it has been activated. This code can then be shared with a user with access to the Trustgrid portal. That user can then enter the code in the Trustgrid portal via the Activate Node action. After entering the code they are prompted to provide a name for the node and click License Node. When the node detects its code has been activated it finalizes registration and then reboots. The node is then available for use and configuration. Registering a Node Generating Activation Code from Console Gain console access Login as tgadmin (Optional) Use the Network Configuration Option to change the IP. Default is to use DHCP. Select the Register Node action from the main menu. Remote Registration Menu option You will be prompted to confirm the make and model of the node and the correct control plane endpoints to register with. These should default to the correct settings for your model, if not work with Trustgrid Support. Confirm Options The node will then generate a unique activation code. This code can be shared with a user with access to the Trustgrid portal. Example registration code Portal Activation Process Currently only users that have been granted access to this feature will see the action to activate a node.\nThe user with access to the Trustgrid portal logs in and navigates to the Nodes page. Select the Activate Node action and enter the activation code generated by the Trustgrid console. Nodes table Activate button Enter the activation code from the Trustgrid console and click Find. Entering the Activate Code Enter a name for the node and click License Node. Node information and prompt for name The portal will display a message indicating the node has been activated. Activation notice The node will complete the registration process and reboot. The node will then be available for use and configuration. Registered node listed in Nodes table Console view after the registered nodes has rebooted. Deregistering a Node In rare circumstances a node may need to be deregistered which will remove the link between it and the account it was registered with. This will not remove the node from the Trustgrid control plane but communication with both the Trustgrid control plane and any data plane gateways will be severed. This is a one-way process and the node will need to be re-registered with the Trustgrid control plane to re-establish communication.\nThis process does not completely reset the device to its initial image state, but should be suitable for redeploying at the same site. Deregistration Process Gain console access Login as tgadmin Select the Deregister Node action from the main menu. Deregister Menu When prompted confirm you wish to deregister the node. Deregister Confirmation You will then be prompted to enter DEREGISTER to confirm. Second deregister Confirmation The node will then: If the node is currently connected to the Trustgrid control plane it will send a “Deregister” event type and disconnect from the control plane and any data plane gateways. Deregister event Remove it’s local certificates and reset it self to be ready to re-register. Pre-registration Utilities Before the node is registered there are a number of utilities available to assist with configuration and troubleshooting.\nNetwork Configuration Utility This utility is useful for switching the node to use a static IP or back to DHCP. T\nSelect Network Configuration option If prompted, Select the WAN interface. This is typically the first option listed. Select the IP allocation method. Option to select DHCP or Static IP DHCP - this will automatically reconfigure the interface for DHCP. Static IP - this will open the dialog below. Enter the desired config and click OK to apply. Static IP configuration prompt You will then be prompted to confirm if you want to permanently save the configuration. Network Tools Shell This is the same as the Troubleshooting - Network Tools Shell\nTest Network Access This will attempt to confirm required access is in place to successfully connect to the Trustgrid Control Plane. Confirms successfully control plane connectivity Log Shell This will open a shell in the Trustgrid log directory. This will be empty unless a failed registration has occurred. Work with Trustgrid support to troubleshoot why registration failed.\nUpgrade Node This is the same as the Troubleshooting - Force Upgrade\nAdvanced Registration Settings This can override the default settings included in the image. This should only be used in consultation with Trustgrid Support.\n","categories":"","description":"Shows how the Trustgrid console can be used to register and deregister a Trustgrid Node","excerpt":"Shows how the Trustgrid console can be used to register and deregister …","ref":"/tutorials/local-console-utility/remote-registration/","tags":"","title":"Remote Console Registration"},{"body":"Restarting the agent service is sometimes necessary to reload configuration changes or restart the agent process. The steps to restart the agent service depends on the operating system.\nRestarting the agent service will disrupt traffic across the node. Restarting Linux Agent Restart Ubuntu Agents Gain console access to the agent host system via SSH or local console with a user with sudo access to run the below commands. Run the command sudo systemctl restart tg-agent Copy ","categories":"","description":"Learn how to restart the Trustgrid Agent service","excerpt":"Learn how to restart the Trustgrid Agent service","ref":"/tutorials/management-tasks/agent-mgmt/restart-agent/","tags":"","title":"Restart Agent Node Service"},{"body":"How it works Trustgrid provides the ability for a cluster of Azure based appliances to published routes to one or more Azure route table. When failover occurs, the Trustgrid appliance will automatically update the next hop IP address in the route table to the active appliance in the cluster.\nGraceful Failover This describes the process of a graceful failover when the active member of the node is changed but both members are online and working normally.\nThe Trustgrid appliance that is relinquishing the active role will remove the Azure Route Table Entry(ies) from the route table(s). The Trustgrid appliance that is gaining the active role will create a new Azure Route Table Entry(ies) and associate it with the route table(s). Ungraceful Failover This describes the process of an ungraceful failover when cluster health conditions prevent the active member of the node from functioning.\nAfter the specified Cluster Timeout period has elapsed the Trustgrid appliance that is taking the active role will remove the Azure Route Table Entry(ies) from the route table(s). The now active Trustgrid appliance will create a new Azure Route Table Entry and associate its own interface IP. Requirements for HA Route Failover One or more route tables. By default, the node attempts to use the route table associated with the subnet of the interface where the Azure Route Table Entry is defined. Trustgrid Nodes need Azure permissions to modify route tables Azure Routing Table An Azure routing table resource needs to be associated with the LAN interface’s subnet.\nView LAN Subnet Routing Table In the Azure Portal search for Virtual Networks and select the service From the list of Virtual Networks select your target Virtual Network From the navigation panel select Subnets Select your inside/private subnet that is attached to the LAN interface of your Trustgrid VMs There should be a route table Create Route Table for LAN Subnet If there is no Route Table associated with your LAN/inside/private subnet you will need to add it. In the Azure portal search for Route Tables and select the service Click the +Create button Select the Resource Group that contains your Virtual Network and VMs Select the Region that your VMs are deployed in Give the Route Table a name consistent with your naming conventions (Optional) change the Propagate Gateway routes option. Click Review + Create, review then click Review + Create again Repeat the above steps to “View LAN Subnet Routing Table” and change the route table from None to the newly created Route Table. Save the change Permissions Required for Cluster Route Failover Copy this sample json file for use in creating a custom role with the required permissions. See process below.\nThe assignableScopes section will need to be modified to represent the subscription or resource group where the Trustgrid appliances and any route tables they will modify reside.\n{ \"properties\": { \"roleName\": \"tg-route-table\", \"description\": \"manage azure route table\", \"assignableScopes\": [ ], \"permissions\": [ { \"actions\": [ \"Microsoft.Network/networkWatchers/nextHop/action\", \"Microsoft.Network/networkInterfaces/effectiveRouteTable/action\", \"Microsoft.Network/routeTables/routes/delete\", \"Microsoft.Network/routeTables/routes/write\", \"Microsoft.Network/routeTables/routes/read\", \"Microsoft.Network/routeTables/join/action\", \"Microsoft.Network/routeTables/delete\", \"Microsoft.Network/routeTables/write\", \"Microsoft.Network/routeTables/read\", \"Microsoft.Network/networkInterfaces/read\", \"Microsoft.Network/virtualNetworks/read\", \"Microsoft.Compute/virtualMachines/read\" ], \"notActions\": [], \"dataActions\": [], \"notDataActions\": [] } ] } } Create and Assign Custom Role via Azure Portal A custom role needs to be created in the Azure subscription that allows the Trustgrid nodes to update the route table when failover occurs\nCreate the custom role In the Azure portal search for “Subscriptions” and select the Subscriptions service Select the subscription that contains the Trustgrid VMs Select “Access control (IAM),” then click “+Add”, then “Add custom role” Save the JSON above to a file named azure-custom-role-sample.json. Select “Start from JSON” and from the file selector, select the downloaded json file. Optionally, update the role name to meet your internal naming conventions. Click Next. On the Permissions page you will see the permissions that will be granted. Click Next again. On the Assignable Scopes page click +Add Assignable Scope From the Type select Resource Group From the Subscription, select the subscription containing your VMs and virtual networks. From the Select pane on the right search for and select the Resource Group containing you VM’s Click Select and then Next. Repeat for any other resource groups that contain route tables that will be modified by the Trustgrid nodes. Alternatively, you can set the assignable scopes to the entire subscription(s) that container the VMs and route tables. On the JSON page, click the Next button. Click Review + Create, then click Create. Assign the custom role to your Trustgrid VM’s system-assigned In the Azure portal search for Resource Groups and select the service Select your target Resource Group (start with the group containing your Trustgrid VMs) Select the Access Control (IAM) panel, then click +Add, then “Add role assignment” Search for and select the desired role and click Next Under “Assign access to” select “Managed Identity” then click +Select members From the Managed Identity dropdown select Virtual Machine Select the identity for your first Trustgrid VM Click select. Click +Select members again and repeat with your second Trustgrid VM Click “Review + Assign” then “Review + Assign” a second time Repeat the above steps for any other resource groups that contain route tables that will be modified by the Trustgrid nodes. Azure permission changes can take a few minutes to go into effect and a reboot of the VMs is required to pickup. ","categories":"","description":"Route failover for Azure appliances","excerpt":"Route failover for Azure appliances","ref":"/tutorials/deployments/deploy-azure/route-failover/","tags":"","title":"Azure Route Failover"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/s3/","tags":"","title":"S3"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"The Sniff Traffic tool allows you to monitor traffic on a local network interface in realtime within the Trustgrid portal. Only the header information such as source and destination IPs, TCP flags, sequence numbers, etc. are displayed.\nUsing Sniff Interface Traffic Login to the Trustgrid portal and navigate to the Node from which you want to view traffic. Select Interfaces under the Network section. Then from the dropdown select the interface whose traffic you want to monitor. Selecting the desired interface Click the Sniff Traffic button. Set the Interface and Filters to match the traffic you wish to monitor. Field Name Description Interface The interface name. This should be auto-populated with the interface selected above. If not, either click the Reset Default button or erase the interface name and select from the list. Filter The tool utilizes TCPDump filtering syntax, which can help isolate interesting traffic. The below filter would show only ICMP and TCP traffic. See the useful filters below for a quick introduction. Click Execute to view the captured traffic Example output of sniffing interface traffic Useful Filters The below filters can be combined using “and” \u0026 “or” without quotes\nYou can filter based on protocol such as “tcp”, “udp”, or “icmp” without quotes Best practice is to filter for what you want to see rather than filter out what you don’t want to see To see only traffic for a specific host use “host x.x.x.x” with the IP address in place of the x.x.x.x To see only traffic for a specific port use “port XXXX” replacing the XXXX with the desired port number If capturing traffic on a clustered node, you should filter out the cluster port traffic. Typically port 9000 or 1975. E.g., not port 9000 If capturing on the ETH0 - WAN Interface, you should filter out traffic to both Trustgrid’s network (35.171.100.16/28) and your data plane gateways’ network or public IP. You’ll need to identify the actual network or IPs. E.g., not net 35.171.100.16/28 and not net X.X.X.X/X or not net 35.171.100.16/28 and not host X.X.X.X. ","categories":"","description":"Monitor network traffic on a local interface in realtime","excerpt":"Monitor network traffic on a local interface in realtime","ref":"/tutorials/interface-tools/sniff-interface-traffic/","tags":"","title":"Sniff Traffic Interface Tool"},{"body":"Summary This tool allows you to monitor the traffic flowing over a VPN tunnel by “sniffing” inside the tunnel. This allows traffic to be viewed after NATs have been applied and confirm traffic is routed to or from the expected node.\nUsage This tool is accessed on a node’s detail page under the VPN panel. Select the desired attached virtual network (note: if only on virtual network is present it will be selected by default) and click the “Tools” button in the top right. Sniff Virtual Traffic Button Once launched, you will be prompted to provide any filters to limit the traffic displayed. The default is to show all traffic on that virtual network tunnel.\nFilter Prompt Field Name Description Peer(s) Use this field to filter for traffic only between the current node and the listed peer. Protocol(s) Filter to specified network protocol(s): any, tcp, udp, or icmp Host(s) Filter to see traffic matching the specified virtual IP address(es) Port(s) Filter to see traffic matching the specified ports. This will match either a destination or source port. The operator on the left allows for matching based on:\nequal (=) not equal (!=) to exclude traffic for the specified port greater than (\u003e) and less than (\u003c) a port range (\u003c\u003e) which will show all traffic with ports between the two values For ICMP, this field does not apply.\nTCP Flags Only applies to TCP traffic. It can filter based on the following flags:\nS = SYN - The start of a new TCP connection . = ACK - Acknowledges received data P = PSH - Data is ready to be read by the application F = FIN - Closing the connection R = RST - Resetting the connection More than one flag can be specified, such as “S.” to show only traffic with SYN or ACK flags set.\nFor the peer, protocol, host, and ports fields additional values can be provided to filter for more than one item. When multiple values are listed they are combined in using an OR operator. Packets matching any of the listed values will be shown. Output Below shows sample output from using this tool to monitor traffic on a virtual network between two nodes:\nSample Output The output includes the following data for each packet: Field Name Description Timestamp The time the packet was seen Peer The source or destination node of the packet Remote Virtual IP:Port The virtual IP address and port of the source or destination remote endpoint Direction Indicator The symbols indicating if the packet was sent or received by the local node:\n\u003c indicates the local node sent the packet to the peer \u003e indicates the remote peer sent the packet to the local node Local Virtual IP:Port The virtual IP address and port of the local endpoint Packet Header Information Additional metadata about the packet such as:\nprotocol TCP flags sequence and acknowledgement numbers data length ","categories":"","description":"Monitor traffic inside a virtual network tunnel","excerpt":"Monitor traffic inside a virtual network tunnel","ref":"/tutorials/remote-tools/sniff-virtual-traffic/","tags":"","title":"Sniff Virtual Traffic"},{"body":" Support Request section This panel allows you to submit a request for assistance from the Trustgrid Support Team with the product or service. Please provide as much detail as possible about the issue you are experiencing so our support team can help resolve it quickly.\nThe support requests will be submitted with your user account email address. Field Name Description Phone number Provide the phone number you’d like to be contacted at regarding this issue. Urgency Normal - Trustgrid will respond during normal business hours (Mon-Fri 8:30am-5:30pm Central) Emergency - only for production impacting issues; Trustgrid will respond 24x7 within established SLA. This level of support is available to paying customers only. Problem Description Please list details about the nature of the issue, any particular resources being impacted (e.g. a specific destination IP:port, source IP, etc.) and troubleshooting steps already taken. Impacted Nodes/Clusters This field will allow you to search for and select the impacted nodes. If a large number of nodes is impacted please provide at least a few examples and clarify the impact in the Problem Description field.\nAfter providing the details of the issue, click the Submit button below to create the support request.\n","categories":"","description":"Allows customers to request support from within the portal","excerpt":"Allows customers to request support from within the portal","ref":"/docs/support/support-request/","tags":"","title":"Submit a Support Request"},{"body":"Description Running the ThousandEyes Enterprise Agent from remote locations on Trustgrid Nodes enables organizations to monitor network latency and performance across different regions, ensuring a consistent user experience. It helps identify issues and proactively address network problems before they impact users. This monitoring can go beyond Trustgrid’s native hop monitoring to perform additional tests. For organizations already using ThousandEyes this can provide a single pane of glass view of network performance.\nThis guide walks through how to download the latest published container, push it to the private Trustgrid container repository for your organization and then configure an Trustgrid node or cluster to run the container.\nPrerequisites You will need an existing ThousandEyes account Within this account you will need to generate an account token to be used in the deployment of the containers. The host node will need sufficient resources to run the container including: 1.5-2GB of free RAM under normal operating conditions 3-5GB of free Disk Space CPU use will depend on the number of test being performed but as a general recommendation a 2-core machine that operates under 40% CPU utilization under normal conditions should be suitable The container will use the host node’s WAN IP information to connect to the ThousandEyes cloud. If behind a firewall ensure you follow ThousandEyes recommended firewall configuration. Additionally the container regularly attempt to upgrade its base Ubuntu packages via the public Canonical APT repositories via port 80. There does not appear to be a static list of IPs for these repositories. The container will run without but will log frequent warnings about failed upgrades. Trustgrid recommends running this container on node running versions newer than package version 1.5.20230302-1595 Note: ThousandEyes support does not officially support running their agent container on Trustgrid nodes because Trustgrid (like many other edge compute platforms) does not utilize the Docker runtime to run and manage containers. However, Trustgrid has successfully deployed and run this container in several environments. Container Image Management There are two ways that the ThousandEyes Enterprise Agent container published at hub.docker.com can be pulled down by a Trustgrid node to execute.\nPull Directly from hub.docker.com In this method, the Trustgrid node will attempt to connect directly to hub.docker.com.\nPros:\nQuick and easy to setup Cons:\nRequires all nodes to have port 443 access to hub.docker.com. This can be a challenge in highly secure environments. Limited ability to control the actual image being run. For example, if you utilize thousandeyes/enterprise-agent:latest, then any time a new version is pushed up with that tag the nodes will pull an updated version that you may not have tested. Pull from private Trustgrid repository Every customer organization is given a namespace in a private container repository hosted in the Trustgrid control plane, which nodes should already have access to. In this method, you first pull down the image to a system with docker running, log into your organization’s custom repository, tag the image in the correct namespace, and push the image back up.\nPros:\nMore secure. Provides control over what image is available and used. Cons:\nRequires a third device with docker running to pull/tag/push the image. Process (Optional) Push Container Image to Trustgrid Repository The steps below need to be performed on a machine with Docker installed and running. In the below :latest can be replaced by a specific version tag if desired. Login to your organization’s private repository. run the command docker pull thousandeyes/enterprise-agent:latest run the command docker tag thousandeyes/enterprise-agent:latest docker.trustgrid.io/\u003corgname\u003e.trustgrid.io/thousandeyes-enterprise-agent:latest being sure to replace \u003corgname\u003e with your organization’s Trustgrid domain. run the command docker push docker.trustgrid.io/\u003corgname\u003e.trustgrid.io/thousandeyes-enterprise-agent:latest Create Required Volumes The ThousandEyes container requires three persistent volumes.\nIn the Trustgrid portal navigate to the node or cluster where you want to run the containers. Select the Container Management → Volumes panel. Use the Add Volume button to create the three volumes listed below. te-agent-lib te-agent-logs te-browserbot-lib Configure the Container Navigate to Container Management → Containers\nCreate the Container Click Add Container Give the container a name Leave Execution Type as “On Demand” Select the image If you followed the above process to push the image to your private repository: From the image drop down select the image you pushed to the Trustgrid repository above. \u003corgname\u003e.trustgrid.io/thousandeyes-enterprise-agent From the tag drop down select latest (or the version tag you applied) If you chose to pull directly from hub.docker.com: Enter thousandeyes/enterprise-agent in the image section Leave latest in the tag field unless you want to specify a different version tag published Click Save In the Containers table, click the link to open the properties of the newly defined container and proceed to the steps below to complete the configuration Configure Environmental Variables In the Environmental Variables Section\nAdd a variable named TEAGENT_ACCOUNT_TOKEN The value will need to be the account group token generated within your ThousandEyes portal Add a variable named TEAGENT_INET with a value of 4 (Optional) the HOSTNAME variable can be defined to determine the name used to register the agent in the ThousandEyes system. By default it will register using the the hostname of the Trustgrid node.\nEnvironmental Variables Add Volume Mounts You will need to add the following Mounts to the container.\nType Source Destination Volume te-agent-lib /var/lib/te-agent Volume te-agent-logs /var/log/agent Volume te-browserbot-lib /var/lib/te-browserbot Click Add Entry Select Volume as the type Select the Source Volume you created earlier Copy and paste the destination from the table above Click the green arrow to save the entry Repeat with the other two mounts Click the Save button\nVolume Mounts Set Resource Limits Resource Limits are intended to reduce the risk of the container consuming CPU, Memory or IO resources to the point they impact other services on the node such as VPN traffic. The below settings are based on the resource available on a dual core device with 4GB of total memory with no other containers running and moderate levels of VPN traffic. Other device types may warrant different settings Enter 40 for the CPU Max % Enter 1536 for the Memory Max (granting up to 1.5G of RAM) Enter 1024 for the Memory High (this will attempt to limit the container to 1G of RAM) Leave the IO and Limits settings blank. Click Save Resource Limits for a device with 4G of available memory Linux Capabilities The ThousandEyes Agent container needs the NET_ADMIN and SYS_ADMIN capabilities to function as expected.\nClick Add Entry From the list select NET_ADMIN and click the green checkbox to save Repeat to add SYS_ADMIN Click the Save button Test Container Functionality On Demand containers only run when specifically started via the Trustgrid control plane. This is idea for testing the configuration before setting the containers to run as a service\nNavigate to the new container’s Overview page If the container was defined at the Cluster level, navigate to one of the member nodes’ Container Management → Containers page and click on the container. Usually best to start with the standby member if the cluster is in production Click the “Start” button A new window should pop-up (if not check to see if you browser is blocking pop-ups). The container will: The first time the container is run it will download the container image. The ThousandEyes agent container is ~1.2G at this time so it can take a while depending on available. Subsequent starts will only check to see if new layers are available. Start the container and display the standard output After the container has started, log into your ThousandEyes account and confirm you see the Enterprise Agent listed. Stop the running container by clicking the Terminate button. (Optionally) If working with a cluster repeat the above with the steps with the other cluster member. Set the Container to Service Once satisfied the containers are running as expected you’ll want to set the container to run as a Service so that it stays running at all times\nNavigate to Container Management → Containers and select the ThousandEyes container If dealing with clustered nodes do this from the Cluster page On the Overview page change the Execution Type from “On Demand” to “Service Click Save After a minute or two you should be able to click the Logs button to confirm the container started ","categories":"","description":"","excerpt":"Description Running the ThousandEyes Enterprise Agent from remote …","ref":"/tutorials/containers/thousand-eyes/","tags":"","title":"Deploying ThousandEyes Enterprise Agent Container on Trustgrid"},{"body":" The Traffic Capture tool performs a traffic capture on the selected node, which can help troubleshoot connectivity issues.\nSummary The Sniff Interface Traffic tool allows you to monitor traffic in realtime but there are certain instances where you need to be able to capture traffic to a file for further analysis. For example, intermittent issues may require leaving a capture running for an unknown period of time. Or, perhaps you need to review the application data within the packet payload.\nThe Traffic Capture is started with a standard tcpdump filter, just like the sniff interface tool, and has a max capture file size. Once the capture is stopped the captured data is written to .pcap files which can then be transferred for review.\nThe pcap files will include part of the data payload of any communication captured. If a non-encrypted protocol (such as HTTP or FTP) is used this could be visible in clear text. High-Level Process The capture is started by the user While the capture is running the pcap files are created in a temporary location on the node. When the capture is stopped the capture files are moved into the /home/tgguest/captures directory and ownership is transferred to the tgguest user. Access to Traffic Capture Because of the risk of data being visible, there are several restrictions and controls in place:\nThe permission to run this tool (node-advanced::service:tg-capture) must be granted on a per-user basis in a custom policy. Not even administrators have this feature by default. Example policy with tg-capture allowed Trustgrid employees are specifically denied the ability to run this tool. Trustgrid employees are not permitted to view data transferred through our devices, so please do not send us the resulting pcap files. Using Traffic Capture Starting Traffic Capture Log in to the Trustgrid portal and navigate to the node you want to capture traffic from. Select Interfaces under the Network section. On the right side under Interface Tools use the dropdown to select Traffic Capture. . The capture tool prompt will be displayed. Select the interface to capture from using the dropdown and enter a filter if desired. Click the start button to begin capturing. Traffic Capture management popup Field Name Description Status Will display Stopped if the capture is idle or Running if there is an active capture. Interface This dropdown field will list the available interfaces. Select the one with the traffic you wish to capture Filter Input a valid tcpdump filter to limit the captured traffic to only what is desired. An overly broad filter can cause the capture file to fill quickly and overwrite older data.\nSee useful filters below for additional information.\nMax Capture Size (MB) Specify the maximum size in megabytes for the pcap capture files. If this number is greater than 10MB the capture will be divided into the appropriate number of 10MB files to make the captures more manageable. The maximum total size allowed is 1000MB (1G) which would be split into one hundred 10MB files. Delete Files On Start If selected any existing pcap files in the captures directory will be deleted. This allows the user to be certain all capture files are related to the most recent run, and manages disk space consumption from multiple runs. Click the start button to begin capturing traffic. A message will display to indicate the capture has started. The Traffic Capture dialogue can be closed and the capture will continue running in the background. Traffic capture started message Stopping Traffic Capture Once it is believe the desired traffic has been captured you will need to stop the running capture to get access to the pcap files.\nLog in to the Trustgrid portal and navigate to the node you want to capture traffic from. Select Interfaces under the Network section. On the right side under Interface Tools use the dropdown to select Traffic Capture. . Click the Stop button to end the capture. A message will display to indicate the capture has stopped and the files are being written. Transfer PCAP Files Now that you have created the pcap files you will need to transfer them somewhere for analysis. The Trustgrid node has standard file transfer clients installed including scp, sftp, and ftp.\nOn a Local Network If the destination file server is on the local network of the node you will use the standard Terminal tool to run the file transfer commands.\nNavigate to the node Open a terminal from the toolbar at the top right You will need to ensure that:\nThe node has a valid route to the destination server’s network Any firewall between the node and destination server allows the traffic The destination server is configured to allow the node IP to connect Once you are in the terminal with the above configured an example scp command would look something like scp ~/captures/capture-2021-07-16_17-59-23.pcap0 username@172.16.100.10:/captures/capture-2021-07-16_17-59-23.pcap.\nAcross the Virtual Network If the destination file server is across a Trustgrid virtual network you will need to use the VPN Admin terminal to run the file transfer commands. This uses the nodes configured Virtual Management IP to communicate to remote resources.\nNavigate to the node\nSelect the VPN panel. You may need to select the virtual network to use, if your device is connected to multiple.\nSelect the Admin Terminal button from the tools dropdown.\nYou will need to ensure that:\nThe node has a virtual management IP assigned. The tool will not launch without this. A route for the virtual management IP exists in the virtual network route table. On the destination node, a 1:1 NAT exists for the destination file server assigning it to a virtual IP. A route that includes the destination file server’s VIP exists in the network route table. A virtual network access policy exists that allows the source node’s virtual management IP to connect to the destination file server’s VIP on the required port for your protocol. The destination side node has a valid route to the destination server’s network. Any firewall between the node and destination server allows the traffic. The destination is configured to allow the node IP to connect. Once you are in the admin terminal with the above configured, an example SCP command would look like scp ~/captures/capture-2021-07-16_17-59-23.pcap0 username@10.200.100.10:/captures/capture-2021-07-16_17-59-23.pcap.\nUseful Filters The below filters can be combined using “and” \u0026 “or” without quotes\nYou can filter based on protocol such as “tcp”, “udp”, or “icmp” without quotes Best practice is to filter for what you want to see rather than filter out what you don’t want to see To see only traffic for a specific host use “host x.x.x.x” with the IP address in place of the x.x.x.x To see only traffic for a specific port use “port XXXX” replacing the XXXX with the desired port number If capturing traffic on a clustered node, you should filter out the cluster port traffic. Typically port 9000 or 1975. E.g., not port 9000 If capturing on the ETH0 - WAN Interface, you should filter out traffic to both Trustgrid’s network (35.171.100.16/28) and your data plane gateways’ network or public IP. You’ll need to identify the actual network or IPs. E.g., not net 35.171.100.16/28 and not net X.X.X.X/X or not net 35.171.100.16/28 and not host X.X.X.X. ","categories":"","description":"Capture interface traffic to a pcap file for analysis","excerpt":"Capture interface traffic to a pcap file for analysis","ref":"/tutorials/interface-tools/traffic-capture/","tags":"","title":"Traffic Capture"},{"body":"Tools on this page allow for additional troubleshooting. Troubleshooting Menu View Node Logs This utility opens the Trustgrid service logs in a text viewer in follow mode so new lines will be displayed as written to the log file.\nTo exit follow mode hit control + C. You can then use arrow keys to move up and down through the log file.\nTo return to the Troubleshooting menu hit control + C (if you haven’t already) and then input :q and hit return.\nPush Node Logs This command will attempt to zip up logs and push them up to the Trustgrid control plane. If successful these will be available in the node’s debug logs. This requires a valid IP configuration with access to the Trustgrid control plane. Specifically port 443 access to repo.trustgrid.io. Force Upgrade This command will attempt to upgrade the Trustgrid service to the latest published version. This requires a valid IP configuration with access to the Trustgrid control plane. Specifically port 443 access to repo.trustgrid.io. Restart Node Service This will restart the Trustgrid service on the node. This is faster than a full reboot but may not clear any OS related issues.\nReboot Node Hardware This will perform a complete operating system reboot of the Trustgrid appliance.\nNetwork Tools Shell This will open a shell terminal that allows for running a very limited number of commands to perform troubleshooting.\nInput exit at the command line to exit the shell and return to the troubleshooting menu. These commands include:\ncat less groups ls nslookup use this to confirm DNS resolution is working with a command like nslookup repo.trustgrid.io or to specify a DNS server with a command like nslookup repo.trustgrid.io 8.8.8.8 which will use Google’s DNS server ping telnet - use this to confirm connectivity with a command like telnet repo.trustgrid.io 443 traceroute mtr - this is a more robust version of traceroute and can be used to confirm connectivity with a command like mtr repo.trustgrid.io nc use this to confirm connectivity with a command like nc -vz repo.trustgrid.io 443 or confirm connectivity with a specific gateway IP address and port with a command like `nc -vz 35.171.100.16 8443\" openssl - this can be use to confirm a nothing is interfering with a valid TLS connection and view the certificates used with a command like openssl s_client -connect repo.trustgrid.io:443 -showcerts | less (use :q to exit) curl ip ip link or ip l lists the connection status of all interfaces ip address or ip a lists the IP addresses assigned to all interfaces append show \u003cinterface name\u003e to either of the above to limit to a specific interface. e.g. ip a show enp0s20f0 ip route lists the current OS routing table dig for confirming DNS resolution dig repo.trustgrid.io +short will provide just the IP address using the configured DNS servers dig @8.8.8.8 repo.trustgrid.io +short will query Google’s DNS server directly and provide the IP address sudo tcpdump - use this to capture traffic on the network interface. For example, to capture traffic on the eth0 interface use a command like sudo tcpdump -i eth0. If you are unsure of the interface names you can check the portal or run ip a to see all the interfaces and their IP addresses. ARPing This command can be used to confirm layer 2 connectivity between the Trustgrid appliance and other devices on the same network. For example, to confirm the default gateway IP address is reachable use a command like arping -I eth0 192.168.127.1. This will send an ARP request to the default gateway IP address and display the resulting MAC address.\nIf you do not get a response or get an unexpected MAC address then layer 2 connectivity is not working. Verify the Trustgrid node is connected the intended network and/or VLAN.\nAdvanced Tools The tools below should only be used if directed by Trustgrid support. Force Backup Mode Force Diagnostic Mode Exit from Backup/Diagnostics Update JVM Memory Update JVM Garbage Collection ","categories":"","description":"Additional tools for troubleshooting connectivity","excerpt":"Additional tools for troubleshooting connectivity","ref":"/tutorials/local-console-utility/troubleshooting/","tags":"","title":"Troubleshooting Menu"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/tunnels/","tags":"","title":"Tunnels"},{"body":"The trial requires users have access to two instances of Ubuntu 22.04 LTS (Jammy Jellyfish) to on which the Trustgrid agent is installed. There are numerous ways to acheive this, but below are a few methods to streamline the process.\nDeploy on AWS The below methods assume you have access to an AWS account. The EC2 resources required fall under the AWS Free Tier program so costs should be minimal.\nAWS via Terraform Users familiar with Hashicorp Terraform can spin up EC2 instances in multiple regions using the below Terraform example.\nRequirements Terraform installed AWS CLI with a profile configured. The below process assumes you name this profile default SSH key pair with both private and public key. The below assumes the keys are located in your home SSH directory (~/.ssh) and called mykey(private key) and mykey.pub (public key) Terraform Deploy Process Create a new directory With your preferred text editor, copy the below terraform code into a new file and save as main.tf. From a terminal run the below commands: terraform init terraform apply -var=\"admin_ssh_key_pub=$(cat ~/.ssh/mykey.pub)\" -var=\"aws_profile='default' (Replace the public key path and aws_profile name as needed) When prompted, enter yes to create all the defined resources. Terraform will output the public IP addresses of the two EC2 instances. Connect to both instances with a command like ssh -i ~/.ssh/mykey ubuntu@ipaddress and proceed with the inital agent setup Be sure to Terraform cleanup process below to remove all resources to avoid incurring AWS costs Terraform Code terraform { required_providers { aws = { source = \"hashicorp/aws\" version = \"\u003e= 5.31.0\" } } } provider \"aws\" { alias = \"agent1\" region = var.aws_region_agent1 profile = var.aws_profile } provider \"aws\" { alias = \"agent2\" region = var.aws_region_agent2 profile = var.aws_profile } variable \"aws_profile\" { type = string default = \"default\" description = \"Name of configured AWS Profile using the aws cli command\" } variable \"aws_region_agent1\" { type = string default = \"us-east-1\" description = \"AWS region to create first agent\" } variable \"aws_region_agent2\" { type = string default = \"us-west-1\" description = \"AWS region to create second agent\" } variable \"agent1_name_prefix\" { type = string default = \"agent1\" description = \"Name useds for creating all aws resources related to agent1\" } variable \"agent2_name_prefix\" { type = string default = \"agent2\" description = \"Name useds for creating all aws resources related to agent2\" } variable \"admin_ssh_key_pub\" { type = string description = \"Public key added to EC2 instances authorized_keys for ssh access\" } variable \"instance_type\" { type = string default = \"t2.micro\" description = \"EC2 Instance Type for the deployed instances to host the Trustgrid agent\" } resource \"aws_key_pair\" \"agent1_key_pair\" { provider = aws.agent1 key_name = \"${var.agent1_name_prefix}-key\" public_key = var.admin_ssh_key_pub } resource \"aws_vpc\" \"agent1_vpc\" { provider = aws.agent1 cidr_block = \"10.0.0.0/16\" enable_dns_support = \"true\" #gives you an internal domain name enable_dns_hostnames = \"true\" #gives you an internal host name instance_tenancy = \"default\" tags = { Name = \"${var.agent1_name_prefix}-vpc\" } } resource \"aws_subnet\" \"agent1_subnet_public_1\" { provider = aws.agent1 vpc_id = aws_vpc.agent1_vpc.id cidr_block = \"10.0.1.0/24\" map_public_ip_on_launch = \"true\" //it makes this a public subnet tags = { Name = \"${var.agent1_name_prefix}-subnet-public-1\" } } resource \"aws_route_table\" \"agent1_subnet_public_1_rt\" { provider = aws.agent1 vpc_id = aws_vpc.agent1_vpc.id tags = { Name = \"${var.agent1_name_prefix}-subnet-public-1-rt\" } } resource \"aws_route_table_association\" \"agent1_subnet_public_1_rt_assoc\" { provider = aws.agent1 subnet_id = aws_subnet.agent1_subnet_public_1.id route_table_id = aws_route_table.agent1_subnet_public_1_rt.id } resource \"aws_internet_gateway\" \"agent1_igw\" { provider = aws.agent1 vpc_id = aws_vpc.agent1_vpc.id tags = { Name = \"${var.agent1_name_prefix}-igw\" } } resource \"aws_route\" \"agent1_internet\" { provider = aws.agent1 route_table_id = aws_route_table.agent1_subnet_public_1_rt.id destination_cidr_block = \"0.0.0.0/0\" gateway_id = aws_internet_gateway.agent1_igw.id } resource \"aws_default_security_group\" \"agent1_default\" { provider = aws.agent1 vpc_id = aws_vpc.agent1_vpc.id tags = { Name = \"${var.agent1_name_prefix}-default-sg\" } } resource \"aws_vpc_security_group_egress_rule\" \"agent1_allow_all_out\" { provider = aws.agent1 cidr_ipv4 = \"0.0.0.0/0\" from_port = \"-1\" to_port = \"-1\" ip_protocol = \"-1\" security_group_id = aws_default_security_group.agent1_default.id description = \"Allow all traffic outbound\" } resource \"aws_vpc_security_group_ingress_rule\" \"agent1_allow_all_vpc\" { provider = aws.agent1 ip_protocol = \"-1\" from_port = \"-1\" to_port = \"-1\" referenced_security_group_id = aws_default_security_group.agent1_default.id security_group_id = aws_default_security_group.agent1_default.id description = \"Allow all traffic within VPC\" } resource \"aws_vpc_security_group_ingress_rule\" \"agent1_allow_ssh\" { provider = aws.agent1 ip_protocol = \"tcp\" from_port = 22 to_port = 22 cidr_ipv4 = \"0.0.0.0/0\" description = \"Allow SSH from any IP. NOT RECOMMENDED FOR PRODUCTION\" security_group_id = aws_default_security_group.agent1_default.id } data \"aws_ami\" \"agent1_ubuntu\" { provider = aws.agent1 most_recent = true filter { name = \"name\" values = [\"ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*\"] } filter { name = \"virtualization-type\" values = [\"hvm\"] } owners = [\"099720109477\"] # Canonical's owner ID } resource \"aws_instance\" \"agent1\" { provider = aws.agent1 ami = data.aws_ami.agent1_ubuntu.id instance_type = var.instance_type associate_public_ip_address = true subnet_id = aws_subnet.agent1_subnet_public_1.id key_name = aws_key_pair.agent1_key_pair.key_name security_groups = [ aws_default_security_group.agent1_default.id ] tags = { Name = var.agent1_name_prefix } lifecycle { ignore_changes = [ security_groups, tags ] } } output \"agent1_public_ip\" { value = aws_instance.agent1.public_ip description = \"Public IP address for the agent1 EC2 instances\" } resource \"aws_key_pair\" \"agent2_key_pair\" { provider = aws.agent2 key_name = \"${var.agent2_name_prefix}-key\" public_key = var.admin_ssh_key_pub } resource \"aws_vpc\" \"agent2_vpc\" { provider = aws.agent2 cidr_block = \"10.0.0.0/16\" enable_dns_support = \"true\" #gives you an internal domain name enable_dns_hostnames = \"true\" #gives you an internal host name instance_tenancy = \"default\" tags = { Name = \"${var.agent2_name_prefix}-vpc\" } } resource \"aws_subnet\" \"agent2_subnet_public_1\" { provider = aws.agent2 vpc_id = aws_vpc.agent2_vpc.id cidr_block = \"10.0.1.0/24\" map_public_ip_on_launch = \"true\" //it makes this a public subnet tags = { Name = \"${var.agent2_name_prefix}-subnet-public-1\" } } resource \"aws_route_table\" \"agent2_subnet_public_1_rt\" { provider = aws.agent2 vpc_id = aws_vpc.agent2_vpc.id tags = { Name = \"${var.agent2_name_prefix}-subnet-public-1-rt\" } } resource \"aws_route_table_association\" \"agent2_subnet_public_1_rt_assoc\" { provider = aws.agent2 subnet_id = aws_subnet.agent2_subnet_public_1.id route_table_id = aws_route_table.agent2_subnet_public_1_rt.id } resource \"aws_internet_gateway\" \"agent2_igw\" { provider = aws.agent2 vpc_id = aws_vpc.agent2_vpc.id tags = { Name = \"${var.agent2_name_prefix}-igw\" } } resource \"aws_route\" \"agent2_internet\" { provider = aws.agent2 route_table_id = aws_route_table.agent2_subnet_public_1_rt.id destination_cidr_block = \"0.0.0.0/0\" gateway_id = aws_internet_gateway.agent2_igw.id } resource \"aws_default_security_group\" \"agent2_default\" { provider = aws.agent2 vpc_id = aws_vpc.agent2_vpc.id tags = { Name = \"${var.agent2_name_prefix}-default-sg\" } } resource \"aws_vpc_security_group_egress_rule\" \"agent2_allow_all_out\" { provider = aws.agent2 cidr_ipv4 = \"0.0.0.0/0\" from_port = \"-1\" to_port = \"-1\" ip_protocol = \"-1\" security_group_id = aws_default_security_group.agent2_default.id description = \"Allow all traffic outbound\" } resource \"aws_vpc_security_group_ingress_rule\" \"agent2_allow_all_vpc\" { provider = aws.agent2 ip_protocol = \"-1\" from_port = \"-1\" to_port = \"-1\" referenced_security_group_id = aws_default_security_group.agent2_default.id security_group_id = aws_default_security_group.agent2_default.id description = \"Allow all traffic within VPC\" } resource \"aws_vpc_security_group_ingress_rule\" \"agent2_allow_ssh\" { provider = aws.agent2 ip_protocol = \"tcp\" from_port = 22 to_port = 22 cidr_ipv4 = \"0.0.0.0/0\" description = \"Allow SSH from any IP. NOT RECOMMENDED FOR PRODUCTION\" security_group_id = aws_default_security_group.agent2_default.id } data \"aws_ami\" \"agent2_ubuntu\" { provider = aws.agent2 most_recent = true filter { name = \"name\" values = [\"ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*\"] } filter { name = \"virtualization-type\" values = [\"hvm\"] } owners = [\"099720109477\"] # Canonical's owner ID } resource \"aws_instance\" \"agent2\" { provider = aws.agent2 ami = data.aws_ami.agent2_ubuntu.id instance_type = var.instance_type associate_public_ip_address = true subnet_id = aws_subnet.agent2_subnet_public_1.id key_name = aws_key_pair.agent2_key_pair.key_name security_groups = [ aws_default_security_group.agent2_default.id ] tags = { Name = var.agent2_name_prefix } lifecycle { ignore_changes = [ security_groups, tags ] } } output \"agent2_public_ip\" { value = aws_instance.agent2.public_ip description = \"Public IP address for the agent2 EC2 instances\" } The terraform code above includes a number of variables with default values that can be overridden if desired. Most notably aws_region_agent1 and aws_region_agent2 which control where each of the agents is deployed. Feel free to adjust these variables as desired. Terraform Cleanup Open a terminal and navigate to the directory you created the main.tf Terraform file during the initial deployment. Run the command terraform destroy -var=\"admin_ssh_key_pub=$(cat ~/.ssh/mykey.pub)\" -var=\"aws_profile='default'. When prompted enter yes. Terraform will proceed to terminate the EC2 instances and delete all the associated VPC resources.\n","categories":"","description":"Details methods for deploying Ubuntu instances required for the trial steps","excerpt":"Details methods for deploying Ubuntu instances required for the trial …","ref":"/getting-started/trial/base-setup/ubuntu2204/","tags":"","title":"Deploying Ubuntu VMs"},{"body":"How an Agent Node Upgrades The Trustgrid agent upgrade process will depend on the operating system the agent runs on. For the most part the process will include:\nGaining console access to the agent host system either via SSH or local console Running a package management tool to update the agent software package Restarting the agent service if not done automatically by the package manager Restarting the agent service is important to ensure it loads the latest configuration and starts with the updated code but will disrupt traffic across the node. Agent Upgrade Process on Linux Upgrade Ubuntu-based Agent Gain console access to the agent host system via SSH or local console with a user with sudo access to run the below commands. Run the command sudo apt update \u0026\u0026 sudo DEBIAN_FRONTEND=noninteractive apt-get install -y tg-agent Copy The above command will refresh the package list and install the latest version of the tg-agent package. This will automatically restart the tg-agent service. ","categories":"","description":"Learn how to upgrade Trustgrid Agent nodes to get the latest features and security upgrades.","excerpt":"Learn how to upgrade Trustgrid Agent nodes to get the latest features …","ref":"/tutorials/management-tasks/agent-mgmt/upgrade-agent/","tags":"","title":"Upgrade Trustgrid Agent Nodes"},{"body":"Usage Login to the Trustgrid portal and navigate to the Node from which you want to test connectivity.\nSelect VPN under the Network section.\nClick the Tools button and click the View Virtual Routes button\nA table will appear with routing information for the node.\nAnalyzing the Route Table Route Availability If a route is available, its Active column will show a green up arrow (). If a route is not available, its Active column will show a red down arrow ().\nRoute Preference Routes will be selected based on the following order:\nIn overlapping routes, the most specific route wins. For example, 10.20.0.51/32 takes precedence over 10.20.0.0/24. If multiple matching routes exist, the route with the lowest metric wins. For example, a metric of 1 takes precedence over a metric of 50. ","categories":"","description":"View the routing table on a node","excerpt":"View the routing table on a node","ref":"/tutorials/remote-tools/view-virtual-route-table/","tags":"","title":"View Virtual Route Table"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/virtual-machines/","tags":"","title":"Virtual Machines"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/virtual-machines/","tags":"","title":"Virtual Machines"},{"body":" A virtual network tunnel interface can be configured on a Trustgrid node or cluster to allow the forwarding of traffic to a remote Trustgrid Node or Cluster that is attached to the same virtual network. The tunnel interface is associated with a VRF which is used to define and control what traffic is allowed to pass and how it should appear on the network. There is no attachment of the vnet interface to a node interface required but the virtual network does need to be attached to the node or cluster before the tunnel interface is created.\nConfigure VNET Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu, select Add Tunnel, and then select VNET\nConfiguration Parameters Field Name Description Name the name of the tunnel interface created on the Trustgrid Node or Cluster Description (optional) descriptive parameters related to the tunnel Virtual Network the Trustgrid virtual network the tunnel is being associated with. The virtual network should already be attached to the node or cluster to be selectable. VRF The VRF the tunnel is being associated with. Only VRF’s which exist on the Trustgrid Node or Cluster can be selected. MTU the maximum transmission unit (MTU) size of the tunnel interface. Typically the default of 1430 should be used. ","categories":["node"],"description":"Configure a tunnel interface representing the Trustgrid virtual network to allow for connections to VRFs","excerpt":"Configure a tunnel interface representing the Trustgrid virtual …","ref":"/docs/nodes/appliances/tunnels/vnet/","tags":["tunnels","networking"],"title":"VNET"},{"body":"Volumes allow containers to persist data between executions.\nCreate a Volume Volumes have the following fields:\nField Name Description Name The name of the volume. Encrypted Whether or not to encrypt the volume. Encrypted volumes The type of volume. Location Optionally, specify a location in the node data store. ","categories":"","description":"Configure volumes on nodes for use by containers for persistent storage","excerpt":"Configure volumes on nodes for use by containers for persistent …","ref":"/docs/nodes/appliances/containers/volumes/","tags":"","title":"Volumes"},{"body":"Volumes are used to allocate disks or to attach CD-ROMs to virtual machines.\nField Name Description Name Name for the volume. Device Type Virtual machine type.\nDisk CD-ROM Device Bus Bus for the device.\nIDE VirtIO SCSI SATA Size (Only for Disk) Size in GB, MB, KB, or Bytes for the disk. Disk Provisioning (Only for Disk) Allocation method used for provisioning a disk.\nThin Provision - Disk starts small and expands as more disk space is required up to the size specified. Use this format to save storage space. Thick Provision Lazy Zeroed - Space required for the virtual disk is allocated when the virtual disk is created. Data that remains on the physical device is not erased during creation, but is zeroed out on demand at a later time on first write from the virtual machine. Thick Provision Eager Zeroed - Space required for the virtual disk is allocated at creation time. The data remaining on the physical device is zeroed out when the virtual disk is created. It might take much longer to create disks in this format than to create other types of disks. Encrypted (Only for Disk) True if disk should be encrypted, false otherwise. ISO File (Only for CD-ROM) ISO file selected from the node data store. Windows virtual machines do not support thin provisioned disks. ","categories":["virtual machines"],"description":"Configure and manage KVM volumes","excerpt":"Configure and manage KVM volumes","ref":"/docs/nodes/appliances/kvm/volumes/","tags":"","title":"Volumes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/vrfs/","tags":"","title":"VRFs"},{"body":"","categories":"","description":"WireGuard application for providing remote access to users","excerpt":"WireGuard application for providing remote access to users","ref":"/docs/applications/wireguard/","tags":"","title":"Wireguard Remote Access"},{"body":" A WireGuard tunnel interface can be configured to allow a WireGuard client to connect to a Trustgrid Node running as a WireGuard server. The tunnel interface is associated with a VRF which is used to define and control what traffic is allowed to pass and how it should appear on the network.\nConfigure WireGuard Tunnel On a Trustgrid Node navigate to Tunnels under the Network Menu, select Add Tunnel, and then select WireGuard\nWireGuard Configuration Parameters Field Name Description Name The name of the WireGuard tunnel interface created on the Trustgrid node or cluster. Description Optional field used to document what clients are utilizing the tunnel. Interface IP The IP address in CIDR notation that will be assigned to the node’s WireGuard tunnel interface. Public Key The public key of the remote WireGuard client. Pre-shared Key Optional 256-bit to provide an additional level of security. VRF The Virtual Routing and Forwarding (VRF) table of the WireGuard tunnel will be attached to MTU The maximum transmission unit (MTU) of the WireGuard tunnel interface. Defaults of 1430 or lower are recommended. Example Client Config As you configure a WireGuard tunnel interface the portal UI will automatically generate an example WireGuard configuration for the peer/client based on the information provided.\nExample WireGuard client config Note: this is only a partial config. You will likely need to adjust the AllowedIps and other fields to meet the needs of the configured tunnel. ","categories":["node"],"description":"Configure WireGuard tunnels to allow client connectivity via the WireGuard protocol","excerpt":"Configure WireGuard tunnels to allow client connectivity via the …","ref":"/docs/nodes/appliances/tunnels/wireguard/","tags":["tunnels","networking"],"title":"WireGuard"}]